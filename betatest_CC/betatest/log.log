2021-07-12 12:56:23  [ Thread-0:server.network.ServerThread:61 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-12 12:56:23  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:56:23  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-24
2021-07-12 12:56:23  [ JavaFX Application Thread:client.model.Client:767 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-12 12:56:23  [ Thread-0:server.network.ServerThread:102 ] - [ INFO ]  welcome info printed
2021-07-12 12:56:23  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:56:23  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":33}}Thread-24
2021-07-12 12:56:23  [ JavaFX Application Thread:client.model.Client:771 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":33}}JavaFX Application Thread
2021-07-12 12:56:23  [ JavaFX Application Thread:client.model.Client:775 ] - [ INFO ]  33
2021-07-12 12:56:23  [ JavaFX Application Thread:client.model.Client:776 ] - [ INFO ]  your clientID is: 33
2021-07-12 12:56:43  [ JavaFX Application Thread:client.model.Client:1213 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"ilja","figure":1}}
2021-07-12 12:56:43  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"ilja","figure":1}}
2021-07-12 12:56:43  [ Thread-0:protocol.ExecuteOrder:68 ] - [ INFO ]  check player figures
2021-07-12 12:56:43  [ Thread-0:protocol.ExecuteOrder:76 ] - [ INFO ]  addPlayer
2021-07-12 12:56:43  [ Thread-0:server.network.Server:246 ] - [ INFO ]  server added player
2021-07-12 12:56:43  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:56:43  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"ilja","figure":1}}Thread-24
2021-07-12 12:56:43  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"ilja","figure":1}}JavaFX Application Thread
2021-07-12 12:56:43  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 12:56:43  [ JavaFX Application Thread:client.model.Client:799 ] - [ INFO ]  flag launchen window
2021-07-12 12:58:07  [ Thread-1:server.network.ServerThread:61 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-12 12:58:07  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:07  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-33
2021-07-12 12:58:08  [ JavaFX Application Thread:client.model.Client:767 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-12 12:58:08  [ Thread-1:server.network.ServerThread:102 ] - [ INFO ]  welcome info printed
2021-07-12 12:58:08  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:08  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":100}}Thread-33
2021-07-12 12:58:08  [ JavaFX Application Thread:client.model.Client:771 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":100}}JavaFX Application Thread
2021-07-12 12:58:08  [ JavaFX Application Thread:client.model.Client:775 ] - [ INFO ]  100
2021-07-12 12:58:08  [ JavaFX Application Thread:client.model.Client:776 ] - [ INFO ]  your clientID is: 100
2021-07-12 12:58:12  [ JavaFX Application Thread:client.model.Client:1213 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"asd","figure":2}}
2021-07-12 12:58:12  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"asd","figure":2}}
2021-07-12 12:58:12  [ Thread-1:protocol.ExecuteOrder:68 ] - [ INFO ]  check player figures
2021-07-12 12:58:12  [ Thread-1:protocol.ExecuteOrder:76 ] - [ INFO ]  addPlayer
2021-07-12 12:58:12  [ Thread-1:server.network.Server:246 ] - [ INFO ]  server added player
2021-07-12 12:58:12  [ Thread-1:server.network.Server:264 ] - [ INFO ]  server added player
2021-07-12 12:58:12  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:12  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:12  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"asd","figure":2}}Thread-24
2021-07-12 12:58:12  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"asd","figure":2}}Thread-33
2021-07-12 12:58:12  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"asd","figure":2}}JavaFX Application Thread
2021-07-12 12:58:12  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"asd","figure":2}}JavaFX Application Thread
2021-07-12 12:58:12  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:12  [ Thread-1:server.network.Server:264 ] - [ INFO ]  server added player
2021-07-12 12:58:12  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 12:58:12  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 12:58:12  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"ilja","figure":1}}Thread-33
2021-07-12 12:58:12  [ JavaFX Application Thread:client.model.Client:799 ] - [ INFO ]  flag launchen window
2021-07-12 12:58:12  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:12  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"asd","figure":2}}Thread-33
2021-07-12 12:58:13  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"ilja","figure":1}}JavaFX Application Thread
2021-07-12 12:58:13  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 12:58:13  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"asd","figure":2}}JavaFX Application Thread
2021-07-12 12:58:21  [ JavaFX Application Thread:client.model.Client:1229 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 12:58:21  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 12:58:21  [ Thread-0:protocol.ExecuteOrder:112 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-12 12:58:21  [ Thread-0:server.network.Server:278 ] - [ INFO ]  server inform player status
2021-07-12 12:58:21  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:21  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:21  [ Thread-0:server.network.Server:312 ] - [ INFO ]  server informs first ready player to select a map
2021-07-12 12:58:21  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-24
2021-07-12 12:58:21  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-12 12:58:21  [ Thread-0:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 1
2021-07-12 12:58:21  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-33
2021-07-12 12:58:21  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:21  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-12 12:58:21  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 12:58:21  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-24
2021-07-12 12:58:21  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-12 12:58:21  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:58:21  [ Thread-24:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-24
2021-07-12 12:58:21  [ Thread-24:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 12:58:21  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 12:58:21  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 12:58:21  [ JavaFX Application Thread:client.model.Client:829 ] - [ INFO ]  in client ListProperty [value: [Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister]]
2021-07-12 12:58:26  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:58:28  [ JavaFX Application Thread:client.model.Client:1272 ] - [ INFO ]  {"messageType":"MapSelected","messageBody":{"map":"Twister"}}
2021-07-12 12:58:28  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"MapSelected","messageBody":{"map":"Twister"}}
2021-07-12 12:58:28  [ Thread-0:protocol.ExecuteOrder:146 ] - [ INFO ]  set Map in ExecuteOrder
2021-07-12 12:58:28  [ Thread-0:server.network.Server:727 ] - [ INFO ]  server informs which map selected
2021-07-12 12:58:28  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:28  [ Thread-0:server.game.Game:240 ] - [ INFO ]  Game sets map.
2021-07-12 12:58:28  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:28  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Twister"}}Thread-24
2021-07-12 12:58:28  [ Thread-0:server.maps.Board:492 ] - [ INFO ]  Board sets map of Twister.
2021-07-12 12:58:28  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Twister"}}Thread-33
2021-07-12 12:58:28  [ Thread-0:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 1
2021-07-12 12:58:31  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:58:31  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 12:58:31  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 12:58:31  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 12:58:31  [ Thread-24:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-24
2021-07-12 12:58:31  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:58:31  [ Thread-24:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 12:58:31  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 12:58:31  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 12:58:33  [ JavaFX Application Thread:client.model.Client:1229 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 12:58:33  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 12:58:33  [ Thread-1:protocol.ExecuteOrder:112 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-12 12:58:33  [ Thread-1:server.network.Server:278 ] - [ INFO ]  server inform player status
2021-07-12 12:58:33  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:33  [ Thread-1:server.network.Server:312 ] - [ INFO ]  server informs first ready player to select a map
2021-07-12 12:58:33  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:33  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-33
2021-07-12 12:58:33  [ Thread-1:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 2
2021-07-12 12:58:33  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-24
2021-07-12 12:58:33  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-12 12:58:33  [ Thread-1:protocol.ExecuteOrder:515 ] - [ INFO ]  number enough, to play
2021-07-12 12:58:33  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-12 12:58:33  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:33  [ Thread-1:protocol.ExecuteOrder:516 ] - [ INFO ]  clientIds: [33, 100]
2021-07-12 12:58:33  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-24
2021-07-12 12:58:33  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-12 12:58:33  [ JavaFX Application Thread:client.model.Client:829 ] - [ INFO ]  in client ListProperty [value: [Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister]]
2021-07-12 12:58:33  [ Thread-1:server.network.Server:327 ] - [ INFO ]  server sends map
2021-07-12 12:58:33  [ Thread-1:server.network.Server:344 ] - [ INFO ]  {"messageType":"CheckpointMoved","messageBody":{"checkpointID":1,"x":9,"y":1}}
2021-07-12 12:58:33  [ Thread-1:server.network.Server:344 ] - [ INFO ]  {"messageType":"CheckpointMoved","messageBody":{"checkpointID":2,"x":6,"y":6}}
2021-07-12 12:58:33  [ Thread-1:server.network.Server:344 ] - [ INFO ]  {"messageType":"CheckpointMoved","messageBody":{"checkpointID":3,"x":4,"y":1}}
2021-07-12 12:58:33  [ Thread-1:server.network.Server:344 ] - [ INFO ]  {"messageType":"CheckpointMoved","messageBody":{"checkpointID":4,"x":9,"y":8}}
2021-07-12 12:58:33  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:33  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:33  [ Thread-1:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 12:58:33  [ Thread-1:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 12:58:33  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 12:58:33  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"Twister","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["top"],"registers":null,"count":0},{"type":"Laser","isOnBoard":"6B","speed":0,"orientations":["bottom"],"registers":null,"count":1}],[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["top","right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["top","right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["bottom"],"registers":null,"count":0},{"type":"EnergySpace","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientatio2021-07-12 12:58:33  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"Twister","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["top"],"registers":null,"count":0},{"type":"Laser","isOnBoard":"6B","speed":0,"orientations":["bottom"],"registers":null,"count":1}],[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["top","right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["top","right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["bottom"],"registers":null,"count":0},{"type":"EnergySpace","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["left"],"registers":null,"count":0},{"type":"Laser","isOnBoard":"6B","speed":0,"orientations":["right"],"registers":null,"count":1}]],[[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["right"],"registers":null,"count":0},{"type":"Laser","isOnBoard":"6B","speed":0,"orientations":["left"],"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["top"],"registers":null,"count":0},{"type":"EnergySpace","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["right"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["top","right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["top","right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"6B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-24
ns":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["left"],"registers":null,"count":0},{"type":"Laser","isOnBoard":"6B","speed":0,"orientations":["right"],"registers":null,"count":1}]],[[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["right"],"registers":null,"count":0},{"type":"Laser","isOnBoard":"6B","speed":0,"orientations":["left"],"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["top"],"registers":null,"count":0},{"type":"EnergySpace","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["right"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["top","right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["top","right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"6B","speed":2,"orientations":["left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"6B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"6B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"6B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-33
2021-07-12 12:58:33  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:33  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:33  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CheckpointMoved","messageBody":{"checkpointID":1,"x":9,"y":1}}Thread-24
2021-07-12 12:58:33  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CheckpointMoved","messageBody":{"checkpointID":1,"x":9,"y":1}}Thread-33
2021-07-12 12:58:33  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:33  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:33  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CheckpointMoved","messageBody":{"checkpointID":2,"x":6,"y":6}}Thread-24
2021-07-12 12:58:33  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CheckpointMoved","messageBody":{"checkpointID":2,"x":6,"y":6}}Thread-33
2021-07-12 12:58:33  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:33  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:33  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CheckpointMoved","messageBody":{"checkpointID":3,"x":4,"y":1}}Thread-24
2021-07-12 12:58:33  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CheckpointMoved","messageBody":{"checkpointID":3,"x":4,"y":1}}Thread-33
2021-07-12 12:58:33  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:33  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:33  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CheckpointMoved","messageBody":{"checkpointID":4,"x":9,"y":8}}Thread-24
2021-07-12 12:58:33  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CheckpointMoved","messageBody":{"checkpointID":4,"x":9,"y":8}}Thread-33
2021-07-12 12:58:33  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:33  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:33  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-24
2021-07-12 12:58:33  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-33
2021-07-12 12:58:33  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:33  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:33  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 12:58:33  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-24
2021-07-12 12:58:33  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:58:33  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 12:58:33  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 12:58:33  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 12:58:33  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 12:58:36  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:58:38  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 12:58:39  [ JavaFX Application Thread:client.model.Client:1338 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":3}}
2021-07-12 12:58:39  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":3}}
2021-07-12 12:58:39  [ Thread-0:server.network.Server:386 ] - [ INFO ]  server informs set starting point
2021-07-12 12:58:39  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 12:58:39  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:39  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:39  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":3,"clientID":33}}Thread-24
2021-07-12 12:58:39  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":3,"clientID":33}}Thread-33
2021-07-12 12:58:39  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:39  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:39  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  0
2021-07-12 12:58:39  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 12:58:39  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  0
2021-07-12 12:58:39  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-24
2021-07-12 12:58:40  [ JavaFX Application Thread:client.model.Client:1338 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":1,"y":5}}
2021-07-12 12:58:40  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":1,"y":5}}
2021-07-12 12:58:40  [ Thread-1:server.network.Server:386 ] - [ INFO ]  server informs set starting point
2021-07-12 12:58:40  [ Thread-1:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 12:58:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:40  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:40  [ Thread-1:server.network.Server:745 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-12 12:58:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":1,"y":5,"clientID":100}}Thread-33
2021-07-12 12:58:40  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":1,"y":5,"clientID":100}}Thread-24
2021-07-12 12:58:40  [ Thread-1:protocol.ExecuteOrder:223 ] - [ INFO ]  after setting startPoint, priority list: [33, 100]
2021-07-12 12:58:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:40  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:40  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  1
2021-07-12 12:58:40  [ Thread-1:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 12:58:40  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  1
2021-07-12 12:58:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-33
2021-07-12 12:58:40  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-24
2021-07-12 12:58:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:40  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:40  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["MemorySwap","SpamBlocker"]}}Thread-24
2021-07-12 12:58:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["MemorySwap","SpamBlocker"]}}Thread-33
2021-07-12 12:58:40  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:40  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-24
2021-07-12 12:58:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 12:58:41  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:58:41  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 12:58:41  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 12:58:41  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 12:58:41  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:58:41  [ Thread-24:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-24
2021-07-12 12:58:41  [ Thread-24:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 12:58:41  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 12:58:41  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 12:58:43  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 12:58:43  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 12:58:43  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 12:58:43  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 12:58:43  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:58:43  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 12:58:43  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 12:58:43  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 12:58:43  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 12:58:46  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:58:47  [ JavaFX Application Thread:client.model.Client:1199 ] - [ INFO ]  {"messageType":"SendChat","messageBody":{"message":"yxc","to":-1}}
2021-07-12 12:58:47  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SendChat","messageBody":{"message":"yxc","to":-1}}
2021-07-12 12:58:47  [ Thread-0:protocol.ExecuteOrder:164 ] - [ INFO ]  message arrived server
2021-07-12 12:58:47  [ Thread-0:protocol.ExecuteOrder:193 ] - [ INFO ]  send message to all
2021-07-12 12:58:47  [ Thread-0:server.network.ServerThread:140 ] - [ INFO ]  {"messageType":"ReceivedChat","messageBody":{"message":"yxc","from":33,"isPrivate":false}}
2021-07-12 12:58:47  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:47  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:47  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ReceivedChat","messageBody":{"message":"yxc","from":33,"isPrivate":false}}Thread-24
2021-07-12 12:58:47  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ReceivedChat","messageBody":{"message":"yxc","from":33,"isPrivate":false}}Thread-33
2021-07-12 12:58:47  [ JavaFX Application Thread:client.model.Client:737 ] - [ INFO ]  received chat printed
2021-07-12 12:58:47  [ JavaFX Application Thread:client.model.Client:737 ] - [ INFO ]  received chat printed
2021-07-12 12:58:48  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 12:58:50  [ JavaFX Application Thread:client.model.Client:1199 ] - [ INFO ]  {"messageType":"SendChat","messageBody":{"message":"asd","to":-1}}
2021-07-12 12:58:50  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SendChat","messageBody":{"message":"asd","to":-1}}
2021-07-12 12:58:50  [ Thread-1:protocol.ExecuteOrder:164 ] - [ INFO ]  message arrived server
2021-07-12 12:58:50  [ Thread-1:protocol.ExecuteOrder:193 ] - [ INFO ]  send message to all
2021-07-12 12:58:50  [ Thread-1:server.network.ServerThread:140 ] - [ INFO ]  {"messageType":"ReceivedChat","messageBody":{"message":"asd","from":100,"isPrivate":false}}
2021-07-12 12:58:50  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 12:58:50  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 12:58:50  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ReceivedChat","messageBody":{"message":"asd","from":100,"isPrivate":false}}Thread-33
2021-07-12 12:58:50  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ReceivedChat","messageBody":{"message":"asd","from":100,"isPrivate":false}}Thread-24
2021-07-12 12:58:50  [ JavaFX Application Thread:client.model.Client:737 ] - [ INFO ]  received chat printed
2021-07-12 12:58:50  [ JavaFX Application Thread:client.model.Client:737 ] - [ INFO ]  received chat printed
2021-07-12 12:58:51  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 12:58:51  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 12:58:51  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:58:51  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 12:58:51  [ Thread-2:server.network.Connected:73 ] - [ INFO ]  33 in first if print flagconnect: true
2021-07-12 12:58:51  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:58:51  [ Thread-24:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-24
2021-07-12 12:58:51  [ Thread-24:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 12:58:51  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 12:58:51  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 12:58:53  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 12:58:53  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 12:58:53  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 12:58:53  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 12:58:53  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 12:58:53  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:58:53  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 12:58:53  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 12:58:53  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 12:58:58  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:58:58  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 12:59:01  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 12:59:01  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 12:59:01  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 12:59:01  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:59:01  [ Thread-24:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-24
2021-07-12 12:59:01  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 12:59:01  [ Thread-24:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 12:59:01  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 12:59:03  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:59:03  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 12:59:03  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 12:59:03  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 12:59:03  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:59:03  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 12:59:03  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 12:59:03  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 12:59:03  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 12:59:03  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 12:59:08  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:59:08  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 12:59:11  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 12:59:11  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 12:59:11  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 12:59:11  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:59:11  [ Thread-24:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-24
2021-07-12 12:59:11  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 12:59:11  [ Thread-24:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 12:59:11  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 12:59:13  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:59:13  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 12:59:13  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 12:59:13  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 12:59:13  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:59:13  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 12:59:13  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 12:59:13  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 12:59:13  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 12:59:13  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 12:59:18  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:59:18  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 12:59:21  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 12:59:21  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 12:59:21  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 12:59:21  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:59:21  [ Thread-24:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-24
2021-07-12 12:59:21  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 12:59:21  [ Thread-24:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 12:59:21  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 12:59:23  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:59:23  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 12:59:23  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 12:59:23  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 12:59:23  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:59:23  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 12:59:23  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 12:59:23  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 12:59:23  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 12:59:23  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 12:59:28  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:59:28  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 12:59:31  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 12:59:31  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 12:59:31  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 12:59:31  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:59:31  [ Thread-24:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-24
2021-07-12 12:59:31  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 12:59:31  [ Thread-24:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 12:59:31  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 12:59:33  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:59:33  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 12:59:33  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 12:59:33  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 12:59:33  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:59:33  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 12:59:33  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 12:59:33  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 12:59:33  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 12:59:34  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 12:59:38  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:59:38  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 12:59:41  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 12:59:41  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 12:59:41  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 12:59:41  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:59:41  [ Thread-24:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-24
2021-07-12 12:59:41  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 12:59:41  [ Thread-24:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 12:59:41  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 12:59:43  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:59:43  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 12:59:43  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 12:59:43  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 12:59:43  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 12:59:43  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:59:43  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 12:59:43  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 12:59:43  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 12:59:43  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 12:59:48  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:59:48  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 12:59:51  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 12:59:51  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 12:59:51  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 12:59:51  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:59:51  [ Thread-24:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-24
2021-07-12 12:59:51  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 12:59:51  [ Thread-24:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 12:59:51  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 12:59:53  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:59:53  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 12:59:53  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 12:59:53  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 12:59:53  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 12:59:53  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 12:59:53  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 12:59:53  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 12:59:53  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 12:59:53  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 12:59:58  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 12:59:58  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:00:01  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:00:01  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:00:01  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:00:01  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:00:01  [ Thread-24:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-24
2021-07-12 13:00:01  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:00:01  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:00:01  [ Thread-24:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:00:03  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:00:03  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:00:03  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:00:03  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:00:03  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:00:03  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:00:03  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:00:03  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:00:08  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:00:08  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:00:11  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:00:11  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:00:11  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:00:11  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:00:11  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:00:11  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:00:13  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:00:13  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:00:13  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:00:13  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:00:13  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: true
2021-07-12 13:00:13  [ Thread-4:server.network.Connected:73 ] - [ INFO ]  100 in first if print flagconnect: true
2021-07-12 13:00:15  [ Thread-4:server.network.Connected:82 ] - [ INFO ]  clientNr. 100 in second if print flagconnect
2021-07-12 13:00:15  [ Thread-4:server.network.Connected:83 ] - [ INFO ]  clientNr. 100 in connected flag is: true
2021-07-12 13:00:15  [ Thread-4:server.network.Server:699 ] - [ INFO ]  server informs connection update
2021-07-12 13:00:15  [ Thread-4:server.network.Connected:89 ] - [ INFO ]  client 100 disconnected.
2021-07-12 13:00:15  [ Thread-1:server.network.Server:699 ] - [ INFO ]  server informs connection update
2021-07-12 13:00:15  [ Thread-1:server.network.Server:699 ] - [ INFO ]  server informs connection update
2021-07-12 13:00:18  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:00:21  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:00:21  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:00:21  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:00:23  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: true
2021-07-12 13:00:23  [ Thread-2:server.network.Connected:73 ] - [ INFO ]  33 in first if print flagconnect: true
2021-07-12 13:00:23  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:00:23  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = true
2021-07-12 13:00:25  [ Thread-2:server.network.Connected:82 ] - [ INFO ]  clientNr. 33 in second if print flagconnect
2021-07-12 13:00:25  [ Thread-2:server.network.Connected:83 ] - [ INFO ]  clientNr. 33 in connected flag is: true
2021-07-12 13:00:25  [ Thread-2:server.network.Server:699 ] - [ INFO ]  server informs connection update
2021-07-12 13:00:25  [ Thread-2:server.network.Connected:89 ] - [ INFO ]  client 33 disconnected.
2021-07-12 13:00:25  [ Thread-0:server.network.Server:699 ] - [ INFO ]  server informs connection update
2021-07-12 13:00:25  [ Thread-0:server.network.Server:699 ] - [ INFO ]  server informs connection update
2021-07-12 13:00:31  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:00:31  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = true
2021-07-12 13:00:11  [ Thread-24:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-24
2021-07-12 13:00:42  [ Thread-24:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:00:42  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 13:00:42  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Error","messageBody":{"error":"Only you left in game, please quit the game."}}Thread-24
2021-07-12 13:00:42  [ JavaFX Application Thread:client.model.Client:753 ] - [ INFO ]  error printed
2021-07-12 13:00:42  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 13:00:42  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ConnectionUpdate","messageBody":{"clientID":100,"action":"remove","connected":false}}Thread-24
2021-07-12 13:00:42  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 13:00:42  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Error","messageBody":{"error":"Only you left in game, please quit the game."}}Thread-24
2021-07-12 13:00:42  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 13:00:42  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ConnectionUpdate","messageBody":{"clientID":100,"action":"remove","connected":false}}Thread-24
2021-07-12 13:00:42  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 13:00:42  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Error","messageBody":{"error":"Only you left in game, please quit the game."}}Thread-24
2021-07-12 13:00:42  [ Thread-24:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-24
2021-07-12 13:00:42  [ Thread-24:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ConnectionUpdate","messageBody":{"clientID":100,"action":"remove","connected":false}}Thread-24
2021-07-12 13:00:42  [ Thread-24:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-24
2021-07-12 13:00:42  [ Thread-24:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:00:42  [ JavaFX Application Thread:client.model.Client:753 ] - [ INFO ]  error printed
2021-07-12 13:00:42  [ JavaFX Application Thread:client.model.Client:753 ] - [ INFO ]  error printed
2021-07-12 13:00:03  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:02:11  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:02:11  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:02:11  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:02:31  [ Thread-0:server.network.ServerThread:61 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-12 13:02:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:02:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-33
2021-07-12 13:02:32  [ JavaFX Application Thread:client.model.Client:767 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-12 13:02:32  [ Thread-0:server.network.ServerThread:102 ] - [ INFO ]  welcome info printed
2021-07-12 13:02:32  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:02:32  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:02:32  [ JavaFX Application Thread:client.model.Client:771 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":33}}JavaFX Application Thread
2021-07-12 13:02:32  [ JavaFX Application Thread:client.model.Client:775 ] - [ INFO ]  33
2021-07-12 13:02:32  [ JavaFX Application Thread:client.model.Client:776 ] - [ INFO ]  your clientID is: 33
2021-07-12 13:02:55  [ JavaFX Application Thread:client.model.Client:1213 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"asd","figure":3}}
2021-07-12 13:02:55  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"asd","figure":3}}
2021-07-12 13:02:55  [ Thread-0:protocol.ExecuteOrder:68 ] - [ INFO ]  check player figures
2021-07-12 13:02:55  [ Thread-0:protocol.ExecuteOrder:76 ] - [ INFO ]  addPlayer
2021-07-12 13:02:55  [ Thread-0:server.network.Server:246 ] - [ INFO ]  server added player
2021-07-12 13:02:55  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:02:55  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"asd","figure":3}}Thread-33
2021-07-12 13:02:55  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"asd","figure":3}}JavaFX Application Thread
2021-07-12 13:02:55  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 13:02:55  [ JavaFX Application Thread:client.model.Client:799 ] - [ INFO ]  flag launchen window
2021-07-12 13:02:59  [ JavaFX Application Thread:client.model.Client:1229 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:02:59  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:02:59  [ Thread-0:protocol.ExecuteOrder:112 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-12 13:02:59  [ Thread-0:server.network.Server:278 ] - [ INFO ]  server inform player status
2021-07-12 13:02:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:02:59  [ Thread-0:server.network.Server:312 ] - [ INFO ]  server informs first ready player to select a map
2021-07-12 13:02:59  [ Thread-0:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 1
2021-07-12 13:02:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-33
2021-07-12 13:02:59  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-12 13:02:59  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:02:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:02:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-33
2021-07-12 13:02:59  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-12 13:02:59  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:02:59  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:02:59  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:02:59  [ JavaFX Application Thread:client.model.Client:829 ] - [ INFO ]  in client ListProperty [value: [Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister]]
2021-07-12 13:02:59  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:02:59  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:03:04  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:03:04  [ JavaFX Application Thread:client.model.Client:1272 ] - [ INFO ]  {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}
2021-07-12 13:03:04  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}
2021-07-12 13:03:04  [ Thread-0:protocol.ExecuteOrder:146 ] - [ INFO ]  set Map in ExecuteOrder
2021-07-12 13:03:04  [ Thread-0:server.network.Server:727 ] - [ INFO ]  server informs which map selected
2021-07-12 13:03:04  [ Thread-0:server.game.Game:240 ] - [ INFO ]  Game sets map.
2021-07-12 13:03:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-33
2021-07-12 13:03:04  [ Thread-0:server.maps.Board:19 ] - [ INFO ]  Board sets map of Dizzy Highway.
2021-07-12 13:03:04  [ Thread-0:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 1
2021-07-12 13:03:09  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:03:09  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:03:09  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:03:09  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:03:09  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:03:09  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:03:09  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:03:09  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:03:09  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:03:14  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:03:17  [ Thread-3:server.network.ServerThread:61 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-12 13:03:17  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:17  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-33
2021-07-12 13:03:18  [ JavaFX Application Thread:client.model.Client:767 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-12 13:03:18  [ Thread-3:server.network.ServerThread:102 ] - [ INFO ]  welcome info printed
2021-07-12 13:03:18  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:18  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:03:18  [ JavaFX Application Thread:client.model.Client:771 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":100}}JavaFX Application Thread
2021-07-12 13:03:18  [ JavaFX Application Thread:client.model.Client:775 ] - [ INFO ]  100
2021-07-12 13:03:18  [ JavaFX Application Thread:client.model.Client:776 ] - [ INFO ]  your clientID is: 100
2021-07-12 13:03:19  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:03:19  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:03:19  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:03:19  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:03:19  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:03:19  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:03:19  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:03:19  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:03:19  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:03:24  [ JavaFX Application Thread:client.model.Client:1213 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"2345","figure":3}}
2021-07-12 13:03:24  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"2345","figure":3}}
2021-07-12 13:03:24  [ Thread-3:protocol.ExecuteOrder:68 ] - [ INFO ]  check player figures
2021-07-12 13:03:24  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:24  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Error","messageBody":{"error":"This figure exists already, choose again."}}Thread-33
2021-07-12 13:03:24  [ JavaFX Application Thread:client.model.Client:753 ] - [ INFO ]  error printed
2021-07-12 13:03:24  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:03:28  [ JavaFX Application Thread:client.model.Client:1213 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"346","figure":1}}
2021-07-12 13:03:28  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"346","figure":1}}
2021-07-12 13:03:28  [ Thread-3:protocol.ExecuteOrder:68 ] - [ INFO ]  check player figures
2021-07-12 13:03:28  [ Thread-3:protocol.ExecuteOrder:76 ] - [ INFO ]  addPlayer
2021-07-12 13:03:28  [ Thread-3:server.network.Server:246 ] - [ INFO ]  server added player
2021-07-12 13:03:28  [ Thread-3:server.network.Server:264 ] - [ INFO ]  server added player
2021-07-12 13:03:28  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:28  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:28  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"346","figure":1}}Thread-33
2021-07-12 13:03:28  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"346","figure":1}}Thread-33
2021-07-12 13:03:28  [ Thread-3:server.network.Server:264 ] - [ INFO ]  server added player
2021-07-12 13:03:28  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"346","figure":1}}JavaFX Application Thread
2021-07-12 13:03:28  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"346","figure":1}}JavaFX Application Thread
2021-07-12 13:03:28  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:29  [ Thread-3:server.network.Server:293 ] - [ INFO ]  server inform status of previous players
2021-07-12 13:03:29  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 13:03:29  [ Thread-3:server.network.Server:727 ] - [ INFO ]  server informs which map selected
2021-07-12 13:03:29  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"asd","figure":3}}Thread-33
2021-07-12 13:03:29  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 13:03:29  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:29  [ JavaFX Application Thread:client.model.Client:799 ] - [ INFO ]  flag launchen window
2021-07-12 13:03:29  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:29  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-33
2021-07-12 13:03:29  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"346","figure":1}}Thread-33
2021-07-12 13:03:29  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:29  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-33
2021-07-12 13:03:29  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:29  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-33
2021-07-12 13:03:29  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"asd","figure":3}}JavaFX Application Thread
2021-07-12 13:03:29  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 13:03:29  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"346","figure":1}}JavaFX Application Thread
2021-07-12 13:03:29  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-12 13:03:29  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:03:29  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:03:29  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:03:29  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:03:29  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:03:29  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:03:29  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:03:29  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:03:29  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:03:34  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:03:39  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:03:39  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:03:39  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:03:39  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:03:39  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:03:39  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:03:39  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:03:39  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:03:39  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:03:40  [ JavaFX Application Thread:client.model.Client:1229 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:03:40  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:03:40  [ Thread-3:protocol.ExecuteOrder:112 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-12 13:03:40  [ Thread-3:server.network.Server:278 ] - [ INFO ]  server inform player status
2021-07-12 13:03:40  [ Thread-3:server.network.Server:312 ] - [ INFO ]  server informs first ready player to select a map
2021-07-12 13:03:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:40  [ Thread-3:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 2
2021-07-12 13:03:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-33
2021-07-12 13:03:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:40  [ Thread-3:protocol.ExecuteOrder:515 ] - [ INFO ]  number enough, to play
2021-07-12 13:03:40  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-12 13:03:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-33
2021-07-12 13:03:40  [ Thread-3:protocol.ExecuteOrder:516 ] - [ INFO ]  clientIds: [33, 100]
2021-07-12 13:03:40  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-12 13:03:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-33
2021-07-12 13:03:40  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-12 13:03:40  [ JavaFX Application Thread:client.model.Client:829 ] - [ INFO ]  in client ListProperty [value: [Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister]]
2021-07-12 13:03:40  [ Thread-3:server.network.Server:327 ] - [ INFO ]  server sends map
2021-07-12 13:03:40  [ Thread-3:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 13:03:40  [ Thread-3:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:03:40  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:03:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-33
2021-07-12 13:03:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-33
2021-07-12 13:03:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-33
2021-07-12 13:03:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-33
2021-07-12 13:03:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:03:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:03:40  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:03:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:03:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:03:40  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:03:40  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:03:44  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:03:45  [ JavaFX Application Thread:client.model.Client:1338 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":3}}
2021-07-12 13:03:45  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":3}}
2021-07-12 13:03:45  [ Thread-0:server.network.Server:386 ] - [ INFO ]  server informs set starting point
2021-07-12 13:03:45  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:03:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":3,"clientID":33}}Thread-33
2021-07-12 13:03:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":3,"clientID":33}}Thread-33
2021-07-12 13:03:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:03:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:03:45  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  0
2021-07-12 13:03:45  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  0
2021-07-12 13:03:45  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:03:49  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:03:49  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:03:49  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:03:49  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:03:49  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:03:49  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:03:49  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:03:49  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:03:49  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:03:49  [ JavaFX Application Thread:client.model.Client:1338 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-12 13:03:49  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-12 13:03:49  [ Thread-3:server.network.Server:386 ] - [ INFO ]  server informs set starting point
2021-07-12 13:03:49  [ Thread-3:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 13:03:49  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:49  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:49  [ Thread-3:server.network.Server:745 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-12 13:03:49  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":100}}Thread-33
2021-07-12 13:03:49  [ Thread-3:protocol.ExecuteOrder:223 ] - [ INFO ]  after setting startPoint, priority list: [33, 33, 100]
2021-07-12 13:03:49  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:49  [ Thread-3:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:03:49  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":100}}Thread-33
2021-07-12 13:03:49  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  0
2021-07-12 13:03:49  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  0
2021-07-12 13:03:49  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-33
2021-07-12 13:03:49  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:49  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:49  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-33
2021-07-12 13:03:49  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["RealLaser","SpamBlocker"]}}Thread-33
2021-07-12 13:03:49  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:49  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:49  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["RealLaser","SpamBlocker"]}}Thread-33
2021-07-12 13:03:49  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:03:49  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:49  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:03:50  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:03:50  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:03:50  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:03:50  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:03:50  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:03:50  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:03:50  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:03:50  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:03:50  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:03:54  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:03:55  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:03:58  [ JavaFX Application Thread:client.model.Client:1501 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":"RealLaser","isBuying":true}}
2021-07-12 13:03:58  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":"RealLaser","isBuying":true}}
2021-07-12 13:03:58  [ Thread-0:server.network.Server:759 ] - [ INFO ]  server informs who bought which upgrade.
2021-07-12 13:03:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:58  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:03:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":33,"card":"RealLaser"}}Thread-33
2021-07-12 13:03:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":33,"card":"RealLaser"}}Thread-33
2021-07-12 13:03:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:03:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:03:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:03:59  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:03:59  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:03:59  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:03:59  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:03:59  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:03:59  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:03:59  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:03:59  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:03:59  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:04:00  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:04:00  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:04:00  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:04:00  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:04:00  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:04:00  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:04:00  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:04:00  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:04:00  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:04:04  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:04:05  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:04:09  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:04:09  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:04:09  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:04:09  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:04:09  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:04:09  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:04:09  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:04:09  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:04:09  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:04:09  [ JavaFX Application Thread:client.model.Client:1495 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":null,"isBuying":false}}
2021-07-12 13:04:09  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":null,"isBuying":false}}
2021-07-12 13:04:09  [ Thread-0:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 13:04:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-33
2021-07-12 13:04:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-33
2021-07-12 13:04:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":33,"cardsInHand":9}}Thread-33
2021-07-12 13:04:09  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  33have got 9 cards
2021-07-12 13:04:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":100,"cardsInHand":9}}Thread-33
2021-07-12 13:04:09  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  100have got 9 cards
2021-07-12 13:04:09  [ Thread-0:server.network.Server:400 ] - [ INFO ]  server informs your cards.
2021-07-12 13:04:09  [ Thread-0:server.network.Server:400 ] - [ INFO ]  server informs your cards.
2021-07-12 13:04:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["BackUp","TurnRight","TurnRight","MoveI","MoveI","UTurn","MoveI","PowerUp","Again"]}}Thread-33
2021-07-12 13:04:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["MoveII","MoveI","BackUp","MoveI","MoveIII","TurnLeft","TurnRight","TurnLeft","MoveI"]}}Thread-33
2021-07-12 13:04:09  [ JavaFX Application Thread:client.model.Client:932 ] - [ INFO ]  clients your cards
2021-07-12 13:04:09  [ JavaFX Application Thread:client.model.Client:932 ] - [ INFO ]  clients your cards
2021-07-12 13:04:10  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:04:10  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:04:10  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:04:10  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:04:10  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:04:10  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:04:10  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:04:10  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:04:10  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:04:14  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:04:15  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:04:17  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveIII","register":1}}
2021-07-12 13:04:17  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveIII","register":1}}
2021-07-12 13:04:17  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveIII
2021-07-12 13:04:17  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:04:17  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:17  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:17  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":1,"filled":true}}Thread-33
2021-07-12 13:04:17  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":1,"filled":true}}Thread-33
2021-07-12 13:04:17  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 1true
2021-07-12 13:04:17  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 1true
2021-07-12 13:04:19  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:04:19  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:04:19  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:04:19  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:04:19  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:04:19  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:04:19  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:04:19  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:04:19  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:04:20  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:04:20  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:04:20  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:04:20  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:04:20  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:04:20  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:04:20  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:04:20  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:04:20  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:04:23  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":2}}
2021-07-12 13:04:23  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":2}}
2021-07-12 13:04:23  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveI
2021-07-12 13:04:23  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:04:23  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:23  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:23  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":2,"filled":true}}Thread-33
2021-07-12 13:04:23  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":2,"filled":true}}Thread-33
2021-07-12 13:04:23  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 2true
2021-07-12 13:04:23  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 2true
2021-07-12 13:04:24  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:04:25  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:04:26  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":3}}
2021-07-12 13:04:26  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":3}}
2021-07-12 13:04:26  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveII
2021-07-12 13:04:26  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:04:26  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:26  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:26  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":3,"filled":true}}Thread-33
2021-07-12 13:04:26  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":3,"filled":true}}Thread-33
2021-07-12 13:04:26  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 3true
2021-07-12 13:04:26  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 3true
2021-07-12 13:04:29  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":4}}
2021-07-12 13:04:29  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":4}}
2021-07-12 13:04:29  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  TurnRight
2021-07-12 13:04:29  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:04:29  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:29  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:29  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":4,"filled":true}}Thread-33
2021-07-12 13:04:29  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":4,"filled":true}}Thread-33
2021-07-12 13:04:29  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 4true
2021-07-12 13:04:29  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 4true
2021-07-12 13:04:29  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:04:29  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:04:29  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:04:29  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:04:29  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:04:29  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:04:29  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:04:29  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:04:29  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:04:30  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:04:30  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:04:30  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:04:30  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:04:30  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:04:30  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:04:30  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:04:30  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:04:30  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:04:31  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":5}}
2021-07-12 13:04:31  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":5}}
2021-07-12 13:04:31  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveI
2021-07-12 13:04:31  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:04:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":5,"filled":true}}Thread-33
2021-07-12 13:04:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":5,"filled":true}}Thread-33
2021-07-12 13:04:31  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 5true
2021-07-12 13:04:31  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 5true
2021-07-12 13:04:34  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:04:35  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:04:37  [ JavaFX Application Thread:client.model.Client:1439 ] - [ INFO ]  {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-12 13:04:37  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-12 13:04:37  [ Thread-0:server.game.Game:399 ] - [ INFO ]  game starts timer
2021-07-12 13:04:37  [ Thread-0:server.network.Server:501 ] - [ INFO ]  server starts timer
2021-07-12 13:04:37  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:37  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:37  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"TimerStarted","messageBody":null}Thread-33
2021-07-12 13:04:37  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"TimerStarted","messageBody":null}Thread-33
2021-07-12 13:04:37  [ JavaFX Application Thread:client.model.Client:984 ] - [ INFO ]  timer is on
2021-07-12 13:04:37  [ JavaFX Application Thread:client.model.Client:984 ] - [ INFO ]  timer is on
2021-07-12 13:04:39  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:04:39  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:04:39  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:04:39  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:04:39  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:04:39  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:04:39  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:04:39  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:04:39  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:04:40  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:04:40  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:04:40  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:04:40  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:04:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:04:40  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:04:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:04:40  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:04:40  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:04:44  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:04:45  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:04:45  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":1}}
2021-07-12 13:04:45  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":1}}
2021-07-12 13:04:45  [ Thread-3:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveI
2021-07-12 13:04:45  [ Thread-3:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:04:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":1,"filled":true}}Thread-33
2021-07-12 13:04:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":1,"filled":true}}Thread-33
2021-07-12 13:04:45  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 1true
2021-07-12 13:04:45  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 1true
2021-07-12 13:04:47  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":2}}
2021-07-12 13:04:47  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":2}}
2021-07-12 13:04:47  [ Thread-3:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveI
2021-07-12 13:04:47  [ Thread-3:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:04:47  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:47  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:47  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-33
2021-07-12 13:04:47  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-33
2021-07-12 13:04:47  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 2true
2021-07-12 13:04:47  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 2true
2021-07-12 13:04:48  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":3}}
2021-07-12 13:04:48  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":3}}
2021-07-12 13:04:48  [ Thread-3:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveI
2021-07-12 13:04:48  [ Thread-3:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:04:48  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:48  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:48  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-33
2021-07-12 13:04:48  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-33
2021-07-12 13:04:48  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 3true
2021-07-12 13:04:48  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 3true
2021-07-12 13:04:49  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:04:49  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:04:49  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:04:49  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:04:49  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:04:49  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:04:49  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:04:49  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:04:49  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"Again","register":4}}
2021-07-12 13:04:49  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"Again","register":4}}
2021-07-12 13:04:49  [ Thread-3:protocol.ExecuteOrder:240 ] - [ INFO ]  Again
2021-07-12 13:04:49  [ Thread-3:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:04:49  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:49  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:49  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":4,"filled":true}}Thread-33
2021-07-12 13:04:49  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":4,"filled":true}}Thread-33
2021-07-12 13:04:49  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 4true
2021-07-12 13:04:49  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 4true
2021-07-12 13:04:49  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:04:50  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:04:50  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:04:50  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:04:50  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:04:50  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:04:50  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:04:50  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:04:50  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:04:50  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:04:54  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:04:55  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:04:55  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"PowerUp","register":5}}
2021-07-12 13:04:55  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"PowerUp","register":5}}
2021-07-12 13:04:55  [ Thread-3:protocol.ExecuteOrder:240 ] - [ INFO ]  PowerUp
2021-07-12 13:04:55  [ Thread-3:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:04:55  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:55  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:55  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":5,"filled":true}}Thread-33
2021-07-12 13:04:55  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":5,"filled":true}}Thread-33
2021-07-12 13:04:55  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 5true
2021-07-12 13:04:55  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 5true
2021-07-12 13:04:56  [ JavaFX Application Thread:client.model.Client:1439 ] - [ INFO ]  {"messageType":"SelectionFinished","messageBody":{"clientID":100}}
2021-07-12 13:04:56  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectionFinished","messageBody":{"clientID":100}}
2021-07-12 13:04:56  [ Thread-3:server.game.Game:407 ] - [ INFO ]  game stops timer
2021-07-12 13:04:56  [ Thread-3:protocol.ExecuteOrder:264 ] - [ INFO ]  executeOrder all clients finished programming in time
2021-07-12 13:04:56  [ Thread-3:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 13:04:56  [ Thread-3:server.network.Server:565 ] - [ INFO ]  Server checked registerPointer 0
2021-07-12 13:04:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:56  [ Thread-3:server.network.Server:569 ] - [ INFO ]  server inform cards of current register
2021-07-12 13:04:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-33
2021-07-12 13:04:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-33
2021-07-12 13:04:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:56  [ Thread-3:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:04:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"MoveIII"},{"clientID":33,"cardName":"MoveIII"},{"clientID":100,"cardName":"MoveI"}]}}Thread-33
2021-07-12 13:04:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"MoveIII"},{"clientID":33,"cardName":"MoveIII"},{"clientID":100,"cardName":"MoveI"}]}}Thread-33
2021-07-12 13:04:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:56  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  33 has for current register: MoveIII
2021-07-12 13:04:56  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  33 has for current register: MoveIII
2021-07-12 13:04:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:04:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:04:56  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  33 has for current register: MoveIII
2021-07-12 13:04:56  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  33 has for current register: MoveIII
2021-07-12 13:04:56  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  100 has for current register: MoveI
2021-07-12 13:04:56  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  100 has for current register: MoveI
2021-07-12 13:04:58  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveIII"}}
2021-07-12 13:04:58  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveIII"}}
2021-07-12 13:04:58  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:04:58  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:04:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:58  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:04:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveIII"}}Thread-33
2021-07-12 13:04:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveIII"}}Thread-33
2021-07-12 13:04:58  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:04:58  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveIII
2021-07-12 13:04:58  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveIII
2021-07-12 13:04:58  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:04:58  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:04:58  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:04:58  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":3,"y":3}}
2021-07-12 13:04:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":3,"y":3}}Thread-33
2021-07-12 13:04:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":3,"y":3}}Thread-33
2021-07-12 13:04:58  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:04:58  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:04:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:04:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:04:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:04:59  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:04:59  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:04:59  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:04:59  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:04:59  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:04:59  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:04:59  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:04:59  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:04:59  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:05:00  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:05:00  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:05:00  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:05:00  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:05:00  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:05:00  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:05:00  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:05:00  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:05:00  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:05:04  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:05:05  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:05:09  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:05:09  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:05:09  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:05:09  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:05:09  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:05:09  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:05:09  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:05:09  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:05:09  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:05:10  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:05:10  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:05:10  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:05:10  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:05:10  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:05:10  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:05:10  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:05:10  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:05:10  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:05:11  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 13:05:11  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 13:05:11  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:05:11  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:05:11  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:05:11  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:11  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:11  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:05:11  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-33
2021-07-12 13:05:11  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveI
2021-07-12 13:05:11  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-33
2021-07-12 13:05:11  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveI
2021-07-12 13:05:11  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:05:11  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":4,"y":3}}
2021-07-12 13:05:11  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:11  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:11  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:05:11  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":4,"y":3}}Thread-33
2021-07-12 13:05:11  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":4,"y":3}}Thread-33
2021-07-12 13:05:11  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:05:11  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:11  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:11  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:05:11  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:05:14  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:05:15  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:05:19  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:05:19  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:05:19  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:05:19  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:05:19  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:05:19  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:05:19  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:05:19  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:05:19  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:05:20  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:05:20  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:05:20  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:05:20  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:05:20  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:05:20  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:05:20  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:05:20  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:05:20  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:05:20  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 13:05:20  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 13:05:20  [ Thread-3:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:05:20  [ Thread-3:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:05:20  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:20  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:20  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveI"}}Thread-33
2021-07-12 13:05:20  [ Thread-3:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:05:20  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveI"}}Thread-33
2021-07-12 13:05:20  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveI
2021-07-12 13:05:20  [ Thread-3:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:05:20  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveI
2021-07-12 13:05:20  [ Thread-3:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:05:20  [ Thread-3:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":1,"y":6}}
2021-07-12 13:05:20  [ Thread-3:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:05:20  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:20  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:20  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":1,"y":6}}Thread-33
2021-07-12 13:05:20  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":1,"y":6}}Thread-33
2021-07-12 13:05:20  [ Thread-3:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:05:20  [ Thread-3:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":4,"y":5}}
2021-07-12 13:05:20  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:20  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:20  [ Thread-3:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:05:20  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":4,"y":5}}Thread-33
2021-07-12 13:05:20  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":4,"y":5}}Thread-33
2021-07-12 13:05:20  [ Thread-3:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":4,"y":7}}
2021-07-12 13:05:20  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:20  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:20  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":4,"y":7}}Thread-33
2021-07-12 13:05:20  [ Thread-3:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 13:05:20  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":4,"y":7}}Thread-33
2021-07-12 13:05:20  [ Thread-3:server.game.Game:747 ] - [ INFO ]  Game checks round over1
2021-07-12 13:05:20  [ Thread-3:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:05:20  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:20  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:20  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:05:20  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:05:24  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 13:05:24  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 13:05:24  [ Thread-3:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:05:24  [ Thread-3:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:05:24  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:24  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:24  [ Thread-3:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:05:24  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveI"}}Thread-33
2021-07-12 13:05:24  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveI"}}Thread-33
2021-07-12 13:05:24  [ Thread-3:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:05:24  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveI
2021-07-12 13:05:24  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveI
2021-07-12 13:05:24  [ Thread-3:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:05:24  [ Thread-3:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":2,"y":6}}
2021-07-12 13:05:24  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:24  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:24  [ Thread-3:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:05:24  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":2,"y":6}}Thread-33
2021-07-12 13:05:24  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":2,"y":6}}Thread-33
2021-07-12 13:05:24  [ Thread-3:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:05:24  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:24  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:24  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:05:24  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:05:25  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:05:25  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:05:29  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:05:29  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:05:29  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:05:29  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:05:29  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:05:29  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:05:29  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:05:29  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:05:30  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:05:30  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 13:05:30  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 13:05:30  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:05:30  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:05:30  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:30  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:30  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:05:30  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-33
2021-07-12 13:05:30  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-33
2021-07-12 13:05:30  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:05:30  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveII
2021-07-12 13:05:30  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveII
2021-07-12 13:05:30  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:05:30  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:05:30  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":6,"y":7}}
2021-07-12 13:05:30  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:30  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:30  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:05:30  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":6,"y":7}}Thread-33
2021-07-12 13:05:30  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":6,"y":7}}Thread-33
2021-07-12 13:05:30  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:05:30  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:30  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:30  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:05:30  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:05:30  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:05:30  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:05:30  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:05:30  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:05:30  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:05:30  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:05:30  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:05:30  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:05:30  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:05:35  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:05:35  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:05:39  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:05:39  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:05:39  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:05:39  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:05:39  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:05:39  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:05:39  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:05:39  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:05:40  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:05:40  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:05:40  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:05:40  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:05:40  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:05:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:05:40  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:05:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:05:40  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:05:40  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:05:45  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:05:45  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:05:49  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:05:49  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:05:49  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:05:49  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:05:49  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:05:49  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:05:49  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:05:49  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:05:50  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:05:50  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:05:50  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:05:50  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:05:50  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:05:50  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:05:50  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:05:50  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:05:50  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:05:50  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:05:52  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-12 13:05:52  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-12 13:05:52  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:05:52  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:05:52  [ Thread-0:server.network.Server:642 ] - [ INFO ]  server informs turnDirection
2021-07-12 13:05:52  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:52  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:52  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnRight"}}Thread-33
2021-07-12 13:05:52  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:05:52  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnRight"}}Thread-33
2021-07-12 13:05:52  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played TurnRight
2021-07-12 13:05:52  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played TurnRight
2021-07-12 13:05:52  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:52  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:52  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-33
2021-07-12 13:05:52  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-33
2021-07-12 13:05:52  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 13:05:52  [ Thread-0:server.game.Game:747 ] - [ INFO ]  Game checks round over2
2021-07-12 13:05:52  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:05:52  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:52  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:52  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:05:52  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:05:55  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:05:55  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:05:56  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 13:05:56  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 13:05:56  [ Thread-3:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:05:56  [ Thread-3:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:05:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:56  [ Thread-3:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:05:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveI"}}Thread-33
2021-07-12 13:05:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveI"}}Thread-33
2021-07-12 13:05:56  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveI
2021-07-12 13:05:56  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveI
2021-07-12 13:05:56  [ Thread-3:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:05:56  [ Thread-3:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:05:56  [ Thread-3:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":3,"y":6}}
2021-07-12 13:05:56  [ Thread-3:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:05:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":3,"y":6}}Thread-33
2021-07-12 13:05:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":3,"y":6}}Thread-33
2021-07-12 13:05:56  [ Thread-3:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:05:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:05:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:05:59  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:05:59  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:05:59  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:05:59  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:05:59  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:05:59  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:05:59  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:05:59  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:05:59  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 13:05:59  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 13:05:59  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:05:59  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:05:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-33
2021-07-12 13:05:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-33
2021-07-12 13:05:59  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveI
2021-07-12 13:05:59  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveI
2021-07-12 13:05:59  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:05:59  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:05:59  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:05:59  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":6,"y":8}}
2021-07-12 13:05:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:59  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:05:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":6,"y":8}}Thread-33
2021-07-12 13:05:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":6,"y":8}}Thread-33
2021-07-12 13:05:59  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:05:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:05:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:05:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:06:00  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:06:00  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:06:00  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:06:00  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:06:00  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:06:00  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:06:00  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:06:00  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:06:00  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:06:00  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:06:05  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:06:05  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:06:09  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:06:09  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:06:09  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:06:09  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:06:09  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:06:09  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:06:09  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:06:09  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:06:10  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":""}}
2021-07-12 13:06:10  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":""}}
2021-07-12 13:06:10  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:06:10  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:06:10  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:06:10  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:06:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":""}}Thread-33
2021-07-12 13:06:10  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played 
2021-07-12 13:06:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":""}}Thread-33
2021-07-12 13:06:10  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played 
2021-07-12 13:06:10  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:06:10  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":8,"y":8}}
2021-07-12 13:06:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":8,"y":8}}Thread-33
2021-07-12 13:06:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":8,"y":8}}Thread-33
2021-07-12 13:06:10  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:06:10  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":10,"y":8}}
2021-07-12 13:06:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":10,"y":8}}Thread-33
2021-07-12 13:06:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":10,"y":8}}Thread-33
2021-07-12 13:06:10  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 13:06:10  [ Thread-0:server.game.Game:747 ] - [ INFO ]  Game checks round over3
2021-07-12 13:06:10  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:06:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:06:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:06:10  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:06:10  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:06:10  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:06:10  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:06:10  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:06:10  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:06:10  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:06:10  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:06:10  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:06:12  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-12 13:06:12  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-12 13:06:12  [ Thread-3:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:06:12  [ Thread-3:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:06:12  [ Thread-3:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:06:12  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:12  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:12  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"Again"}}Thread-33
2021-07-12 13:06:12  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"Again"}}Thread-33
2021-07-12 13:06:12  [ Thread-3:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:06:12  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played Again
2021-07-12 13:06:12  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played Again
2021-07-12 13:06:12  [ Thread-3:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:06:12  [ Thread-3:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":4,"y":6}}
2021-07-12 13:06:12  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:12  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:12  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":4,"y":6}}Thread-33
2021-07-12 13:06:12  [ Thread-3:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:06:12  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":4,"y":6}}Thread-33
2021-07-12 13:06:12  [ Thread-3:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:06:12  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:12  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:12  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:06:12  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:06:15  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:06:15  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:06:15  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":""}}
2021-07-12 13:06:15  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":""}}
2021-07-12 13:06:15  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:06:15  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:06:15  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:06:15  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:15  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:15  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":""}}Thread-33
2021-07-12 13:06:15  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":""}}Thread-33
2021-07-12 13:06:15  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played 
2021-07-12 13:06:15  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played 
2021-07-12 13:06:15  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:06:15  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:15  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:15  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:06:15  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:06:16  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":""}}
2021-07-12 13:06:16  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":""}}
2021-07-12 13:06:16  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:06:16  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:06:16  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:06:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":""}}Thread-33
2021-07-12 13:06:16  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played 
2021-07-12 13:06:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":""}}Thread-33
2021-07-12 13:06:16  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played 
2021-07-12 13:06:16  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:06:16  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":12,"y":8}}
2021-07-12 13:06:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":12,"y":8}}Thread-33
2021-07-12 13:06:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":12,"y":8}}Thread-33
2021-07-12 13:06:16  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:06:16  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":4,"y":8}}
2021-07-12 13:06:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:16  [ Thread-0:server.network.Server:657 ] - [ INFO ]  server informs drawn damage cards
2021-07-12 13:06:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":4,"y":8}}Thread-33
2021-07-12 13:06:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":4,"y":8}}Thread-33
2021-07-12 13:06:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:16  [ Thread-0:server.network.Server:657 ] - [ INFO ]  server informs drawn damage cards
2021-07-12 13:06:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":33,"cards":["Spam"]}}Thread-33
2021-07-12 13:06:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":33,"cards":["Spam"]}}Thread-33
2021-07-12 13:06:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:16  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 13:06:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":33,"cards":["Spam"]}}Thread-33
2021-07-12 13:06:16  [ Thread-0:server.game.Game:747 ] - [ INFO ]  Game checks round over4
2021-07-12 13:06:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":33,"cards":["Spam"]}}Thread-33
2021-07-12 13:06:16  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:06:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:06:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:06:19  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:06:19  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:06:19  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:06:19  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:06:19  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:06:19  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:06:19  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:06:19  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:06:20  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:06:20  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:06:20  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:06:20  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:06:20  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:06:20  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:06:20  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:06:20  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:06:20  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:06:20  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:06:21  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"PowerUp"}}
2021-07-12 13:06:21  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"PowerUp"}}
2021-07-12 13:06:21  [ Thread-3:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:06:21  [ Thread-3:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:06:21  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:21  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:21  [ Thread-3:server.network.Server:714 ] - [ INFO ]  server informs energy got.
2021-07-12 13:06:21  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"PowerUp"}}Thread-33
2021-07-12 13:06:21  [ Thread-3:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:06:21  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played PowerUp
2021-07-12 13:06:21  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"PowerUp"}}Thread-33
2021-07-12 13:06:21  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played PowerUp
2021-07-12 13:06:21  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:21  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Energy","messageBody":{"clientID":100,"count":1,"source":"PowerUpCard"}}Thread-33
2021-07-12 13:06:21  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:21  [ Thread-3:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:06:21  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Energy","messageBody":{"clientID":100,"count":1,"source":"PowerUpCard"}}Thread-33
2021-07-12 13:06:21  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:21  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:06:21  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:06:21  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:06:25  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:06:25  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:06:29  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:06:29  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:06:29  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:06:29  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:06:29  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:06:29  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:06:29  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:06:29  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:06:30  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:06:30  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:06:30  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:06:30  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:06:30  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:06:30  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:06:30  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:06:30  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:06:30  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:06:30  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:06:35  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:06:35  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:06:39  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:06:39  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:06:39  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:06:39  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:06:39  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:06:39  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:06:39  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:06:39  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:06:40  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:06:40  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:06:40  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:06:40  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:06:40  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:06:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:06:40  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:06:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:06:40  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:06:40  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:06:45  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:06:45  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:06:49  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:06:49  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:06:49  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:06:49  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:06:49  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:06:49  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:06:49  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:06:49  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:06:50  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:06:50  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:06:50  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:06:50  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:06:50  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:06:50  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:06:50  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:06:50  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:06:50  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:06:50  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:06:55  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:06:55  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:06:59  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:06:59  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:06:59  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:06:59  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:06:59  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:06:59  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:06:59  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:06:59  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:07:00  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:07:00  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:07:00  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:07:00  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:07:00  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:07:00  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:07:00  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:07:00  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:07:00  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:07:00  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:07:05  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:07:05  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:07:09  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:07:09  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:07:09  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:07:09  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:07:09  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:07:09  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:07:09  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:07:09  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:07:10  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:07:10  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:07:10  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:07:10  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:07:10  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:07:10  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:07:10  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:07:10  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:07:10  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:07:10  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:07:15  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:07:15  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:07:19  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:07:19  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:07:19  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:07:19  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:07:19  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:07:19  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:07:19  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:07:19  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:07:20  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:07:20  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:07:20  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:07:20  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:07:20  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:07:20  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:07:20  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:07:20  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:07:20  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:07:20  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:07:25  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:07:25  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:07:29  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:07:29  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:07:29  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:07:29  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:07:29  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:07:29  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:07:29  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:07:29  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:07:30  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:07:30  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:07:30  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:07:30  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:07:30  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:07:30  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:07:30  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:07:30  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:07:30  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:07:30  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:07:35  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:07:35  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:07:40  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:07:40  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:07:40  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:07:40  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:07:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:07:40  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:07:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:07:40  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:07:40  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:07:40  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:07:40  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:07:40  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:07:40  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:07:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:07:40  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:07:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:07:40  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:07:40  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:07:45  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:07:45  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:07:50  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:07:50  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:07:50  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:07:50  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:07:50  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:07:50  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:07:50  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:07:50  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:07:50  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:07:50  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:07:50  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:07:50  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:07:50  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:07:50  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:07:50  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:07:50  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:07:50  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:07:50  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:07:55  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:07:55  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:08:00  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:08:00  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:08:00  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:08:00  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:08:00  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:08:00  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:08:00  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:08:00  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:08:00  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:08:00  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:08:00  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:08:00  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:08:00  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:08:00  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:08:00  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:08:00  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:08:00  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:08:00  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:08:05  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:08:05  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:08:10  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:08:10  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:08:10  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:08:10  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:08:10  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:08:10  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:08:10  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:08:10  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:08:10  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:08:10  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:08:10  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:08:10  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:08:10  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:08:10  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:08:10  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:08:10  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:08:10  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:08:10  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:08:15  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:08:15  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:08:20  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:08:20  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:08:20  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:08:20  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:08:20  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:08:20  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:08:20  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:08:20  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:08:20  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:08:20  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:08:20  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:08:20  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:08:20  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:08:20  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:08:20  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:08:20  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:08:20  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:08:20  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:08:25  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:08:25  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:08:30  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:08:30  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:08:30  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:08:30  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:08:30  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:08:30  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:08:30  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:08:30  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:08:30  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:08:30  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:08:30  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:08:30  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:08:30  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:08:30  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:08:30  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:08:30  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:08:30  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:08:30  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:08:35  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:08:35  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:08:40  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:08:40  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:08:40  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:08:40  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:08:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:08:40  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:08:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:08:40  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:08:40  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:08:40  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:08:40  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:08:40  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:08:40  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:08:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:08:40  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:08:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:08:40  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:08:40  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:08:45  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:08:45  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:08:50  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:08:50  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:08:50  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:08:50  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:08:50  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:08:50  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:08:50  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:08:50  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:08:50  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:08:50  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:08:50  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:08:50  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:08:50  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:08:50  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:08:50  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:08:50  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:08:50  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:08:50  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:08:55  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:08:55  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:09:00  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:09:00  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:09:00  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:09:00  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:09:00  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:09:00  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:09:00  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:09:00  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:09:00  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:09:00  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:09:00  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:09:00  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:09:00  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:09:00  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:09:00  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:09:00  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:09:00  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:09:00  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:09:05  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:09:05  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:09:10  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:09:10  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:09:10  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:09:10  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:09:10  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:09:10  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:09:10  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:09:10  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:09:10  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:09:10  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:09:10  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:09:10  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:09:10  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:09:10  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:09:10  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:09:10  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:09:10  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:09:10  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:09:15  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:09:15  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":""}}
2021-07-12 13:09:15  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":""}}
2021-07-12 13:09:15  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:09:15  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:09:15  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:09:15  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:15  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:15  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":""}}Thread-33
2021-07-12 13:09:15  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played 
2021-07-12 13:09:15  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":""}}Thread-33
2021-07-12 13:09:15  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:09:15  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played 
2021-07-12 13:09:15  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:15  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:15  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:09:15  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:09:15  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:09:16  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":""}}
2021-07-12 13:09:16  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":""}}
2021-07-12 13:09:16  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:09:16  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:09:16  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:09:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":""}}Thread-33
2021-07-12 13:09:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":""}}Thread-33
2021-07-12 13:09:16  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played 
2021-07-12 13:09:16  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played 
2021-07-12 13:09:16  [ Thread-0:server.network.Server:642 ] - [ INFO ]  server informs turnDirection
2021-07-12 13:09:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"counterclockwise"}}Thread-33
2021-07-12 13:09:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"counterclockwise"}}Thread-33
2021-07-12 13:09:16  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:09:16  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":6,"y":8}}
2021-07-12 13:09:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:16  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 13:09:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":6,"y":8}}Thread-33
2021-07-12 13:09:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":6,"y":8}}Thread-33
2021-07-12 13:09:16  [ Thread-0:server.game.Game:747 ] - [ INFO ]  Game checks round over5
2021-07-12 13:09:16  [ Thread-0:protocol.ExecuteOrder:325 ] - [ INFO ]  ExecuteOrder: round is over!
2021-07-12 13:09:16  [ Thread-0:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 13:09:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-33
2021-07-12 13:09:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-33
2021-07-12 13:09:16  [ Thread-0:server.network.Server:745 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-12 13:09:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:16  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:09:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["MemorySwap","RealLaser"]}}Thread-33
2021-07-12 13:09:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["MemorySwap","RealLaser"]}}Thread-33
2021-07-12 13:09:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:09:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:09:20  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:09:20  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:09:20  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:09:20  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:09:20  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:09:20  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:09:20  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:09:20  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:09:20  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:09:20  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:09:20  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:09:20  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:09:20  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:09:20  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:09:20  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:09:20  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:09:20  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:09:20  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:09:25  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:09:25  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:09:27  [ JavaFX Application Thread:client.model.Client:1501 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":"MemorySwap","isBuying":true}}
2021-07-12 13:09:27  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":"MemorySwap","isBuying":true}}
2021-07-12 13:09:27  [ Thread-3:server.network.Server:759 ] - [ INFO ]  server informs who bought which upgrade.
2021-07-12 13:09:27  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:27  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:27  [ Thread-3:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:09:27  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":100,"card":"MemorySwap"}}Thread-33
2021-07-12 13:09:27  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":100,"card":"MemorySwap"}}Thread-33
2021-07-12 13:09:27  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:27  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:27  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:09:27  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:09:30  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:09:30  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:09:30  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:09:30  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:09:30  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:09:30  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:09:30  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:09:30  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:09:30  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:09:30  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:09:30  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:09:30  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:09:30  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:09:30  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:09:30  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:09:30  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:09:30  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:09:30  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:09:35  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:09:35  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:09:36  [ JavaFX Application Thread:client.model.Client:1501 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":"RealLaser","isBuying":true}}
2021-07-12 13:09:36  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":"RealLaser","isBuying":true}}
2021-07-12 13:09:36  [ Thread-0:server.network.Server:759 ] - [ INFO ]  server informs who bought which upgrade.
2021-07-12 13:09:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:36  [ Thread-0:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 13:09:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":33,"card":"RealLaser"}}Thread-33
2021-07-12 13:09:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":33,"card":"RealLaser"}}Thread-33
2021-07-12 13:09:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-33
2021-07-12 13:09:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-33
2021-07-12 13:09:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":33,"cardsInHand":9}}Thread-33
2021-07-12 13:09:36  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  33have got 9 cards
2021-07-12 13:09:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":100,"cardsInHand":9}}Thread-33
2021-07-12 13:09:36  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  100have got 9 cards
2021-07-12 13:09:36  [ Thread-0:server.network.Server:400 ] - [ INFO ]  server informs your cards.
2021-07-12 13:09:36  [ Thread-0:server.network.Server:400 ] - [ INFO ]  server informs your cards.
2021-07-12 13:09:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:09:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["MoveI","MoveII","Again","PowerUp","MoveI","TurnRight","TurnRight","TurnLeft","Again"]}}Thread-33
2021-07-12 13:09:36  [ JavaFX Application Thread:client.model.Client:932 ] - [ INFO ]  clients your cards
2021-07-12 13:09:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["MoveII","Again","MoveI","MoveII","TurnRight","TurnLeft","MoveIII","TurnLeft","TurnLeft"]}}Thread-33
2021-07-12 13:09:36  [ JavaFX Application Thread:client.model.Client:932 ] - [ INFO ]  clients your cards
2021-07-12 13:09:40  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:09:40  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:09:40  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:09:40  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:09:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:09:40  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:09:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:09:40  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:09:40  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:09:40  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:09:40  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:09:40  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:09:40  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:09:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:09:40  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:09:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:09:40  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:09:40  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:09:45  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:09:45  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:09:50  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:09:50  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:09:50  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:09:50  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:09:50  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:09:50  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:09:50  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:09:50  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:09:50  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:09:50  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:09:50  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:09:50  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:09:50  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:09:50  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:09:50  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:09:50  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:09:50  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:09:50  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:09:55  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:09:55  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:10:00  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:10:00  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:10:00  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:10:00  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:10:00  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:10:00  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:10:00  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:10:00  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:10:00  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:10:00  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:10:00  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:10:00  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:10:00  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:10:00  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:10:00  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:10:00  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:10:00  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:10:00  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:10:01  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":1}}
2021-07-12 13:10:01  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":1}}
2021-07-12 13:10:01  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  TurnRight
2021-07-12 13:10:02  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:10:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":1,"filled":true}}Thread-33
2021-07-12 13:10:02  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 1true
2021-07-12 13:10:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":1,"filled":true}}Thread-33
2021-07-12 13:10:02  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 1true
2021-07-12 13:10:03  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":2}}
2021-07-12 13:10:03  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":2}}
2021-07-12 13:10:03  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  TurnRight
2021-07-12 13:10:03  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:10:03  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:03  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:03  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":2,"filled":true}}Thread-33
2021-07-12 13:10:03  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":2,"filled":true}}Thread-33
2021-07-12 13:10:03  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 2true
2021-07-12 13:10:03  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 2true
2021-07-12 13:10:05  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:10:05  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:10:09  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":3}}
2021-07-12 13:10:09  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":3}}
2021-07-12 13:10:09  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveII
2021-07-12 13:10:09  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:10:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":3,"filled":true}}Thread-33
2021-07-12 13:10:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":3,"filled":true}}Thread-33
2021-07-12 13:10:09  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 3true
2021-07-12 13:10:09  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 3true
2021-07-12 13:10:10  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:10:10  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:10:10  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:10:10  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:10:10  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:10:10  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:10:10  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:10:10  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:10:10  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:10:10  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:10:10  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:10:10  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:10:10  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:10:10  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:10:10  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:10:10  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:10:10  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:10:10  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:10:11  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"Again","register":4}}
2021-07-12 13:10:11  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"Again","register":4}}
2021-07-12 13:10:11  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  Again
2021-07-12 13:10:11  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:10:11  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:11  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:11  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":4,"filled":true}}Thread-33
2021-07-12 13:10:11  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":4,"filled":true}}Thread-33
2021-07-12 13:10:11  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 4true
2021-07-12 13:10:11  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 4true
2021-07-12 13:10:12  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":5}}
2021-07-12 13:10:12  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":5}}
2021-07-12 13:10:12  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveI
2021-07-12 13:10:12  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:10:12  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:12  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:12  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":5,"filled":true}}Thread-33
2021-07-12 13:10:12  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":5,"filled":true}}Thread-33
2021-07-12 13:10:12  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 5true
2021-07-12 13:10:12  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 5true
2021-07-12 13:10:15  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:10:15  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:10:20  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:10:20  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:10:20  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:10:20  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:10:20  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:10:20  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:10:20  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:10:20  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:10:20  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:10:20  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:10:20  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:10:20  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:10:20  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:10:20  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:10:20  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:10:20  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:10:20  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:10:20  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:10:25  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":1}}
2021-07-12 13:10:25  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":1}}
2021-07-12 13:10:25  [ Thread-3:protocol.ExecuteOrder:240 ] - [ INFO ]  TurnRight
2021-07-12 13:10:25  [ Thread-3:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:10:25  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:25  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:25  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":1,"filled":true}}Thread-33
2021-07-12 13:10:25  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":1,"filled":true}}Thread-33
2021-07-12 13:10:25  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 1true
2021-07-12 13:10:25  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 1true
2021-07-12 13:10:25  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:10:25  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:10:28  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveIII","register":2}}
2021-07-12 13:10:28  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveIII","register":2}}
2021-07-12 13:10:28  [ Thread-3:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveIII
2021-07-12 13:10:28  [ Thread-3:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:10:28  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:28  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:28  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-33
2021-07-12 13:10:28  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-33
2021-07-12 13:10:28  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 2true
2021-07-12 13:10:28  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 2true
2021-07-12 13:10:30  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:10:30  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:10:30  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:10:30  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:10:30  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:10:30  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:10:30  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:10:30  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:10:30  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:10:30  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:10:30  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:10:30  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:10:30  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:10:30  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:10:30  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:10:30  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:10:30  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:10:30  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:10:31  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":3}}
2021-07-12 13:10:31  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":3}}
2021-07-12 13:10:31  [ Thread-3:protocol.ExecuteOrder:240 ] - [ INFO ]  TurnLeft
2021-07-12 13:10:31  [ Thread-3:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:10:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-33
2021-07-12 13:10:31  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 3true
2021-07-12 13:10:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-33
2021-07-12 13:10:31  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 3true
2021-07-12 13:10:32  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":4}}
2021-07-12 13:10:32  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":4}}
2021-07-12 13:10:32  [ Thread-3:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveII
2021-07-12 13:10:32  [ Thread-3:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:10:32  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:32  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:32  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":4,"filled":true}}Thread-33
2021-07-12 13:10:32  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":4,"filled":true}}Thread-33
2021-07-12 13:10:32  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 4true
2021-07-12 13:10:32  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 4true
2021-07-12 13:10:34  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":5}}
2021-07-12 13:10:34  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":5}}
2021-07-12 13:10:34  [ Thread-3:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveII
2021-07-12 13:10:34  [ Thread-3:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 13:10:34  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:34  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:34  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":5,"filled":true}}Thread-33
2021-07-12 13:10:34  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":5,"filled":true}}Thread-33
2021-07-12 13:10:34  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 5true
2021-07-12 13:10:34  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 5true
2021-07-12 13:10:35  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:10:35  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:10:37  [ JavaFX Application Thread:client.model.Client:1439 ] - [ INFO ]  {"messageType":"SelectionFinished","messageBody":{"clientID":100}}
2021-07-12 13:10:37  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectionFinished","messageBody":{"clientID":100}}
2021-07-12 13:10:37  [ Thread-3:server.game.Game:399 ] - [ INFO ]  game starts timer
2021-07-12 13:10:37  [ Thread-3:server.network.Server:501 ] - [ INFO ]  server starts timer
2021-07-12 13:10:37  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:37  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:37  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"TimerStarted","messageBody":null}Thread-33
2021-07-12 13:10:37  [ JavaFX Application Thread:client.model.Client:984 ] - [ INFO ]  timer is on
2021-07-12 13:10:37  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"TimerStarted","messageBody":null}Thread-33
2021-07-12 13:10:37  [ JavaFX Application Thread:client.model.Client:984 ] - [ INFO ]  timer is on
2021-07-12 13:10:38  [ JavaFX Application Thread:client.model.Client:1439 ] - [ INFO ]  {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-12 13:10:38  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-12 13:10:38  [ Thread-0:server.game.Game:407 ] - [ INFO ]  game stops timer
2021-07-12 13:10:38  [ Thread-0:protocol.ExecuteOrder:264 ] - [ INFO ]  executeOrder all clients finished programming in time
2021-07-12 13:10:38  [ Thread-0:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 13:10:38  [ Thread-0:server.network.Server:565 ] - [ INFO ]  Server checked registerPointer 0
2021-07-12 13:10:38  [ Thread-0:server.network.Server:569 ] - [ INFO ]  server inform cards of current register
2021-07-12 13:10:38  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:38  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:38  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-33
2021-07-12 13:10:38  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:10:38  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-33
2021-07-12 13:10:38  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:38  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:38  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"TurnRight"},{"clientID":100,"cardName":"TurnRight"}]}}Thread-33
2021-07-12 13:10:38  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"TurnRight"},{"clientID":100,"cardName":"TurnRight"}]}}Thread-33
2021-07-12 13:10:38  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  33 has for current register: TurnRight
2021-07-12 13:10:38  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  33 has for current register: TurnRight
2021-07-12 13:10:38  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:38  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:38  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  100 has for current register: TurnRight
2021-07-12 13:10:38  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  100 has for current register: TurnRight
2021-07-12 13:10:38  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:10:38  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:10:40  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:10:40  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:10:40  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:10:40  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:10:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:10:40  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:10:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:10:40  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:10:40  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:10:40  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:10:40  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:10:40  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:10:40  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:10:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:10:40  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:10:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:10:40  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:10:40  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:10:44  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-12 13:10:44  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-12 13:10:44  [ Thread-3:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:10:44  [ Thread-3:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:10:44  [ Thread-3:server.network.Server:642 ] - [ INFO ]  server informs turnDirection
2021-07-12 13:10:44  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:44  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:44  [ Thread-3:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:10:44  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"TurnRight"}}Thread-33
2021-07-12 13:10:44  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:44  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"TurnRight"}}Thread-33
2021-07-12 13:10:44  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played TurnRight
2021-07-12 13:10:44  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played TurnRight
2021-07-12 13:10:44  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"clockwise"}}Thread-33
2021-07-12 13:10:44  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:44  [ Thread-3:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:10:44  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:44  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"clockwise"}}Thread-33
2021-07-12 13:10:44  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:10:44  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:44  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:10:45  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:10:45  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-12 13:10:45  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-12 13:10:45  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:10:45  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:10:45  [ Thread-0:server.network.Server:642 ] - [ INFO ]  server informs turnDirection
2021-07-12 13:10:45  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:10:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnRight"}}Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnRight"}}Thread-33
2021-07-12 13:10:45  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played TurnRight
2021-07-12 13:10:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:45  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played TurnRight
2021-07-12 13:10:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-33
2021-07-12 13:10:45  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:10:45  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":8,"y":8}}
2021-07-12 13:10:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:45  [ Thread-0:server.network.Server:657 ] - [ INFO ]  server informs drawn damage cards
2021-07-12 13:10:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":8,"y":8}}Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":8,"y":8}}Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:45  [ Thread-0:server.network.Server:657 ] - [ INFO ]  server informs drawn damage cards
2021-07-12 13:10:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":100,"cards":["Spam"]}}Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":100,"cards":["Spam"]}}Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":100,"cards":["Spam"]}}Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:45  [ Thread-0:server.network.Server:657 ] - [ INFO ]  server informs drawn damage cards
2021-07-12 13:10:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":100,"cards":["Spam"]}}Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":33,"cards":["Spam"]}}Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":33,"cards":["Spam"]}}Thread-33
2021-07-12 13:10:45  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 13:10:45  [ Thread-0:server.game.Game:747 ] - [ INFO ]  Game checks round over1
2021-07-12 13:10:45  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:10:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:10:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:10:45  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:10:48  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveIII"}}
2021-07-12 13:10:48  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveIII"}}
2021-07-12 13:10:48  [ Thread-3:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:10:48  [ Thread-3:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:10:48  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:48  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:48  [ Thread-3:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:10:48  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveIII"}}Thread-33
2021-07-12 13:10:48  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveIII"}}Thread-33
2021-07-12 13:10:48  [ Thread-3:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:10:48  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveIII
2021-07-12 13:10:48  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveIII
2021-07-12 13:10:48  [ Thread-3:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:10:48  [ Thread-3:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:10:48  [ Thread-3:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:10:48  [ Thread-3:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":11,"y":8}}
2021-07-12 13:10:48  [ Thread-3:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:10:48  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:48  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:48  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":11,"y":8}}Thread-33
2021-07-12 13:10:48  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":11,"y":8}}Thread-33
2021-07-12 13:10:48  [ Thread-3:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:10:48  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:48  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:48  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:10:48  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:10:50  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:10:50  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:10:50  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:10:50  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:10:50  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:10:50  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:10:50  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:10:50  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:10:50  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:10:50  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:10:50  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:10:50  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:10:50  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:10:50  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:10:50  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:10:50  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:10:50  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:10:50  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:10:52  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-12 13:10:52  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-12 13:10:52  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:10:52  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:10:52  [ Thread-0:server.network.Server:642 ] - [ INFO ]  server informs turnDirection
2021-07-12 13:10:52  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:52  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:52  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnRight"}}Thread-33
2021-07-12 13:10:52  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:10:52  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnRight"}}Thread-33
2021-07-12 13:10:52  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:52  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played TurnRight
2021-07-12 13:10:52  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played TurnRight
2021-07-12 13:10:52  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:52  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-33
2021-07-12 13:10:52  [ Thread-0:server.network.Server:642 ] - [ INFO ]  server informs turnDirection
2021-07-12 13:10:52  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-33
2021-07-12 13:10:52  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:52  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:52  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"counterclockwise"}}Thread-33
2021-07-12 13:10:52  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"counterclockwise"}}Thread-33
2021-07-12 13:10:52  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:10:52  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":11,"y":6}}
2021-07-12 13:10:52  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:52  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:52  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":11,"y":6}}Thread-33
2021-07-12 13:10:52  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":11,"y":6}}Thread-33
2021-07-12 13:10:52  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 13:10:52  [ Thread-0:server.game.Game:747 ] - [ INFO ]  Game checks round over2
2021-07-12 13:10:52  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:10:52  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:52  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:52  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:10:52  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:10:55  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"TurnLeft"}}
2021-07-12 13:10:55  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"TurnLeft"}}
2021-07-12 13:10:55  [ Thread-3:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:10:55  [ Thread-3:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:10:55  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:55  [ Thread-3:server.network.Server:642 ] - [ INFO ]  server informs turnDirection
2021-07-12 13:10:55  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:55  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"TurnLeft"}}Thread-33
2021-07-12 13:10:55  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"TurnLeft"}}Thread-33
2021-07-12 13:10:55  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played TurnLeft
2021-07-12 13:10:55  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:55  [ Thread-3:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:10:55  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:55  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played TurnLeft
2021-07-12 13:10:55  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"counterclockwise"}}Thread-33
2021-07-12 13:10:55  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"counterclockwise"}}Thread-33
2021-07-12 13:10:55  [ Thread-3:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:10:55  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:55  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:55  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:10:55  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:10:55  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:10:55  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:10:56  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 13:10:56  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 13:10:56  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:10:56  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:10:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:56  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:10:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-33
2021-07-12 13:10:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-33
2021-07-12 13:10:56  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:10:56  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveII
2021-07-12 13:10:56  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveII
2021-07-12 13:10:56  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:10:56  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:10:56  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":12,"y":6}}
2021-07-12 13:10:56  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:10:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":12,"y":6}}Thread-33
2021-07-12 13:10:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":12,"y":6}}Thread-33
2021-07-12 13:10:56  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:10:56  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":11,"y":4}}
2021-07-12 13:10:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":11,"y":4}}Thread-33
2021-07-12 13:10:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":11,"y":4}}Thread-33
2021-07-12 13:10:56  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 13:10:56  [ Thread-0:server.game.Game:747 ] - [ INFO ]  Game checks round over3
2021-07-12 13:10:56  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:10:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:10:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:10:59  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 13:10:59  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 13:10:59  [ Thread-3:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:10:59  [ Thread-3:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:10:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:59  [ Thread-3:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:10:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveII"}}Thread-33
2021-07-12 13:10:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveII"}}Thread-33
2021-07-12 13:10:59  [ Thread-3:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:10:59  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveII
2021-07-12 13:10:59  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveII
2021-07-12 13:10:59  [ Thread-3:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:10:59  [ Thread-3:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:10:59  [ Thread-3:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":9,"y":4}}
2021-07-12 13:10:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:59  [ Thread-3:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:10:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":9,"y":4}}Thread-33
2021-07-12 13:10:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":9,"y":4}}Thread-33
2021-07-12 13:10:59  [ Thread-3:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:10:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:10:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:10:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:11:00  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:11:00  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:11:00  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:11:00  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:11:00  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:11:00  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:11:00  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:11:00  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:11:00  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:11:00  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-12 13:11:00  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-12 13:11:00  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:11:00  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:11:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"Again"}}Thread-33
2021-07-12 13:11:00  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:11:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"Again"}}Thread-33
2021-07-12 13:11:00  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played Again
2021-07-12 13:11:00  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:11:00  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played Again
2021-07-12 13:11:00  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:11:00  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:11:00  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":12,"y":4}}
2021-07-12 13:11:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:00  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:11:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":12,"y":4}}Thread-33
2021-07-12 13:11:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":12,"y":4}}Thread-33
2021-07-12 13:11:00  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 13:11:00  [ Thread-0:server.game.Game:747 ] - [ INFO ]  Game checks round over4
2021-07-12 13:11:00  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:11:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:11:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:11:00  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:11:00  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:11:00  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:11:00  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:11:00  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:11:00  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:11:00  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:11:00  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:11:00  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:11:02  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 13:11:02  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 13:11:02  [ Thread-3:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:11:02  [ Thread-3:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:11:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:02  [ Thread-3:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:11:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveII"}}Thread-33
2021-07-12 13:11:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveII"}}Thread-33
2021-07-12 13:11:02  [ Thread-3:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:11:02  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveII
2021-07-12 13:11:02  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveII
2021-07-12 13:11:02  [ Thread-3:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:11:02  [ Thread-3:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:11:02  [ Thread-3:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":7,"y":4}}
2021-07-12 13:11:02  [ Thread-3:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:11:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":7,"y":4}}Thread-33
2021-07-12 13:11:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":7,"y":4}}Thread-33
2021-07-12 13:11:02  [ Thread-3:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:11:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:11:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:11:04  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 13:11:04  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 13:11:04  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 13:11:04  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 13:11:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-33
2021-07-12 13:11:04  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:11:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-33
2021-07-12 13:11:04  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveI
2021-07-12 13:11:04  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveI
2021-07-12 13:11:04  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 13:11:04  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 13:11:04  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":12,"y":3}}
2021-07-12 13:11:04  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 13:11:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":12,"y":3}}Thread-33
2021-07-12 13:11:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":12,"y":3}}Thread-33
2021-07-12 13:11:04  [ Thread-0:server.game.Game:793 ] - [ INFO ]  Game checks game over.
2021-07-12 13:11:04  [ Thread-0:server.game.Game:797 ] - [ INFO ]  print how many checkpoints: 1
2021-07-12 13:11:04  [ Thread-0:server.network.Server:611 ] - [ INFO ]  server informs game finished
2021-07-12 13:11:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameFinished","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:11:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameFinished","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:11:04  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 13:11:04  [ Thread-0:server.game.Game:747 ] - [ INFO ]  Game checks round over5
2021-07-12 13:11:04  [ Thread-0:protocol.ExecuteOrder:325 ] - [ INFO ]  ExecuteOrder: round is over!
2021-07-12 13:11:04  [ Thread-0:server.network.Server:745 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-12 13:11:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["AdminPrivilege","RealLaser"]}}Thread-33
2021-07-12 13:11:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["AdminPrivilege","RealLaser"]}}Thread-33
2021-07-12 13:11:04  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:11:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:11:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:11:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:11:05  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:11:06  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:11:10  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:11:10  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:11:10  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:11:10  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:11:10  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:11:10  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:11:10  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:11:10  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:11:10  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:11:10  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:11:10  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:11:10  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:11:10  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:11:10  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:11:10  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:11:10  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:11:10  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:11:11  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:11:15  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:11:16  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:11:20  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:11:20  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:11:20  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:11:20  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:11:20  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:11:20  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:11:20  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:11:20  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:11:20  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:11:20  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:11:20  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:11:20  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:11:20  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:11:20  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:11:20  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:11:20  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:11:20  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:11:21  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:11:25  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:11:26  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:11:30  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:11:30  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:11:30  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:11:30  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:11:30  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:11:30  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:11:30  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:11:30  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:11:30  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:11:30  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:11:30  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:11:30  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:11:30  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:11:30  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:11:30  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:11:30  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:11:30  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:11:31  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:11:35  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:11:36  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:11:40  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:11:40  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:11:40  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:11:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:11:40  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:11:40  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:11:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:11:40  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:11:40  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:11:40  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:11:40  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:11:40  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:11:40  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:11:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:11:40  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:11:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:11:40  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:11:41  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:11:45  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:11:46  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:11:50  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:11:50  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:11:50  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:11:50  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:11:50  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:11:50  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:11:50  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:11:50  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:11:50  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:11:50  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:11:50  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:11:50  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:11:50  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:11:50  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:11:50  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:11:50  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:11:50  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:11:51  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:11:55  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:11:56  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:12:00  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:12:00  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:12:00  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:12:00  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:12:00  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:12:00  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:12:00  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:12:00  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:12:00  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:12:00  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:12:00  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:12:00  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:12:00  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:12:00  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:12:00  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:12:00  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:12:00  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:12:01  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:12:05  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:12:06  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:12:10  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:12:10  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:12:10  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:12:10  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:12:10  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:12:10  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:12:10  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:12:10  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:12:10  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:12:10  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:12:10  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:12:10  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:12:10  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:12:10  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:12:10  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:12:10  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:12:10  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:12:11  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:12:15  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:12:16  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:12:20  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:12:20  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:12:20  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:12:20  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:12:20  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:12:20  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:12:20  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:12:20  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:12:20  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:12:20  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:12:20  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:12:20  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:12:20  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:12:20  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:12:20  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:12:20  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:12:20  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:12:21  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:12:25  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:12:26  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:12:30  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:12:30  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:12:30  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:12:30  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:12:30  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:12:30  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:12:30  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:12:30  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:12:30  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:12:30  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:12:30  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:12:30  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:12:30  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:12:30  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:12:30  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:12:30  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:12:30  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:12:31  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:12:35  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:12:36  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:12:40  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:12:40  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:12:40  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:12:40  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:12:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:12:40  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:12:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:12:40  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:12:40  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:12:40  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:12:40  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:12:40  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:12:40  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:12:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:12:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:12:40  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:12:40  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:12:41  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:12:45  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:12:46  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:12:50  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:12:50  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:12:50  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:12:50  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:12:50  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:12:50  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:12:50  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:12:50  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:12:50  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:12:50  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:12:50  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:12:50  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:12:50  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:12:50  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:12:50  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:12:50  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:12:50  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:12:51  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:12:55  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:12:56  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:13:00  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:13:00  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:13:00  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:13:00  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:13:00  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:13:00  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:13:00  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:13:00  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:13:00  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:13:00  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:13:00  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:13:00  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:13:00  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:13:00  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:13:00  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:13:00  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:13:00  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:13:01  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:13:05  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:13:06  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:13:10  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:13:10  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:13:10  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:13:10  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:13:10  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:13:10  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:13:10  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:13:10  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:13:10  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:13:10  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:13:10  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:13:10  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:13:10  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:13:10  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:13:10  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:13:10  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:13:10  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:13:11  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:13:15  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:13:16  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:13:20  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:13:20  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:13:20  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:13:20  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:13:20  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:13:20  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:13:20  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:13:20  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:13:20  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:13:20  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:13:20  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:13:20  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:13:20  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:13:20  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:13:20  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:13:20  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:13:20  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:13:21  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:13:25  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:13:26  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:13:30  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:13:30  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:13:30  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:13:30  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:13:30  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:13:30  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:13:30  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:13:30  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:13:30  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:13:30  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:13:30  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:13:30  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:13:30  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:13:30  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:13:30  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:13:30  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:13:30  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:13:31  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:13:35  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:13:36  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:13:40  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:13:40  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:13:40  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:13:40  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:13:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:13:40  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:13:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:13:40  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:13:40  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:13:40  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:13:40  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:13:40  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:13:40  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:13:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:13:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:13:40  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:13:40  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:13:41  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:13:45  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:13:46  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:13:50  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:13:50  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:13:50  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:13:50  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:13:50  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:13:50  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:13:50  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:13:50  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:13:50  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:13:50  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:13:50  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:13:50  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:13:50  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:13:50  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:13:50  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:13:50  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:13:50  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:13:51  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:13:55  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:13:56  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:14:00  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:14:00  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:14:00  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:14:00  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:14:00  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:14:00  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:14:00  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:14:00  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:14:00  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:14:00  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:14:00  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:14:00  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:14:00  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:14:00  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:14:00  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:14:00  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:14:00  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:14:01  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:14:05  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:14:06  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:14:10  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:14:10  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:14:10  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:14:10  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:14:10  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:14:10  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:14:10  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:14:10  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:14:10  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:14:10  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:14:10  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:14:10  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:14:10  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:14:10  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:14:10  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:14:10  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:14:10  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:14:11  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:14:15  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:14:16  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:14:20  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:14:20  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:14:20  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:14:20  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:14:20  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:14:20  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:14:20  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:14:20  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:14:20  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:14:20  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:14:20  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:14:20  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:14:20  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:14:20  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:14:20  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:14:20  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:14:20  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:14:21  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:14:25  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:14:26  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:14:30  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:14:30  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:14:30  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:14:30  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:14:30  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:14:30  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:14:30  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:14:30  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:14:30  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:14:30  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:14:30  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:14:30  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:14:30  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:14:30  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:14:30  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:14:30  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:14:30  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:14:31  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:14:35  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:14:36  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:14:40  [ Thread-2:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:14:40  [ Thread-2:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:14:40  [ Thread-2:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:14:40  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:14:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:14:40  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:14:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:14:40  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:14:40  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:14:40  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:14:40  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:14:40  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:14:40  [ Thread-3:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:14:40  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:14:40  [ Thread-3:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:14:40  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:14:40  [ Thread-3:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:14:41  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:14:45  [ Thread-0:server.network.Server:699 ] - [ INFO ]  server informs connection update
2021-07-12 13:14:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:14:45  [ Thread-0:server.network.Server:699 ] - [ INFO ]  server informs connection update
2021-07-12 13:14:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Error","messageBody":{"error":"Only you left in game, please quit the game."}}Thread-33
2021-07-12 13:14:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:14:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ConnectionUpdate","messageBody":{"clientID":33,"action":"remove","connected":false}}Thread-33
2021-07-12 13:14:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:14:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Error","messageBody":{"error":"Only you left in game, please quit the game."}}Thread-33
2021-07-12 13:14:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:14:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ConnectionUpdate","messageBody":{"clientID":33,"action":"remove","connected":false}}Thread-33
2021-07-12 13:14:45  [ Thread-1:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:14:46  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:37:56  [ Thread-0:server.network.ServerThread:61 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-12 13:37:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:37:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-33
2021-07-12 13:37:56  [ JavaFX Application Thread:client.model.Client:767 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-12 13:37:56  [ Thread-0:server.network.ServerThread:102 ] - [ INFO ]  welcome info printed
2021-07-12 13:37:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:37:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:37:56  [ JavaFX Application Thread:client.model.Client:771 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":33}}JavaFX Application Thread
2021-07-12 13:37:56  [ JavaFX Application Thread:client.model.Client:775 ] - [ INFO ]  33
2021-07-12 13:37:56  [ JavaFX Application Thread:client.model.Client:776 ] - [ INFO ]  your clientID is: 33
2021-07-12 13:38:45  [ JavaFX Application Thread:client.model.Client:1213 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"qwe","figure":2}}
2021-07-12 13:38:45  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"qwe","figure":2}}
2021-07-12 13:38:45  [ Thread-0:protocol.ExecuteOrder:68 ] - [ INFO ]  check player figures
2021-07-12 13:38:45  [ Thread-0:protocol.ExecuteOrder:76 ] - [ INFO ]  addPlayer
2021-07-12 13:38:45  [ Thread-0:server.network.Server:246 ] - [ INFO ]  server added player
2021-07-12 13:38:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:38:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"qwe","figure":2}}Thread-33
2021-07-12 13:38:45  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"qwe","figure":2}}JavaFX Application Thread
2021-07-12 13:38:45  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 13:38:45  [ JavaFX Application Thread:client.model.Client:799 ] - [ INFO ]  flag launchen window
2021-07-12 13:38:57  [ Thread-1:server.network.ServerThread:61 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-12 13:38:57  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:38:57  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-33
2021-07-12 13:38:58  [ JavaFX Application Thread:client.model.Client:767 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-12 13:38:58  [ Thread-1:server.network.ServerThread:102 ] - [ INFO ]  welcome info printed
2021-07-12 13:38:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:38:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:38:58  [ JavaFX Application Thread:client.model.Client:771 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":100}}JavaFX Application Thread
2021-07-12 13:38:58  [ JavaFX Application Thread:client.model.Client:775 ] - [ INFO ]  100
2021-07-12 13:38:58  [ JavaFX Application Thread:client.model.Client:776 ] - [ INFO ]  your clientID is: 100
2021-07-12 13:39:02  [ JavaFX Application Thread:client.model.Client:1213 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"234","figure":4}}
2021-07-12 13:39:02  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"234","figure":4}}
2021-07-12 13:39:02  [ Thread-1:protocol.ExecuteOrder:68 ] - [ INFO ]  check player figures
2021-07-12 13:39:02  [ Thread-1:protocol.ExecuteOrder:76 ] - [ INFO ]  addPlayer
2021-07-12 13:39:02  [ Thread-1:server.network.Server:246 ] - [ INFO ]  server added player
2021-07-12 13:39:02  [ Thread-1:server.network.Server:264 ] - [ INFO ]  server added player
2021-07-12 13:39:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:39:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:39:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"234","figure":4}}Thread-33
2021-07-12 13:39:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"234","figure":4}}Thread-33
2021-07-12 13:39:02  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"234","figure":4}}JavaFX Application Thread
2021-07-12 13:39:02  [ Thread-1:server.network.Server:264 ] - [ INFO ]  server added player
2021-07-12 13:39:02  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"234","figure":4}}JavaFX Application Thread
2021-07-12 13:39:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:39:02  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 13:39:02  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 13:39:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"qwe","figure":2}}Thread-33
2021-07-12 13:39:02  [ JavaFX Application Thread:client.model.Client:799 ] - [ INFO ]  flag launchen window
2021-07-12 13:39:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:39:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"234","figure":4}}Thread-33
2021-07-12 13:39:03  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"qwe","figure":2}}JavaFX Application Thread
2021-07-12 13:39:03  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 13:39:03  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"234","figure":4}}JavaFX Application Thread
2021-07-12 13:40:21  [ JavaFX Application Thread:client.model.Client:1229 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:40:21  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:40:21  [ Thread-1:protocol.ExecuteOrder:112 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-12 13:40:21  [ Thread-1:server.network.Server:278 ] - [ INFO ]  server inform player status
2021-07-12 13:40:21  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:21  [ Thread-1:server.network.Server:312 ] - [ INFO ]  server informs first ready player to select a map
2021-07-12 13:40:21  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:21  [ Thread-1:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 1
2021-07-12 13:40:21  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-33
2021-07-12 13:40:21  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-33
2021-07-12 13:40:21  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-12 13:40:21  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-12 13:40:21  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:21  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:40:21  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-33
2021-07-12 13:40:21  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-12 13:40:21  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:21  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:21  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:40:21  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:40:21  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:40:21  [ JavaFX Application Thread:client.model.Client:829 ] - [ INFO ]  in client ListProperty [value: [Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister]]
2021-07-12 13:40:22  [ JavaFX Application Thread:client.model.Client:1229 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:40:22  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:40:22  [ Thread-0:protocol.ExecuteOrder:112 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-12 13:40:22  [ Thread-0:server.network.Server:278 ] - [ INFO ]  server inform player status
2021-07-12 13:40:22  [ Thread-0:server.network.Server:312 ] - [ INFO ]  server informs first ready player to select a map
2021-07-12 13:40:22  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:22  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:22  [ Thread-0:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 2
2021-07-12 13:40:22  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-33
2021-07-12 13:40:22  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-33
2021-07-12 13:40:22  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-12 13:40:22  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-12 13:40:22  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:40:22  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:22  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:22  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:22  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-33
2021-07-12 13:40:22  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:40:22  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-12 13:40:22  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:40:22  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:40:22  [ JavaFX Application Thread:client.model.Client:829 ] - [ INFO ]  in client ListProperty [value: [Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister]]
2021-07-12 13:40:24  [ JavaFX Application Thread:client.model.Client:1229 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:40:24  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:40:24  [ Thread-0:protocol.ExecuteOrder:112 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-12 13:40:24  [ Thread-0:server.network.Server:278 ] - [ INFO ]  server inform player status
2021-07-12 13:40:24  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:24  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:24  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-33
2021-07-12 13:40:24  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-33
2021-07-12 13:40:24  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-12 13:40:24  [ Thread-0:server.network.Server:312 ] - [ INFO ]  server informs first ready player to select a map
2021-07-12 13:40:24  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-12 13:40:24  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:24  [ Thread-0:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 2
2021-07-12 13:40:24  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-33
2021-07-12 13:40:24  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-12 13:40:24  [ Thread-7:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:40:24  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:24  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:24  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:40:24  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:40:24  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:40:24  [ JavaFX Application Thread:client.model.Client:829 ] - [ INFO ]  in client ListProperty [value: [Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister]]
2021-07-12 13:40:24  [ JavaFX Application Thread:client.model.Client:1229 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:40:24  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:40:24  [ Thread-0:protocol.ExecuteOrder:112 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-12 13:40:24  [ Thread-0:server.network.Server:278 ] - [ INFO ]  server inform player status
2021-07-12 13:40:24  [ Thread-0:server.network.Server:312 ] - [ INFO ]  server informs first ready player to select a map
2021-07-12 13:40:24  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:24  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:24  [ Thread-0:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 2
2021-07-12 13:40:24  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-33
2021-07-12 13:40:24  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-33
2021-07-12 13:40:24  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-12 13:40:24  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-12 13:40:24  [ Thread-9:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:40:24  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:24  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-33
2021-07-12 13:40:24  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:24  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-12 13:40:24  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:24  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:40:25  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:40:25  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:40:25  [ JavaFX Application Thread:client.model.Client:829 ] - [ INFO ]  in client ListProperty [value: [Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister]]
2021-07-12 13:40:26  [ JavaFX Application Thread:client.model.Client:1229 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:40:26  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:40:26  [ Thread-0:protocol.ExecuteOrder:112 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-12 13:40:26  [ Thread-0:server.network.Server:278 ] - [ INFO ]  server inform player status
2021-07-12 13:40:26  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:26  [ Thread-0:server.network.Server:312 ] - [ INFO ]  server informs first ready player to select a map
2021-07-12 13:40:26  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:26  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-33
2021-07-12 13:40:26  [ Thread-0:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 2
2021-07-12 13:40:26  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-33
2021-07-12 13:40:26  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-12 13:40:26  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-12 13:40:26  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:26  [ Thread-11:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:40:26  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-33
2021-07-12 13:40:26  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-12 13:40:26  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:26  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:26  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:40:26  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:40:26  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:40:26  [ JavaFX Application Thread:client.model.Client:829 ] - [ INFO ]  in client ListProperty [value: [Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister]]
2021-07-12 13:40:26  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:40:27  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:29  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:30  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:31  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:31  [ JavaFX Application Thread:client.model.Client:1272 ] - [ INFO ]  {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}
2021-07-12 13:40:31  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}
2021-07-12 13:40:31  [ Thread-1:protocol.ExecuteOrder:146 ] - [ INFO ]  set Map in ExecuteOrder
2021-07-12 13:40:31  [ Thread-1:server.network.Server:727 ] - [ INFO ]  server informs which map selected
2021-07-12 13:40:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:31  [ Thread-1:server.game.Game:240 ] - [ INFO ]  Game sets map.
2021-07-12 13:40:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-33
2021-07-12 13:40:31  [ Thread-1:server.maps.Board:19 ] - [ INFO ]  Board sets map of Dizzy Highway.
2021-07-12 13:40:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-33
2021-07-12 13:40:31  [ Thread-1:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 2
2021-07-12 13:40:31  [ Thread-1:protocol.ExecuteOrder:515 ] - [ INFO ]  number enough, to play
2021-07-12 13:40:31  [ Thread-1:protocol.ExecuteOrder:516 ] - [ INFO ]  clientIds: [33, 100]
2021-07-12 13:40:31  [ Thread-1:server.network.Server:327 ] - [ INFO ]  server sends map
2021-07-12 13:40:31  [ Thread-1:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 13:40:31  [ Thread-1:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:40:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:31  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:40:31  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:40:31  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:40:31  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:40:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-33
2021-07-12 13:40:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-33
2021-07-12 13:40:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-33
2021-07-12 13:40:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-33
2021-07-12 13:40:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:40:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:31  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:40:31  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:31  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:40:31  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:40:31  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:40:32  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:40:32  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:40:32  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:40:32  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:32  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:32  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:40:32  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:40:32  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:40:32  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:34  [ Thread-7:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:40:34  [ Thread-7:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:40:34  [ Thread-7:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:40:34  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:34  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:34  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:40:34  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:40:34  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:40:34  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:35  [ Thread-9:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:40:35  [ Thread-9:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:40:35  [ Thread-9:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:40:35  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:35  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:35  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:40:35  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:40:35  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:40:35  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:36  [ Thread-11:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:40:36  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:36  [ Thread-11:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:40:36  [ Thread-11:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:40:36  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:36  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:36  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:40:36  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:40:36  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:40:36  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:40:37  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:39  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:40  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:41  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:41  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:40:41  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:40:41  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:40:41  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:40:41  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:41  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:41  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:40:41  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:40:41  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:40:42  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:40:42  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:40:42  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:40:42  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:42  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:42  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:40:42  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:40:42  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:40:42  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:44  [ JavaFX Application Thread:client.model.Client:1338 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":1,"y":1}}
2021-07-12 13:40:44  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":1,"y":1}}
2021-07-12 13:40:44  [ Thread-0:server.network.Server:386 ] - [ INFO ]  server informs set starting point
2021-07-12 13:40:44  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:40:44  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:44  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:44  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":1,"y":1,"clientID":33}}Thread-33
2021-07-12 13:40:44  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":1,"y":1,"clientID":33}}Thread-33
2021-07-12 13:40:44  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:44  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:44  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:40:44  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:40:44  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  1
2021-07-12 13:40:44  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  1
2021-07-12 13:40:44  [ Thread-7:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:40:44  [ Thread-7:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:40:44  [ Thread-7:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:40:44  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:44  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:44  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:40:44  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:40:44  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:40:44  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:45  [ Thread-9:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:40:45  [ Thread-9:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:40:45  [ Thread-9:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:40:45  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:45  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:45  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:40:45  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:40:45  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:40:45  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:46  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:46  [ Thread-11:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:40:46  [ Thread-11:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:40:46  [ Thread-11:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:40:46  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:46  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:46  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:40:46  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:40:46  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:40:46  [ JavaFX Application Thread:client.model.Client:1338 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-12 13:40:46  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-12 13:40:46  [ Thread-1:server.network.Server:386 ] - [ INFO ]  server informs set starting point
2021-07-12 13:40:46  [ Thread-1:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 13:40:46  [ Thread-1:server.network.Server:745 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-12 13:40:46  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:46  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:46  [ Thread-1:protocol.ExecuteOrder:223 ] - [ INFO ]  after setting startPoint, priority list: [100, 33]
2021-07-12 13:40:46  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":100}}Thread-33
2021-07-12 13:40:46  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":100}}Thread-33
2021-07-12 13:40:46  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  0
2021-07-12 13:40:46  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  0
2021-07-12 13:40:46  [ Thread-1:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:40:46  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:46  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:46  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-33
2021-07-12 13:40:46  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-33
2021-07-12 13:40:46  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:46  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:46  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["SpamBlocker","RealLaser"]}}Thread-33
2021-07-12 13:40:46  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:46  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["SpamBlocker","RealLaser"]}}Thread-33
2021-07-12 13:40:46  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:40:46  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:46  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 13:40:46  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:40:47  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:49  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:50  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:51  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:51  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:40:51  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:40:51  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:40:51  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:51  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:51  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:40:51  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:40:51  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:40:51  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:40:51  [ JavaFX Application Thread:client.model.Client:1501 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":"SpamBlocker","isBuying":true}}
2021-07-12 13:40:51  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":"SpamBlocker","isBuying":true}}
2021-07-12 13:40:51  [ Thread-1:server.network.Server:759 ] - [ INFO ]  server informs who bought which upgrade.
2021-07-12 13:40:51  [ Thread-1:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:40:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":100,"card":"SpamBlocker"}}Thread-33
2021-07-12 13:40:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":100,"card":"SpamBlocker"}}Thread-33
2021-07-12 13:40:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:40:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:40:52  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:40:52  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:40:52  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:40:52  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:52  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:52  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:40:52  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:40:52  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:40:52  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:54  [ Thread-7:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:40:54  [ Thread-7:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:40:54  [ Thread-7:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:40:54  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:54  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:54  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:40:54  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:40:54  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:40:54  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:55  [ Thread-9:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:40:55  [ Thread-9:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:40:55  [ Thread-9:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:40:55  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:55  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:55  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:40:55  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:40:55  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:40:55  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:56  [ Thread-11:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:40:56  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:56  [ Thread-11:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:40:56  [ Thread-11:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:40:56  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:40:56  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:40:56  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:40:56  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:40:56  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:40:56  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:40:57  [ JavaFX Application Thread:client.model.Client:1501 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":"RealLaser","isBuying":true}}
2021-07-12 13:40:57  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":"RealLaser","isBuying":true}}
2021-07-12 13:40:57  [ Thread-0:server.network.Server:759 ] - [ INFO ]  server informs who bought which upgrade.
2021-07-12 13:40:57  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:57  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:57  [ Thread-0:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 13:40:57  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":33,"card":"RealLaser"}}Thread-33
2021-07-12 13:40:57  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":33,"card":"RealLaser"}}Thread-33
2021-07-12 13:40:57  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:57  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:57  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-33
2021-07-12 13:40:57  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-33
2021-07-12 13:40:57  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:57  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":33,"cardsInHand":9}}Thread-33
2021-07-12 13:40:57  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  33have got 9 cards
2021-07-12 13:40:57  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:57  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":100,"cardsInHand":9}}Thread-33
2021-07-12 13:40:57  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  100have got 9 cards
2021-07-12 13:40:57  [ Thread-0:server.network.Server:400 ] - [ INFO ]  server informs your cards.
2021-07-12 13:40:57  [ Thread-0:server.network.Server:400 ] - [ INFO ]  server informs your cards.
2021-07-12 13:40:57  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:57  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:40:57  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["TurnLeft","TurnRight","MoveI","MoveI","MoveII","PowerUp","TurnLeft","Again","TurnRight"]}}Thread-33
2021-07-12 13:40:57  [ JavaFX Application Thread:client.model.Client:932 ] - [ INFO ]  clients your cards
2021-07-12 13:40:57  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["MoveI","MoveI","TurnLeft","MoveII","TurnLeft","MoveII","MoveIII","MoveI","TurnRight"]}}Thread-33
2021-07-12 13:40:57  [ JavaFX Application Thread:client.model.Client:932 ] - [ INFO ]  clients your cards
2021-07-12 13:40:57  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:40:59  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:00  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:01  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:01  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:41:01  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:41:01  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:41:01  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:01  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:01  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:41:01  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:41:01  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:41:01  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:41:02  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:02  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:02  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:02  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:02  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:02  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:02  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:02  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:02  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:04  [ Thread-7:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:04  [ Thread-7:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:04  [ Thread-7:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:04  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:04  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:04  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:04  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:04  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:04  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:05  [ Thread-9:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:05  [ Thread-9:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:05  [ Thread-9:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:05  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:05  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:05  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:05  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:05  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:05  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:06  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:06  [ Thread-11:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:06  [ Thread-11:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:06  [ Thread-11:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:06  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:06  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:06  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:06  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:06  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:06  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:41:07  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:09  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:10  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:11  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:11  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:41:11  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:41:11  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:41:11  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:11  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:11  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:41:11  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:41:11  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:41:11  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:41:12  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:12  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:12  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:12  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:12  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:12  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:12  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:12  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:12  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:14  [ Thread-7:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:14  [ Thread-7:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:14  [ Thread-7:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:14  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:14  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:14  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:14  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:14  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:14  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:15  [ Thread-9:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:15  [ Thread-9:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:15  [ Thread-9:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:15  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:15  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:15  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:15  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:15  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:15  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:16  [ Thread-11:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:16  [ Thread-11:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:16  [ Thread-11:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:16  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:16  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:16  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:16  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:16  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:16  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:16  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:41:17  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:19  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:20  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:21  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:21  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:41:21  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:41:21  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:41:21  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:21  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:21  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:41:21  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:41:21  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:41:21  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:41:22  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:22  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:22  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:22  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:22  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:22  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:22  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:22  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:22  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:24  [ Thread-7:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:24  [ Thread-7:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:24  [ Thread-7:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:24  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:24  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:24  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:24  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:24  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:24  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:25  [ Thread-9:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:25  [ Thread-9:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:25  [ Thread-9:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:25  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:25  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:25  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:25  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:25  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:25  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:26  [ Thread-11:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:26  [ Thread-11:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:26  [ Thread-11:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:26  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:26  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:26  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:26  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:26  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:26  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:26  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:41:27  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:29  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:30  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:31  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:31  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:41:31  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:41:31  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:41:31  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:31  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:31  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:41:31  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:41:31  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:41:31  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:41:32  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:32  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:32  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:32  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:32  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:32  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:32  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:32  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:32  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:34  [ Thread-7:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:34  [ Thread-7:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:34  [ Thread-7:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:34  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:34  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:34  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:34  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:34  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:34  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:35  [ Thread-9:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:35  [ Thread-9:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:35  [ Thread-9:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:35  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:35  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:35  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:35  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:35  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:35  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:36  [ Thread-11:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:36  [ Thread-11:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:36  [ Thread-11:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:36  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:36  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:36  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:36  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:36  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:36  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:36  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:41:37  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:39  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:40  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:41  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:41  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:41:41  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:41:41  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:41:41  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:41  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:41  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:41:41  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:41:41  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:41:41  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:41:42  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:42  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:42  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:42  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:42  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:42  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:42  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:42  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:42  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:44  [ Thread-7:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:44  [ Thread-7:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:44  [ Thread-7:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:44  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:44  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:44  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:44  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:44  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:44  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:45  [ Thread-9:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:45  [ Thread-9:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:45  [ Thread-9:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:45  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:45  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:45  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:45  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:45  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:45  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:46  [ Thread-11:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:46  [ Thread-11:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:46  [ Thread-11:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:46  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:46  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:46  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:46  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:46  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:46  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:46  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:41:47  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:49  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:50  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:51  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:51  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:41:51  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:41:51  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:41:51  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:51  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:51  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:41:51  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:41:51  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:41:51  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:41:52  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:52  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:52  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:52  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:52  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:52  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:52  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:52  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:52  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:54  [ Thread-7:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:54  [ Thread-7:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:54  [ Thread-7:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:54  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:54  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:54  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:54  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:54  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:54  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:55  [ Thread-9:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:55  [ Thread-9:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:55  [ Thread-9:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:55  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:55  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:55  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:55  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:55  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:55  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:56  [ Thread-11:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:41:56  [ Thread-11:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:41:56  [ Thread-11:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:41:56  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:41:56  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:41:56  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:41:56  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:41:56  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:41:56  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:56  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:41:57  [ Thread-12:server.network.ServerThread:61 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-12 13:41:57  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:41:57  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-32
2021-07-12 13:41:57  [ JavaFX Application Thread:client.model.Client:767 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-12 13:41:57  [ Thread-12:server.network.ServerThread:102 ] - [ INFO ]  welcome info printed
2021-07-12 13:41:57  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:41:57  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":85}}Thread-32
2021-07-12 13:41:57  [ JavaFX Application Thread:client.model.Client:771 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":85}}JavaFX Application Thread
2021-07-12 13:41:57  [ JavaFX Application Thread:client.model.Client:775 ] - [ INFO ]  85
2021-07-12 13:41:57  [ JavaFX Application Thread:client.model.Client:776 ] - [ INFO ]  your clientID is: 85
2021-07-12 13:41:57  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:41:59  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:00  [ JavaFX Application Thread:client.model.Client:1213 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"32","figure":5}}
2021-07-12 13:42:00  [ Thread-12:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"32","figure":5}}
2021-07-12 13:42:00  [ Thread-12:protocol.ExecuteOrder:68 ] - [ INFO ]  check player figures
2021-07-12 13:42:00  [ Thread-12:protocol.ExecuteOrder:76 ] - [ INFO ]  addPlayer
2021-07-12 13:42:00  [ Thread-12:server.network.Server:246 ] - [ INFO ]  server added player
2021-07-12 13:42:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:00  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:00  [ Thread-12:server.network.Server:264 ] - [ INFO ]  server added player
2021-07-12 13:42:00  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":85,"name":"32","figure":5}}Thread-32
2021-07-12 13:42:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":85,"name":"32","figure":5}}Thread-33
2021-07-12 13:42:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":85,"name":"32","figure":5}}Thread-33
2021-07-12 13:42:00  [ Thread-12:server.network.Server:264 ] - [ INFO ]  server added player
2021-07-12 13:42:00  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":85,"name":"32","figure":5}}JavaFX Application Thread
2021-07-12 13:42:00  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":85,"name":"32","figure":5}}JavaFX Application Thread
2021-07-12 13:42:00  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":85,"name":"32","figure":5}}JavaFX Application Thread
2021-07-12 13:42:00  [ Thread-12:server.network.Server:264 ] - [ INFO ]  server added player
2021-07-12 13:42:00  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:00  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 13:42:00  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 13:42:00  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 13:42:00  [ Thread-12:server.network.Server:293 ] - [ INFO ]  server inform status of previous players
2021-07-12 13:42:00  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"qwe","figure":2}}Thread-32
2021-07-12 13:42:00  [ Thread-12:server.network.Server:293 ] - [ INFO ]  server inform status of previous players
2021-07-12 13:42:00  [ JavaFX Application Thread:client.model.Client:799 ] - [ INFO ]  flag launchen window
2021-07-12 13:42:00  [ Thread-12:server.network.Server:727 ] - [ INFO ]  server informs which map selected
2021-07-12 13:42:00  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:00  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"234","figure":4}}Thread-32
2021-07-12 13:42:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-33
2021-07-12 13:42:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-33
2021-07-12 13:42:00  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:00  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":85,"name":"32","figure":5}}Thread-32
2021-07-12 13:42:00  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:00  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-32
2021-07-12 13:42:00  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:00  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-32
2021-07-12 13:42:00  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:00  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-32
2021-07-12 13:42:00  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:00  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"qwe","figure":2}}JavaFX Application Thread
2021-07-12 13:42:00  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 13:42:00  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"234","figure":4}}JavaFX Application Thread
2021-07-12 13:42:00  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 13:42:00  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":85,"name":"32","figure":5}}JavaFX Application Thread
2021-07-12 13:42:00  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-12 13:42:00  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-12 13:42:01  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:01  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:42:01  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:42:01  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:42:01  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:01  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:01  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:42:01  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:42:01  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:42:01  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:42:02  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:02  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:02  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:02  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:02  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:02  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:02  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:02  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:02  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:04  [ Thread-7:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:04  [ Thread-7:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:04  [ Thread-7:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:04  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:04  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:04  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:04  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:04  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:04  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:04  [ JavaFX Application Thread:client.model.Client:1229 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:42:04  [ Thread-12:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:42:04  [ Thread-12:protocol.ExecuteOrder:112 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-12 13:42:04  [ Thread-12:server.network.Server:278 ] - [ INFO ]  server inform player status
2021-07-12 13:42:04  [ Thread-12:server.network.Server:312 ] - [ INFO ]  server informs first ready player to select a map
2021-07-12 13:42:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:04  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:04  [ Thread-12:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 3
2021-07-12 13:42:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":85,"ready":true}}Thread-33
2021-07-12 13:42:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":85,"ready":true}}Thread-33
2021-07-12 13:42:04  [ Thread-12:protocol.ExecuteOrder:515 ] - [ INFO ]  number enough, to play
2021-07-12 13:42:04  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":85,"ready":true}}Thread-32
2021-07-12 13:42:04  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":85,"ready":true}}
2021-07-12 13:42:04  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":85,"ready":true}}
2021-07-12 13:42:04  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":85,"ready":true}}
2021-07-12 13:42:04  [ Thread-12:protocol.ExecuteOrder:516 ] - [ INFO ]  clientIds: [33, 100, 85]
2021-07-12 13:42:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-33
2021-07-12 13:42:04  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-12 13:42:04  [ JavaFX Application Thread:client.model.Client:829 ] - [ INFO ]  in client ListProperty [value: [Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister]]
2021-07-12 13:42:04  [ Thread-12:server.network.Server:327 ] - [ INFO ]  server sends map
2021-07-12 13:42:04  [ Thread-12:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 13:42:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:04  [ Thread-12:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:42:04  [ Thread-14:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 85
2021-07-12 13:42:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:04  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-33
2021-07-12 13:42:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:04  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-32
2021-07-12 13:42:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-33
2021-07-12 13:42:04  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-33
2021-07-12 13:42:04  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-32
2021-07-12 13:42:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":85}}Thread-33
2021-07-12 13:42:04  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:04  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":85}}Thread-32
2021-07-12 13:42:04  [ Thread-12:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-33
2021-07-12 13:42:04  [ Thread-12:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 85: true
2021-07-12 13:42:04  [ Thread-32:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-32
2021-07-12 13:42:04  [ Thread-12:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 85: false
2021-07-12 13:42:04  [ Thread-32:client.model.Client:690 ] - [ INFO ]  ==========client 85 sent alive checked back.===========
2021-07-12 13:42:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":85}}Thread-33
2021-07-12 13:42:05  [ Thread-9:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:05  [ Thread-9:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:05  [ Thread-9:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:05  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:05  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:05  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:05  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:05  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:05  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:06  [ Thread-11:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:06  [ Thread-11:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:06  [ Thread-11:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:06  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:06  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:06  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:06  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:06  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:06  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:06  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:42:06  [ JavaFX Application Thread:client.model.Client:1338 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-12 13:42:06  [ Thread-12:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-12 13:42:06  [ Thread-12:server.network.Server:386 ] - [ INFO ]  server informs set starting point
2021-07-12 13:42:06  [ Thread-12:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 13:42:06  [ Thread-12:server.network.Server:745 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-12 13:42:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:06  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:06  [ Thread-12:protocol.ExecuteOrder:223 ] - [ INFO ]  after setting startPoint, priority list: [33, 100, 85, 33, 33]
2021-07-12 13:42:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":85}}Thread-33
2021-07-12 13:42:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":85}}Thread-33
2021-07-12 13:42:06  [ Thread-12:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:42:06  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":85}}Thread-32
2021-07-12 13:42:06  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  0
2021-07-12 13:42:06  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  0
2021-07-12 13:42:06  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:06  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  0
2021-07-12 13:42:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-33
2021-07-12 13:42:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-33
2021-07-12 13:42:06  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-32
2021-07-12 13:42:06  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:06  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["AdminPrivilege","AdminPrivilege","MemorySwap"]}}Thread-32
2021-07-12 13:42:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["AdminPrivilege","AdminPrivilege","MemorySwap"]}}Thread-33
2021-07-12 13:42:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["AdminPrivilege","AdminPrivilege","MemorySwap"]}}Thread-33
2021-07-12 13:42:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:06  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:42:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:42:06  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-32
2021-07-12 13:42:07  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:09  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:09  [ JavaFX Application Thread:client.model.Client:1501 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":"MemorySwap","isBuying":true}}
2021-07-12 13:42:09  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":"MemorySwap","isBuying":true}}
2021-07-12 13:42:09  [ Thread-0:server.network.Server:759 ] - [ INFO ]  server informs who bought which upgrade.
2021-07-12 13:42:09  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:09  [ Thread-0:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 13:42:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":33,"card":"MemorySwap"}}Thread-33
2021-07-12 13:42:09  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":33,"card":"MemorySwap"}}Thread-32
2021-07-12 13:42:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"UpgradeBought","messageBody":{"clientID":33,"card":"MemorySwap"}}Thread-33
2021-07-12 13:42:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:09  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:09  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-32
2021-07-12 13:42:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-33
2021-07-12 13:42:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-33
2021-07-12 13:42:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:09  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":33,"cardsInHand":9}}Thread-33
2021-07-12 13:42:09  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":33,"cardsInHand":9}}Thread-32
2021-07-12 13:42:09  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  33have got 9 cards
2021-07-12 13:42:09  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  33have got 9 cards
2021-07-12 13:42:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:09  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":100,"cardsInHand":9}}Thread-33
2021-07-12 13:42:09  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  100have got 9 cards
2021-07-12 13:42:09  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":100,"cardsInHand":9}}Thread-32
2021-07-12 13:42:09  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  100have got 9 cards
2021-07-12 13:42:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":85,"cardsInHand":9}}Thread-33
2021-07-12 13:42:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":85,"cardsInHand":9}}Thread-33
2021-07-12 13:42:09  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  85have got 9 cards
2021-07-12 13:42:09  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  85have got 9 cards
2021-07-12 13:42:09  [ Thread-0:server.network.Server:400 ] - [ INFO ]  server informs your cards.
2021-07-12 13:42:09  [ Thread-0:server.network.Server:400 ] - [ INFO ]  server informs your cards.
2021-07-12 13:42:09  [ Thread-0:server.network.Server:400 ] - [ INFO ]  server informs your cards.
2021-07-12 13:42:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["TurnRight","TurnLeft","MoveII","TurnLeft","MoveII","PowerUp","TurnRight","MoveI","MoveI"]}}Thread-33
2021-07-12 13:42:09  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["Again","TurnLeft","TurnRight","MoveIII","Again","MoveII","TurnRight","MoveI","MoveII"]}}Thread-33
2021-07-12 13:42:09  [ JavaFX Application Thread:client.model.Client:932 ] - [ INFO ]  clients your cards
2021-07-12 13:42:09  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["MoveII","TurnLeft","MoveII","BackUp","MoveIII","PowerUp","MoveI","Again","MoveI"]}}Thread-32
2021-07-12 13:42:09  [ JavaFX Application Thread:client.model.Client:932 ] - [ INFO ]  clients your cards
2021-07-12 13:42:09  [ JavaFX Application Thread:client.model.Client:932 ] - [ INFO ]  clients your cards
2021-07-12 13:42:09  [ Thread-13:server.network.Connected:70 ] - [ INFO ]  85 in while loop print flagconnect: false
2021-07-12 13:42:10  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:11  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:11  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:42:11  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:42:11  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:42:11  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:11  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:11  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:42:11  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:42:11  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:42:11  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:42:12  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:12  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:12  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:12  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:12  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:12  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:12  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:12  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:12  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:14  [ Thread-7:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:14  [ Thread-7:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:14  [ Thread-7:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:14  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:14  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:14  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:14  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:14  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:14  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:14  [ Thread-14:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 85
2021-07-12 13:42:14  [ Thread-14:server.network.AliveCheck:64 ] - [ INFO ]  client 85 flag connect = false
2021-07-12 13:42:14  [ Thread-14:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 85
2021-07-12 13:42:14  [ Thread-12:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:14  [ Thread-32:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-32
2021-07-12 13:42:14  [ Thread-12:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 85: true
2021-07-12 13:42:14  [ Thread-32:client.model.Client:690 ] - [ INFO ]  ==========client 85 sent alive checked back.===========
2021-07-12 13:42:14  [ Thread-12:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 85: false
2021-07-12 13:42:14  [ Thread-13:server.network.Connected:70 ] - [ INFO ]  85 in while loop print flagconnect: false
2021-07-12 13:42:15  [ Thread-9:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:15  [ Thread-9:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:15  [ Thread-9:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:15  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:15  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:15  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:15  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:15  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:15  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:16  [ Thread-11:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:16  [ Thread-11:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:16  [ Thread-11:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:16  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:16  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:16  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:16  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:16  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:16  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:16  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:42:17  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:19  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:19  [ Thread-13:server.network.Connected:70 ] - [ INFO ]  85 in while loop print flagconnect: false
2021-07-12 13:42:20  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:21  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:21  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:42:21  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:42:21  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:42:21  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:21  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:21  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:42:21  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:42:21  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:42:21  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:42:22  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:22  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:22  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:22  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:22  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:22  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:22  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:22  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:22  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:24  [ Thread-7:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:24  [ Thread-7:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:24  [ Thread-7:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:24  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:24  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:24  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:24  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:24  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:24  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:24  [ Thread-14:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 85
2021-07-12 13:42:24  [ Thread-14:server.network.AliveCheck:64 ] - [ INFO ]  client 85 flag connect = false
2021-07-12 13:42:24  [ Thread-14:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 85
2021-07-12 13:42:24  [ Thread-12:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:24  [ Thread-32:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-32
2021-07-12 13:42:24  [ Thread-12:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 85: true
2021-07-12 13:42:24  [ Thread-32:client.model.Client:690 ] - [ INFO ]  ==========client 85 sent alive checked back.===========
2021-07-12 13:42:24  [ Thread-12:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 85: false
2021-07-12 13:42:24  [ Thread-13:server.network.Connected:70 ] - [ INFO ]  85 in while loop print flagconnect: false
2021-07-12 13:42:25  [ Thread-9:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:25  [ Thread-9:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:25  [ Thread-9:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:25  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:25  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:25  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:25  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:25  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:25  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:26  [ Thread-11:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:26  [ Thread-11:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:26  [ Thread-11:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:26  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:26  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:26  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:26  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:26  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:26  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:26  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:42:27  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:29  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:29  [ Thread-13:server.network.Connected:70 ] - [ INFO ]  85 in while loop print flagconnect: false
2021-07-12 13:42:30  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:31  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:31  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:42:31  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:42:31  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:42:31  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:31  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:31  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:42:31  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:42:31  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:42:31  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:42:32  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:32  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:32  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:32  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:32  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:32  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:32  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:32  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:32  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:34  [ Thread-7:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:34  [ Thread-7:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:34  [ Thread-7:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:34  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:34  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:34  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:34  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:34  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:34  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:34  [ Thread-14:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 85
2021-07-12 13:42:34  [ Thread-14:server.network.AliveCheck:64 ] - [ INFO ]  client 85 flag connect = false
2021-07-12 13:42:34  [ Thread-14:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 85
2021-07-12 13:42:34  [ Thread-12:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:34  [ Thread-32:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-32
2021-07-12 13:42:34  [ Thread-12:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 85: true
2021-07-12 13:42:34  [ Thread-32:client.model.Client:690 ] - [ INFO ]  ==========client 85 sent alive checked back.===========
2021-07-12 13:42:34  [ Thread-12:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 85: false
2021-07-12 13:42:34  [ Thread-13:server.network.Connected:70 ] - [ INFO ]  85 in while loop print flagconnect: false
2021-07-12 13:42:35  [ Thread-9:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:35  [ Thread-9:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:35  [ Thread-9:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:35  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:35  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:35  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:35  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:35  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:35  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:36  [ Thread-11:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:36  [ Thread-11:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:36  [ Thread-11:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:36  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:36  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:36  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:36  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:36  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:36  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:36  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:42:38  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:39  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:39  [ Thread-13:server.network.Connected:70 ] - [ INFO ]  85 in while loop print flagconnect: false
2021-07-12 13:42:40  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:41  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:41  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:42:41  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:42:41  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:42:41  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:41  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:41  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:42:41  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:42:41  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:42:41  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:42:42  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:42  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:42  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:42  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:42  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:42  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:42  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:42  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:43  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:44  [ Thread-7:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:44  [ Thread-7:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:44  [ Thread-7:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:44  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:44  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:44  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:44  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:44  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:44  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:44  [ Thread-14:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 85
2021-07-12 13:42:44  [ Thread-14:server.network.AliveCheck:64 ] - [ INFO ]  client 85 flag connect = false
2021-07-12 13:42:44  [ Thread-14:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 85
2021-07-12 13:42:44  [ Thread-12:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:44  [ Thread-32:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-32
2021-07-12 13:42:44  [ Thread-12:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 85: true
2021-07-12 13:42:44  [ Thread-32:client.model.Client:690 ] - [ INFO ]  ==========client 85 sent alive checked back.===========
2021-07-12 13:42:44  [ Thread-12:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 85: false
2021-07-12 13:42:44  [ Thread-13:server.network.Connected:70 ] - [ INFO ]  85 in while loop print flagconnect: false
2021-07-12 13:42:45  [ Thread-9:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:45  [ Thread-9:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:45  [ Thread-9:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:45  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:45  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:45  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:45  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:45  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:45  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:46  [ Thread-11:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:46  [ Thread-11:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:46  [ Thread-11:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:46  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:46  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:46  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:46  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:46  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:46  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:46  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:42:48  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:49  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:49  [ Thread-13:server.network.Connected:70 ] - [ INFO ]  85 in while loop print flagconnect: false
2021-07-12 13:42:50  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:51  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:51  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:42:51  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:42:51  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:42:51  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:51  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:51  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 13:42:51  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:42:51  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 13:42:51  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:42:52  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:52  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:52  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:52  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:52  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:52  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:52  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:52  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:53  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:54  [ Thread-7:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:54  [ Thread-7:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:54  [ Thread-7:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:54  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:54  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:54  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:54  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:54  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:54  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:54  [ Thread-14:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 85
2021-07-12 13:42:54  [ Thread-14:server.network.AliveCheck:64 ] - [ INFO ]  client 85 flag connect = false
2021-07-12 13:42:54  [ Thread-14:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 85
2021-07-12 13:42:54  [ Thread-12:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:54  [ Thread-32:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-32
2021-07-12 13:42:54  [ Thread-12:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 85: true
2021-07-12 13:42:54  [ Thread-32:client.model.Client:690 ] - [ INFO ]  ==========client 85 sent alive checked back.===========
2021-07-12 13:42:54  [ Thread-12:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 85: false
2021-07-12 13:42:54  [ Thread-13:server.network.Connected:70 ] - [ INFO ]  85 in while loop print flagconnect: false
2021-07-12 13:42:55  [ Thread-9:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:55  [ Thread-9:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:55  [ Thread-9:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:55  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:55  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:55  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:55  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:55  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:55  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:56  [ JavaFX Application Thread:client.model.Client:1229 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:42:56  [ Thread-12:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:42:56  [ Thread-12:protocol.ExecuteOrder:112 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-12 13:42:56  [ Thread-12:server.network.Server:278 ] - [ INFO ]  server inform player status
2021-07-12 13:42:56  [ Thread-12:server.network.Server:312 ] - [ INFO ]  server informs first ready player to select a map
2021-07-12 13:42:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:56  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:56  [ Thread-12:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 3
2021-07-12 13:42:56  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":85,"ready":true}}Thread-32
2021-07-12 13:42:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":85,"ready":true}}Thread-33
2021-07-12 13:42:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":85,"ready":true}}Thread-33
2021-07-12 13:42:56  [ Thread-12:protocol.ExecuteOrder:515 ] - [ INFO ]  number enough, to play
2021-07-12 13:42:56  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":85,"ready":true}}
2021-07-12 13:42:56  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":85,"ready":true}}
2021-07-12 13:42:56  [ Thread-12:protocol.ExecuteOrder:516 ] - [ INFO ]  clientIds: [33, 100, 85]
2021-07-12 13:42:56  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":85,"ready":true}}
2021-07-12 13:42:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:56  [ Thread-11:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:42:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-33
2021-07-12 13:42:56  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-12 13:42:56  [ Thread-11:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:42:56  [ Thread-12:server.network.Server:327 ] - [ INFO ]  server sends map
2021-07-12 13:42:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:56  [ Thread-11:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:42:56  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:56  [ Thread-12:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 13:42:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:56  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-32
2021-07-12 13:42:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-33
2021-07-12 13:42:56  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 13:42:56  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:42:56  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:42:56  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-32
2021-07-12 13:42:56  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 13:42:56  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 13:42:56  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:42:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-33
2021-07-12 13:42:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:56  [ JavaFX Application Thread:client.model.Client:829 ] - [ INFO ]  in client ListProperty [value: [Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister]]
2021-07-12 13:42:56  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:42:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-33
2021-07-12 13:42:56  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-33
2021-07-12 13:42:56  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:56  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 13:42:58  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:59  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:42:59  [ Thread-13:server.network.Connected:70 ] - [ INFO ]  85 in while loop print flagconnect: false
2021-07-12 13:43:00  [ JavaFX Application Thread:client.model.Client:1229 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:43:00  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:43:00  [ Thread-1:protocol.ExecuteOrder:112 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-12 13:43:00  [ Thread-1:server.network.Server:278 ] - [ INFO ]  server inform player status
2021-07-12 13:43:00  [ Thread-1:server.network.Server:312 ] - [ INFO ]  server informs first ready player to select a map
2021-07-12 13:43:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:00  [ Thread-1:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 3
2021-07-12 13:43:00  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:43:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-33
2021-07-12 13:43:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-33
2021-07-12 13:43:00  [ Thread-1:protocol.ExecuteOrder:515 ] - [ INFO ]  number enough, to play
2021-07-12 13:43:00  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-32
2021-07-12 13:43:00  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-12 13:43:00  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-12 13:43:00  [ Thread-1:protocol.ExecuteOrder:516 ] - [ INFO ]  clientIds: [33, 100, 85]
2021-07-12 13:43:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:00  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-12 13:43:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-33
2021-07-12 13:43:00  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-12 13:43:00  [ Thread-1:server.network.Server:327 ] - [ INFO ]  server sends map
2021-07-12 13:43:00  [ Thread-1:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 13:43:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:00  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:43:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:00  [ JavaFX Application Thread:client.model.Client:829 ] - [ INFO ]  in client ListProperty [value: [Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister]]
2021-07-12 13:43:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-33
2021-07-12 13:43:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:00  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-32
2021-07-12 13:43:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-33
2021-07-12 13:43:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-33
2021-07-12 13:43:00  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:43:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:00  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-32
2021-07-12 13:43:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-33
2021-07-12 13:43:00  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:43:01  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:43:01  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:43:01  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 13:43:01  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 13:43:01  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:43:01  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 13:43:01  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: true
2021-07-12 13:43:01  [ Thread-2:server.network.Connected:73 ] - [ INFO ]  100 in first if print flagconnect: true
2021-07-12 13:43:02  [ JavaFX Application Thread:client.model.Client:1229 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:43:02  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:43:02  [ Thread-0:protocol.ExecuteOrder:112 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-12 13:43:02  [ Thread-0:server.network.Server:278 ] - [ INFO ]  server inform player status
2021-07-12 13:43:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:02  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:43:02  [ Thread-0:server.network.Server:312 ] - [ INFO ]  server informs first ready player to select a map
2021-07-12 13:43:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-33
2021-07-12 13:43:02  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-32
2021-07-12 13:43:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-33
2021-07-12 13:43:02  [ Thread-0:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 3
2021-07-12 13:43:02  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-12 13:43:02  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-12 13:43:02  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-12 13:43:02  [ Thread-0:protocol.ExecuteOrder:515 ] - [ INFO ]  number enough, to play
2021-07-12 13:43:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:02  [ Thread-0:protocol.ExecuteOrder:516 ] - [ INFO ]  clientIds: [33, 100, 85]
2021-07-12 13:43:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-33
2021-07-12 13:43:02  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-12 13:43:02  [ JavaFX Application Thread:client.model.Client:829 ] - [ INFO ]  in client ListProperty [value: [Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister]]
2021-07-12 13:43:02  [ Thread-0:server.network.Server:327 ] - [ INFO ]  server sends map
2021-07-12 13:43:02  [ Thread-0:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 13:43:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:02  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:43:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-33
2021-07-12 13:43:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:02  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-32
2021-07-12 13:43:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B"2021-07-12 13:43:02  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
,"speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-33
2021-07-12 13:43:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-33
2021-07-12 13:43:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:02  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-32
2021-07-12 13:43:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-33
2021-07-12 13:43:02  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:43:02  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 13:43:02  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:43:02  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:43:02  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:43:03  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:43:03  [ JavaFX Application Thread:client.model.Client:1229 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 13:43:03  [ Thread-2:server.network.Connected:82 ] - [ INFO ]  clientNr. 100 in second if print flagconnect
2021-07-12 13:43:03  [ Thread-2:server.network.Connected:83 ] - [ INFO ]  clientNr. 100 in connected flag is: true
2021-07-12 13:43:03  [ Thread-2:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:43:03  [ Thread-2:server.network.Server:699 ] - [ INFO ]  server informs connection update
2021-07-12 13:43:03  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:03  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:43:03  [ Thread-2:server.network.Connected:89 ] - [ INFO ]  client 100 disconnected.
2021-07-12 13:43:03  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":85}}Thread-33
2021-07-12 13:43:03  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:03  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":85}}Thread-32
2021-07-12 13:43:03  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ConnectionUpdate","messageBody":{"clientID":100,"action":"remove","connected":false}}Thread-33
2021-07-12 13:43:03  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:43:03  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ConnectionUpdate","messageBody":{"clientID":100,"action":"remove","connected":false}}Thread-32
2021-07-12 13:43:04  [ Thread-7:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:43:04  [ Thread-7:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = true
2021-07-12 13:43:04  [ Thread-7:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:43:04  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:43:04  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:43:04  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:43:04  [ Thread-14:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 85
2021-07-12 13:43:04  [ Thread-14:server.network.AliveCheck:64 ] - [ INFO ]  client 85 flag connect = false
2021-07-12 13:43:04  [ Thread-14:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 85
2021-07-12 13:43:04  [ Thread-32:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-32
2021-07-12 13:43:04  [ Thread-32:client.model.Client:690 ] - [ INFO ]  ==========client 85 sent alive checked back.===========
2021-07-12 13:43:04  [ Thread-13:server.network.Connected:70 ] - [ INFO ]  85 in while loop print flagconnect: true
2021-07-12 13:43:04  [ Thread-13:server.network.Connected:73 ] - [ INFO ]  85 in first if print flagconnect: true
2021-07-12 13:43:05  [ Thread-9:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:43:05  [ Thread-9:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = true
2021-07-12 13:43:05  [ Thread-9:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:43:05  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:43:05  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:43:05  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:43:06  [ Thread-11:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:43:06  [ Thread-11:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = true
2021-07-12 13:43:06  [ Thread-11:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:43:06  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 13:43:06  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 13:43:06  [ Thread-10:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: true
2021-07-12 13:43:06  [ Thread-10:server.network.Connected:73 ] - [ INFO ]  33 in first if print flagconnect: true
2021-07-12 13:43:06  [ Thread-13:server.network.Connected:82 ] - [ INFO ]  clientNr. 85 in second if print flagconnect
2021-07-12 13:43:06  [ Thread-13:server.network.Connected:83 ] - [ INFO ]  clientNr. 85 in connected flag is: true
2021-07-12 13:43:06  [ Thread-13:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:43:06  [ Thread-13:server.network.Server:699 ] - [ INFO ]  server informs connection update
2021-07-12 13:43:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:06  [ Thread-13:server.network.Connected:89 ] - [ INFO ]  client 85 disconnected.
2021-07-12 13:43:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Error","messageBody":{"error":"Only you left in game, please quit the game."}}Thread-33
2021-07-12 13:43:06  [ JavaFX Application Thread:client.model.Client:753 ] - [ INFO ]  error printed
2021-07-12 13:43:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 13:43:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 13:43:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ConnectionUpdate","messageBody":{"clientID":85,"action":"remove","connected":false}}Thread-33
2021-07-12 13:43:08  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:43:08  [ Thread-10:server.network.Connected:82 ] - [ INFO ]  clientNr. 33 in second if print flagconnect
2021-07-12 13:43:08  [ Thread-10:server.network.Connected:83 ] - [ INFO ]  clientNr. 33 in connected flag is: true
2021-07-12 13:43:08  [ Thread-10:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 13:43:08  [ Thread-10:server.network.Server:699 ] - [ INFO ]  server informs connection update
2021-07-12 13:43:08  [ Thread-10:server.network.Connected:89 ] - [ INFO ]  client 33 disconnected.
2021-07-12 13:43:09  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:43:10  [ Thread-8:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:43:11  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 13:43:11  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = true
2021-07-12 13:43:12  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:43:12  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = true
2021-07-12 13:43:12  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:43:13  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:43:14  [ Thread-7:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:43:14  [ Thread-7:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = true
2021-07-12 13:43:14  [ Thread-7:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:43:14  [ Thread-6:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 13:43:14  [ Thread-14:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 85
2021-07-12 13:43:14  [ Thread-14:server.network.AliveCheck:64 ] - [ INFO ]  client 85 flag connect = true
2021-07-12 13:43:15  [ Thread-9:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 13:43:15  [ Thread-9:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = true
2021-07-12 13:43:15  [ Thread-9:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 13:45:28  [ Thread-0:server.network.ServerThread:61 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-12 13:45:28  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:45:28  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-32
2021-07-12 13:45:28  [ JavaFX Application Thread:client.model.Client:767 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-12 13:45:28  [ Thread-0:server.network.ServerThread:102 ] - [ INFO ]  welcome info printed
2021-07-12 13:45:28  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:45:28  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":33}}Thread-32
2021-07-12 13:45:28  [ JavaFX Application Thread:client.model.Client:771 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":33}}JavaFX Application Thread
2021-07-12 13:45:28  [ JavaFX Application Thread:client.model.Client:775 ] - [ INFO ]  33
2021-07-12 13:45:28  [ JavaFX Application Thread:client.model.Client:776 ] - [ INFO ]  your clientID is: 33
2021-07-12 13:45:31  [ JavaFX Application Thread:client.model.Client:1213 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"asd","figure":5}}
2021-07-12 13:45:31  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"asd","figure":5}}
2021-07-12 13:45:31  [ Thread-0:protocol.ExecuteOrder:68 ] - [ INFO ]  check player figures
2021-07-12 13:45:31  [ Thread-0:protocol.ExecuteOrder:76 ] - [ INFO ]  addPlayer
2021-07-12 13:45:31  [ Thread-0:server.network.Server:246 ] - [ INFO ]  server added player
2021-07-12 13:45:31  [ Thread-32:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-32
2021-07-12 13:45:31  [ Thread-32:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"asd","figure":5}}Thread-32
2021-07-12 13:45:31  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"asd","figure":5}}JavaFX Application Thread
2021-07-12 13:45:31  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 13:45:31  [ JavaFX Application Thread:client.model.Client:799 ] - [ INFO ]  flag launchen window
2021-07-12 13:45:37  [ Thread-0:server.network.Server:699 ] - [ INFO ]  server informs connection update
2021-07-12 14:03:03  [ Thread-0:server.network.ServerThread:61 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-12 14:03:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-33
2021-07-12 14:03:04  [ JavaFX Application Thread:client.model.Client:767 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-12 14:03:04  [ Thread-0:server.network.ServerThread:102 ] - [ INFO ]  welcome info printed
2021-07-12 14:03:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:03:04  [ JavaFX Application Thread:client.model.Client:771 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":33}}JavaFX Application Thread
2021-07-12 14:03:04  [ JavaFX Application Thread:client.model.Client:775 ] - [ INFO ]  33
2021-07-12 14:03:04  [ JavaFX Application Thread:client.model.Client:776 ] - [ INFO ]  your clientID is: 33
2021-07-12 14:03:06  [ JavaFX Application Thread:client.model.Client:1213 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"e","figure":3}}
2021-07-12 14:03:06  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"e","figure":3}}
2021-07-12 14:03:06  [ Thread-0:protocol.ExecuteOrder:68 ] - [ INFO ]  check player figures
2021-07-12 14:03:06  [ Thread-0:protocol.ExecuteOrder:76 ] - [ INFO ]  addPlayer
2021-07-12 14:03:06  [ Thread-0:server.network.Server:246 ] - [ INFO ]  server added player
2021-07-12 14:03:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"e","figure":3}}Thread-33
2021-07-12 14:03:06  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"e","figure":3}}JavaFX Application Thread
2021-07-12 14:03:06  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 14:03:06  [ JavaFX Application Thread:client.model.Client:799 ] - [ INFO ]  flag launchen window
2021-07-12 14:03:17  [ Thread-1:server.network.ServerThread:61 ] - [ INFO ]  protocol to client: 
{"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}
2021-07-12 14:03:17  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:17  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"HelloClient","messageBody":{"protocol":"Version 1.0"}}Thread-33
2021-07-12 14:03:18  [ JavaFX Application Thread:client.model.Client:767 ] - [ INFO ]  protocol from Server: 
{"messageType":"HelloServer","messageBody":{"group":"CC","protocol":"Version 1.0","isAI":false}}
2021-07-12 14:03:18  [ Thread-1:server.network.ServerThread:102 ] - [ INFO ]  welcome info printed
2021-07-12 14:03:18  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:18  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Welcome","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:03:18  [ JavaFX Application Thread:client.model.Client:771 ] - [ INFO ]  {"messageType":"Welcome","messageBody":{"clientID":100}}JavaFX Application Thread
2021-07-12 14:03:18  [ JavaFX Application Thread:client.model.Client:775 ] - [ INFO ]  100
2021-07-12 14:03:18  [ JavaFX Application Thread:client.model.Client:776 ] - [ INFO ]  your clientID is: 100
2021-07-12 14:03:20  [ JavaFX Application Thread:client.model.Client:1213 ] - [ INFO ]  {"messageType":"PlayerValues","messageBody":{"name":"cv","figure":5}}
2021-07-12 14:03:20  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayerValues","messageBody":{"name":"cv","figure":5}}
2021-07-12 14:03:20  [ Thread-1:protocol.ExecuteOrder:68 ] - [ INFO ]  check player figures
2021-07-12 14:03:20  [ Thread-1:protocol.ExecuteOrder:76 ] - [ INFO ]  addPlayer
2021-07-12 14:03:20  [ Thread-1:server.network.Server:246 ] - [ INFO ]  server added player
2021-07-12 14:03:20  [ Thread-1:server.network.Server:264 ] - [ INFO ]  server added player
2021-07-12 14:03:20  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:20  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:20  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"cv","figure":5}}Thread-33
2021-07-12 14:03:20  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"cv","figure":5}}Thread-33
2021-07-12 14:03:20  [ Thread-1:server.network.Server:264 ] - [ INFO ]  server added player
2021-07-12 14:03:20  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"cv","figure":5}}JavaFX Application Thread
2021-07-12 14:03:20  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"cv","figure":5}}JavaFX Application Thread
2021-07-12 14:03:20  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:20  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"e","figure":3}}Thread-33
2021-07-12 14:03:20  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 14:03:20  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 14:03:20  [ JavaFX Application Thread:client.model.Client:799 ] - [ INFO ]  flag launchen window
2021-07-12 14:03:20  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:20  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"cv","figure":5}}Thread-33
2021-07-12 14:03:21  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":33,"name":"e","figure":3}}JavaFX Application Thread
2021-07-12 14:03:21  [ JavaFX Application Thread:client.model.Client:792 ] - [ INFO ]  null: null
2021-07-12 14:03:21  [ JavaFX Application Thread:client.model.Client:782 ] - [ INFO ]  {"messageType":"PlayerAdded","messageBody":{"clientID":100,"name":"cv","figure":5}}JavaFX Application Thread
2021-07-12 14:03:31  [ JavaFX Application Thread:client.model.Client:1229 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 14:03:31  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 14:03:31  [ Thread-0:protocol.ExecuteOrder:112 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-12 14:03:31  [ Thread-0:server.network.Server:278 ] - [ INFO ]  server inform player status
2021-07-12 14:03:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:31  [ Thread-0:server.network.Server:312 ] - [ INFO ]  server informs first ready player to select a map
2021-07-12 14:03:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-33
2021-07-12 14:03:31  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-12 14:03:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}Thread-33
2021-07-12 14:03:31  [ Thread-0:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 1
2021-07-12 14:03:31  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":33,"ready":true}}
2021-07-12 14:03:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-33
2021-07-12 14:03:31  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:03:31  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-12 14:03:31  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:03:31  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:03:31  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:03:31  [ JavaFX Application Thread:client.model.Client:829 ] - [ INFO ]  in client ListProperty [value: [Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister]]
2021-07-12 14:03:31  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:03:31  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:03:34  [ JavaFX Application Thread:client.model.Client:1229 ] - [ INFO ]  {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 14:03:34  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStatus","messageBody":{"ready":true}}
2021-07-12 14:03:34  [ Thread-1:protocol.ExecuteOrder:112 ] - [ INFO ]  set Status in ExecuteOrder
2021-07-12 14:03:34  [ Thread-1:server.network.Server:278 ] - [ INFO ]  server inform player status
2021-07-12 14:03:34  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:34  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:34  [ Thread-1:server.network.Server:312 ] - [ INFO ]  server informs first ready player to select a map
2021-07-12 14:03:34  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-33
2021-07-12 14:03:34  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}Thread-33
2021-07-12 14:03:34  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-12 14:03:34  [ JavaFX Application Thread:client.model.Client:814 ] - [ INFO ]  {"messageType":"PlayerStatus","messageBody":{"clientID":100,"ready":true}}
2021-07-12 14:03:34  [ Thread-1:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 2
2021-07-12 14:03:34  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:34  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}Thread-33
2021-07-12 14:03:34  [ JavaFX Application Thread:client.model.Client:822 ] - [ INFO ]  {"messageType":"SelectMap","messageBody":{"availableMaps":["Dizzy Highway","Lost Bearings","Death Trap","Extra Crispy","Twister"]}}
2021-07-12 14:03:34  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:03:34  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:03:34  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:03:34  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:03:34  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:03:34  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:03:34  [ JavaFX Application Thread:client.model.Client:829 ] - [ INFO ]  in client ListProperty [value: [Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister, Dizzy Highway, Lost Bearings, Death Trap, Extra Crispy, Twister]]
2021-07-12 14:03:34  [ JavaFX Application Thread:client.model.Client:1272 ] - [ INFO ]  {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}
2021-07-12 14:03:34  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}
2021-07-12 14:03:34  [ Thread-0:protocol.ExecuteOrder:146 ] - [ INFO ]  set Map in ExecuteOrder
2021-07-12 14:03:34  [ Thread-0:server.network.Server:727 ] - [ INFO ]  server informs which map selected
2021-07-12 14:03:34  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:34  [ Thread-0:server.game.Game:240 ] - [ INFO ]  Game sets map.
2021-07-12 14:03:34  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:34  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-33
2021-07-12 14:03:34  [ Thread-0:server.maps.Board:19 ] - [ INFO ]  Board sets map of Dizzy Highway.
2021-07-12 14:03:34  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"MapSelected","messageBody":{"map":"Dizzy Highway"}}Thread-33
2021-07-12 14:03:34  [ Thread-0:protocol.ExecuteOrder:513 ] - [ INFO ]  number of ready clients: 2
2021-07-12 14:03:34  [ Thread-0:protocol.ExecuteOrder:515 ] - [ INFO ]  number enough, to play
2021-07-12 14:03:34  [ Thread-0:protocol.ExecuteOrder:516 ] - [ INFO ]  clientIds: [33, 100]
2021-07-12 14:03:35  [ Thread-0:server.network.Server:327 ] - [ INFO ]  server sends map
2021-07-12 14:03:35  [ Thread-0:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 14:03:35  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:03:35  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:35  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:35  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-33
2021-07-12 14:03:35  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:35  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"GameStarted","messageBody":{"gameMap":[[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Antenna","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"StartPoint","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"Start A","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"Start A","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"Start A","speed":1,"orientations":["right","left"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","top","right"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom","left","top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","left","top"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","top","right"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"RestartPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B"2021-07-12 14:03:35  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-33
,"speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["left"],"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Laser","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":1},{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["top"],"registers":null,"count":0}],[{"type":"Wall","isOnBoard":"5B","speed":0,"orientations":["bottom"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["right","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","right","bottom"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top","bottom","left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["top"],"registers":null,"count":0}]],[[{"type":"EnergySpace","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"ConveyorBelt","isOnBoard":"5B","speed":2,"orientations":["left"],"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0},{"type":"CheckPoint","isOnBoard":"DizzyHighway","speed":0,"orientations":null,"registers":null,"count":1}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}],[{"type":"Empty","isOnBoard":"5B","speed":0,"orientations":null,"registers":null,"count":0}]]]}}Thread-33
2021-07-12 14:03:35  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:35  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:35  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:03:35  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":0}}Thread-33
2021-07-12 14:03:35  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:35  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:03:36  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:03:39  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:03:41  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:03:41  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:03:41  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:03:41  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:03:41  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:03:41  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:03:41  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:03:41  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:03:41  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:03:44  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:03:44  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:03:44  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:03:44  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:03:44  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:03:44  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:03:44  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:03:44  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:03:44  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:03:46  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:03:49  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:03:51  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:03:51  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:03:51  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:03:51  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:03:51  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:03:51  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:03:51  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:03:51  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:03:51  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:03:54  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:03:54  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:03:54  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:03:54  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:03:54  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:03:54  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:03:54  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:03:54  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:03:54  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:03:54  [ JavaFX Application Thread:client.model.Client:1338 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":3}}
2021-07-12 14:03:54  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":3}}
2021-07-12 14:03:54  [ Thread-0:server.network.Server:386 ] - [ INFO ]  server informs set starting point
2021-07-12 14:03:54  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:03:54  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:54  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:54  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":3,"clientID":33}}Thread-33
2021-07-12 14:03:54  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":3,"clientID":33}}Thread-33
2021-07-12 14:03:54  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:54  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:54  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:03:54  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:03:54  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  0
2021-07-12 14:03:54  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  0
2021-07-12 14:03:56  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:03:58  [ JavaFX Application Thread:client.model.Client:1338 ] - [ INFO ]  {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-12 14:03:58  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SetStartingPoint","messageBody":{"x":0,"y":6}}
2021-07-12 14:03:58  [ Thread-1:server.network.Server:386 ] - [ INFO ]  server informs set starting point
2021-07-12 14:03:58  [ Thread-1:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 14:03:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:58  [ Thread-1:server.network.Server:745 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-12 14:03:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":100}}Thread-33
2021-07-12 14:03:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:58  [ Thread-1:protocol.ExecuteOrder:223 ] - [ INFO ]  after setting startPoint, priority list: [33, 100]
2021-07-12 14:03:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"StartingPointTaken","messageBody":{"x":0,"y":6,"clientID":100}}Thread-33
2021-07-12 14:03:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-33
2021-07-12 14:03:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:58  [ Thread-1:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:03:58  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  0
2021-07-12 14:03:58  [ JavaFX Application Thread:client.model.Client:929 ] - [ INFO ]  0
2021-07-12 14:03:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-33
2021-07-12 14:03:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["AdminPrivilege","SpamBlocker"]}}Thread-33
2021-07-12 14:03:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["AdminPrivilege","SpamBlocker"]}}Thread-33
2021-07-12 14:03:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:58  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:03:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:03:58  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:03:59  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:04:01  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:04:01  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:04:01  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:04:01  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:04:01  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:04:01  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:04:01  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:04:01  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:04:01  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:04:04  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:04:04  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:04:04  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:04:04  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:04:04  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:04:04  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:04:04  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:04:04  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:04:04  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:04:04  [ JavaFX Application Thread:client.model.Client:1495 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":null,"isBuying":false}}
2021-07-12 14:04:04  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":null,"isBuying":false}}
2021-07-12 14:04:04  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:04:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:04  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:04:04  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:04:06  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:04:08  [ JavaFX Application Thread:client.model.Client:1495 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":null,"isBuying":false}}
2021-07-12 14:04:08  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":null,"isBuying":false}}
2021-07-12 14:04:08  [ Thread-1:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 14:04:08  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:08  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:08  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-33
2021-07-12 14:04:08  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-33
2021-07-12 14:04:08  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:08  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":33,"cardsInHand":9}}Thread-33
2021-07-12 14:04:08  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  33have got 9 cards
2021-07-12 14:04:08  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:08  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":100,"cardsInHand":9}}Thread-33
2021-07-12 14:04:08  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  100have got 9 cards
2021-07-12 14:04:08  [ Thread-1:server.network.Server:400 ] - [ INFO ]  server informs your cards.
2021-07-12 14:04:08  [ Thread-1:server.network.Server:400 ] - [ INFO ]  server informs your cards.
2021-07-12 14:04:08  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:08  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:08  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["Again","TurnRight","MoveII","TurnLeft","TurnRight","UTurn","BackUp","MoveII","MoveI"]}}Thread-33
2021-07-12 14:04:08  [ JavaFX Application Thread:client.model.Client:932 ] - [ INFO ]  clients your cards
2021-07-12 14:04:08  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["TurnRight","TurnLeft","MoveI","Again","MoveI","MoveII","MoveII","UTurn","PowerUp"]}}Thread-33
2021-07-12 14:04:08  [ JavaFX Application Thread:client.model.Client:932 ] - [ INFO ]  clients your cards
2021-07-12 14:04:09  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:04:11  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:04:11  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:04:11  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:04:11  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:04:11  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:04:11  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:04:11  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:04:11  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:04:11  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:04:14  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:04:14  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:04:14  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:04:14  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:04:14  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:04:14  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:04:14  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:04:14  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:04:14  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:04:14  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":1}}
2021-07-12 14:04:14  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":1}}
2021-07-12 14:04:14  [ Thread-1:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveII
2021-07-12 14:04:14  [ Thread-1:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:04:14  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:14  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:14  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":1,"filled":true}}Thread-33
2021-07-12 14:04:14  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":1,"filled":true}}Thread-33
2021-07-12 14:04:14  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 1true
2021-07-12 14:04:14  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 1true
2021-07-12 14:04:16  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":1}}
2021-07-12 14:04:16  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":1}}
2021-07-12 14:04:16  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveII
2021-07-12 14:04:16  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:04:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":1,"filled":true}}Thread-33
2021-07-12 14:04:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":1,"filled":true}}Thread-33
2021-07-12 14:04:16  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 1true
2021-07-12 14:04:16  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 1true
2021-07-12 14:04:16  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:04:17  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":2}}
2021-07-12 14:04:17  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":2}}
2021-07-12 14:04:17  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveII
2021-07-12 14:04:17  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:04:17  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:17  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:17  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":2,"filled":true}}Thread-33
2021-07-12 14:04:17  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":2,"filled":true}}Thread-33
2021-07-12 14:04:17  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 2true
2021-07-12 14:04:17  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 2true
2021-07-12 14:04:19  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:04:19  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":3}}
2021-07-12 14:04:19  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":3}}
2021-07-12 14:04:19  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveI
2021-07-12 14:04:19  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:04:19  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:19  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:19  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":3,"filled":true}}Thread-33
2021-07-12 14:04:19  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":3,"filled":true}}Thread-33
2021-07-12 14:04:19  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 3true
2021-07-12 14:04:19  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 3true
2021-07-12 14:04:21  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"Again","register":4}}
2021-07-12 14:04:21  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"Again","register":4}}
2021-07-12 14:04:21  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  Again
2021-07-12 14:04:21  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:04:21  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:21  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:21  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":4,"filled":true}}Thread-33
2021-07-12 14:04:21  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":4,"filled":true}}Thread-33
2021-07-12 14:04:21  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 4true
2021-07-12 14:04:21  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 4true
2021-07-12 14:04:21  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:04:21  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:04:21  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:04:21  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:04:21  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:04:21  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:04:21  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:04:21  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:04:21  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:04:22  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"BackUp","register":5}}
2021-07-12 14:04:22  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"BackUp","register":5}}
2021-07-12 14:04:22  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  BackUp
2021-07-12 14:04:22  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:04:22  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:22  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:22  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":5,"filled":true}}Thread-33
2021-07-12 14:04:22  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":5,"filled":true}}Thread-33
2021-07-12 14:04:22  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 5true
2021-07-12 14:04:22  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 5true
2021-07-12 14:04:23  [ JavaFX Application Thread:client.model.Client:1439 ] - [ INFO ]  {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-12 14:04:23  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-12 14:04:23  [ Thread-0:server.game.Game:399 ] - [ INFO ]  game starts timer
2021-07-12 14:04:23  [ Thread-0:server.network.Server:501 ] - [ INFO ]  server starts timer
2021-07-12 14:04:23  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:23  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:23  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"TimerStarted","messageBody":null}Thread-33
2021-07-12 14:04:23  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"TimerStarted","messageBody":null}Thread-33
2021-07-12 14:04:23  [ JavaFX Application Thread:client.model.Client:984 ] - [ INFO ]  timer is on
2021-07-12 14:04:23  [ JavaFX Application Thread:client.model.Client:984 ] - [ INFO ]  timer is on
2021-07-12 14:04:24  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:04:24  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:04:24  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:04:24  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:04:24  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:04:24  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:04:24  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:04:24  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:04:24  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:04:26  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:04:29  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":2}}
2021-07-12 14:04:29  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":2}}
2021-07-12 14:04:29  [ Thread-1:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveII
2021-07-12 14:04:29  [ Thread-1:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:04:29  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:29  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:29  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-33
2021-07-12 14:04:29  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-33
2021-07-12 14:04:29  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 2true
2021-07-12 14:04:29  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 2true
2021-07-12 14:04:29  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:04:30  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":3}}
2021-07-12 14:04:30  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":3}}
2021-07-12 14:04:30  [ Thread-1:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveI
2021-07-12 14:04:30  [ Thread-1:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:04:30  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:30  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:30  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-33
2021-07-12 14:04:30  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-33
2021-07-12 14:04:30  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 3true
2021-07-12 14:04:30  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 3true
2021-07-12 14:04:31  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:04:31  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:04:31  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:04:31  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:04:31  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:04:31  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:04:31  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:04:31  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:04:31  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:04:32  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":4}}
2021-07-12 14:04:32  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":4}}
2021-07-12 14:04:32  [ Thread-1:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveI
2021-07-12 14:04:32  [ Thread-1:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:04:32  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:32  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:32  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":4,"filled":true}}Thread-33
2021-07-12 14:04:32  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":4,"filled":true}}Thread-33
2021-07-12 14:04:32  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 4true
2021-07-12 14:04:32  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 4true
2021-07-12 14:04:34  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"Again","register":5}}
2021-07-12 14:04:34  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"Again","register":5}}
2021-07-12 14:04:34  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:04:34  [ Thread-1:protocol.ExecuteOrder:240 ] - [ INFO ]  Again
2021-07-12 14:04:34  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:04:34  [ Thread-1:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:04:34  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:04:34  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:34  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:34  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":5,"filled":true}}Thread-33
2021-07-12 14:04:34  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":5,"filled":true}}Thread-33
2021-07-12 14:04:34  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 5true
2021-07-12 14:04:34  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:04:34  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:04:34  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 5true
2021-07-12 14:04:34  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:04:34  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:04:34  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:04:34  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:04:35  [ JavaFX Application Thread:client.model.Client:1439 ] - [ INFO ]  {"messageType":"SelectionFinished","messageBody":{"clientID":100}}
2021-07-12 14:04:35  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectionFinished","messageBody":{"clientID":100}}
2021-07-12 14:04:35  [ Thread-1:server.game.Game:407 ] - [ INFO ]  game stops timer
2021-07-12 14:04:35  [ Thread-1:protocol.ExecuteOrder:264 ] - [ INFO ]  executeOrder all clients finished programming in time
2021-07-12 14:04:35  [ Thread-1:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 14:04:35  [ Thread-1:server.network.Server:565 ] - [ INFO ]  Server checked registerPointer 0
2021-07-12 14:04:35  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:35  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:35  [ Thread-1:server.network.Server:569 ] - [ INFO ]  server inform cards of current register
2021-07-12 14:04:35  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-33
2021-07-12 14:04:35  [ Thread-1:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:04:35  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:35  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-33
2021-07-12 14:04:35  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:35  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"MoveII"},{"clientID":100,"cardName":"MoveII"}]}}Thread-33
2021-07-12 14:04:35  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"MoveII"},{"clientID":100,"cardName":"MoveII"}]}}Thread-33
2021-07-12 14:04:35  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:35  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:35  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:04:35  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:04:35  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  33 has for current register: MoveII
2021-07-12 14:04:35  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  100 has for current register: MoveII
2021-07-12 14:04:35  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  33 has for current register: MoveII
2021-07-12 14:04:35  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  100 has for current register: MoveII
2021-07-12 14:04:36  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 14:04:36  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 14:04:36  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:04:36  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:04:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:36  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-33
2021-07-12 14:04:36  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveII
2021-07-12 14:04:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-33
2021-07-12 14:04:36  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveII
2021-07-12 14:04:36  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:36  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:36  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:04:36  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":2,"y":3}}
2021-07-12 14:04:36  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:04:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":2,"y":3}}Thread-33
2021-07-12 14:04:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":2,"y":3}}Thread-33
2021-07-12 14:04:36  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:04:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:04:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:04:36  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:04:37  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 14:04:37  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 14:04:37  [ Thread-1:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:04:37  [ Thread-1:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:04:37  [ Thread-1:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:37  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:37  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:37  [ Thread-1:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:37  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveII"}}Thread-33
2021-07-12 14:04:37  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveII"}}Thread-33
2021-07-12 14:04:37  [ Thread-1:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:37  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveII
2021-07-12 14:04:37  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveII
2021-07-12 14:04:37  [ Thread-1:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:04:37  [ Thread-1:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":2,"y":6}}
2021-07-12 14:04:37  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:37  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:37  [ Thread-1:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:04:37  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":2,"y":6}}Thread-33
2021-07-12 14:04:37  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":2,"y":6}}Thread-33
2021-07-12 14:04:37  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 14:04:37  [ Thread-1:server.game.Game:747 ] - [ INFO ]  Game checks round over1
2021-07-12 14:04:37  [ Thread-1:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:04:37  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:37  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:37  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:04:37  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:04:38  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 14:04:38  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 14:04:38  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:04:38  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:04:38  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:38  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:38  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:38  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-33
2021-07-12 14:04:38  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-33
2021-07-12 14:04:38  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveII
2021-07-12 14:04:38  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:38  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveII
2021-07-12 14:04:38  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:38  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:04:38  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":4,"y":3}}
2021-07-12 14:04:38  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:04:38  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:38  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:38  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":4,"y":3}}Thread-33
2021-07-12 14:04:38  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":4,"y":3}}Thread-33
2021-07-12 14:04:38  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:04:38  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:38  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:38  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:04:38  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:04:39  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:04:40  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 14:04:40  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 14:04:40  [ Thread-1:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:04:40  [ Thread-1:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:04:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:40  [ Thread-1:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveII"}}Thread-33
2021-07-12 14:04:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveII"}}Thread-33
2021-07-12 14:04:40  [ Thread-1:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:40  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveII
2021-07-12 14:04:40  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveII
2021-07-12 14:04:40  [ Thread-1:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:40  [ Thread-1:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:04:40  [ Thread-1:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":4,"y":6}}
2021-07-12 14:04:40  [ Thread-1:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:04:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":4,"y":6}}Thread-33
2021-07-12 14:04:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":4,"y":6}}Thread-33
2021-07-12 14:04:40  [ Thread-1:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:04:40  [ Thread-1:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":4,"y":5}}
2021-07-12 14:04:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":4,"y":5}}Thread-33
2021-07-12 14:04:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":4,"y":5}}Thread-33
2021-07-12 14:04:40  [ Thread-1:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:04:40  [ Thread-1:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":4,"y":8}}
2021-07-12 14:04:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":4,"y":8}}Thread-33
2021-07-12 14:04:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":4,"y":8}}Thread-33
2021-07-12 14:04:40  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 14:04:40  [ Thread-1:server.game.Game:747 ] - [ INFO ]  Game checks round over2
2021-07-12 14:04:40  [ Thread-1:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:04:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:04:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:04:41  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 14:04:41  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 14:04:41  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:04:41  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:04:41  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:41  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:41  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:41  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-33
2021-07-12 14:04:41  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-33
2021-07-12 14:04:41  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveI
2021-07-12 14:04:41  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:41  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveI
2021-07-12 14:04:41  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:04:41  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":5,"y":5}}
2021-07-12 14:04:41  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:04:41  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:41  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:41  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":5,"y":5}}Thread-33
2021-07-12 14:04:41  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":5,"y":5}}Thread-33
2021-07-12 14:04:41  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:04:41  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:41  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:41  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:04:41  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:04:41  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:04:41  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:04:41  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:04:41  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:04:41  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:04:41  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:04:41  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:04:41  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:04:41  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:04:42  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 14:04:42  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 14:04:42  [ Thread-1:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:04:42  [ Thread-1:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:04:42  [ Thread-1:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:42  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:42  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:42  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveI"}}Thread-33
2021-07-12 14:04:42  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveI"}}Thread-33
2021-07-12 14:04:42  [ Thread-1:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:42  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveI
2021-07-12 14:04:42  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveI
2021-07-12 14:04:42  [ Thread-1:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:04:42  [ Thread-1:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":5,"y":8}}
2021-07-12 14:04:42  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:42  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:42  [ Thread-1:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:04:42  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":5,"y":8}}Thread-33
2021-07-12 14:04:42  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":5,"y":8}}Thread-33
2021-07-12 14:04:42  [ Thread-1:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:04:42  [ Thread-1:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":7,"y":8}}
2021-07-12 14:04:42  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:42  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 14:04:42  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:42  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":7,"y":8}}Thread-33
2021-07-12 14:04:42  [ Thread-1:server.game.Game:747 ] - [ INFO ]  Game checks round over3
2021-07-12 14:04:42  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":7,"y":8}}Thread-33
2021-07-12 14:04:42  [ Thread-1:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:04:42  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:42  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:42  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:04:42  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:04:43  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-12 14:04:43  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-12 14:04:43  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:04:43  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:04:43  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:43  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:43  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:43  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:43  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"Again"}}Thread-33
2021-07-12 14:04:43  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"Again"}}Thread-33
2021-07-12 14:04:43  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played Again
2021-07-12 14:04:43  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played Again
2021-07-12 14:04:43  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:04:43  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":6,"y":5}}
2021-07-12 14:04:43  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:04:43  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:43  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:43  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":6,"y":5}}Thread-33
2021-07-12 14:04:43  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":6,"y":5}}Thread-33
2021-07-12 14:04:43  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:04:43  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:43  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:43  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:04:43  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:04:44  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:04:44  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:04:44  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:04:44  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:04:44  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:04:44  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:04:44  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:04:44  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:04:44  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:04:45  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 14:04:45  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 14:04:45  [ Thread-1:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:04:45  [ Thread-1:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:04:45  [ Thread-1:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:45  [ Thread-1:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveI"}}Thread-33
2021-07-12 14:04:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveI"}}Thread-33
2021-07-12 14:04:45  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveI
2021-07-12 14:04:45  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveI
2021-07-12 14:04:45  [ Thread-1:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:04:45  [ Thread-1:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":8,"y":8}}
2021-07-12 14:04:45  [ Thread-1:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:04:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":8,"y":8}}Thread-33
2021-07-12 14:04:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":8,"y":8}}Thread-33
2021-07-12 14:04:45  [ Thread-1:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:04:45  [ Thread-1:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":10,"y":8}}
2021-07-12 14:04:45  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 14:04:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:45  [ Thread-1:server.game.Game:747 ] - [ INFO ]  Game checks round over4
2021-07-12 14:04:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":10,"y":8}}Thread-33
2021-07-12 14:04:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":10,"y":8}}Thread-33
2021-07-12 14:04:45  [ Thread-1:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:04:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:45  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:04:45  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:04:46  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"BackUp"}}
2021-07-12 14:04:46  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"BackUp"}}
2021-07-12 14:04:46  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:04:46  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:04:46  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:46  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:46  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:46  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:46  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"BackUp"}}Thread-33
2021-07-12 14:04:46  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played BackUp
2021-07-12 14:04:46  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"BackUp"}}Thread-33
2021-07-12 14:04:46  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played BackUp
2021-07-12 14:04:46  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:04:46  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":5,"y":5}}
2021-07-12 14:04:46  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:46  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:46  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:04:46  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":5,"y":5}}Thread-33
2021-07-12 14:04:46  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":5,"y":5}}Thread-33
2021-07-12 14:04:46  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:04:46  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:46  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:46  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:04:46  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:04:46  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:04:47  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-12 14:04:47  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-12 14:04:47  [ Thread-1:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:04:47  [ Thread-1:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:04:47  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:47  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:47  [ Thread-1:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:47  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"Again"}}Thread-33
2021-07-12 14:04:47  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"Again"}}Thread-33
2021-07-12 14:04:47  [ Thread-1:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:04:47  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played Again
2021-07-12 14:04:47  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played Again
2021-07-12 14:04:47  [ Thread-1:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:04:47  [ Thread-1:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":11,"y":8}}
2021-07-12 14:04:47  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:47  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:47  [ Thread-1:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:04:47  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":11,"y":8}}Thread-33
2021-07-12 14:04:47  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":11,"y":8}}Thread-33
2021-07-12 14:04:47  [ Thread-1:server.network.Server:642 ] - [ INFO ]  server informs turnDirection
2021-07-12 14:04:47  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:47  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:47  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"counterclockwise"}}Thread-33
2021-07-12 14:04:47  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"counterclockwise"}}Thread-33
2021-07-12 14:04:47  [ Thread-1:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:04:47  [ Thread-1:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":11,"y":6}}
2021-07-12 14:04:47  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:47  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 14:04:47  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:47  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":11,"y":6}}Thread-33
2021-07-12 14:04:47  [ Thread-1:server.game.Game:747 ] - [ INFO ]  Game checks round over5
2021-07-12 14:04:47  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":11,"y":6}}Thread-33
2021-07-12 14:04:47  [ Thread-1:protocol.ExecuteOrder:325 ] - [ INFO ]  ExecuteOrder: round is over!
2021-07-12 14:04:47  [ Thread-1:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 14:04:47  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:47  [ Thread-1:server.network.Server:745 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-12 14:04:47  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:47  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-33
2021-07-12 14:04:47  [ Thread-1:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:04:47  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-33
2021-07-12 14:04:47  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:47  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:47  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["MemorySwap","MemorySwap"]}}Thread-33
2021-07-12 14:04:48  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:48  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["MemorySwap","MemorySwap"]}}Thread-33
2021-07-12 14:04:48  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:04:48  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:04:48  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:04:49  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:04:51  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:04:51  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:04:51  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:04:51  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:04:51  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:04:51  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:04:51  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:04:51  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:04:51  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:04:54  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:04:54  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:04:54  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:04:54  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:04:54  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:04:54  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:04:54  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:04:54  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:04:54  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:04:56  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:04:59  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:05:01  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:05:01  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:05:01  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:05:01  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:05:01  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:05:01  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:05:01  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:05:01  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:05:01  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:05:04  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:05:04  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:05:04  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:05:04  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:05:04  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:05:04  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:05:04  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:05:04  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:05:04  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:05:06  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:05:09  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:05:11  [ JavaFX Application Thread:client.model.Client:1199 ] - [ INFO ]  {"messageType":"SendChat","messageBody":{"message":"asd","to":-1}}
2021-07-12 14:05:11  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SendChat","messageBody":{"message":"asd","to":-1}}
2021-07-12 14:05:11  [ Thread-0:protocol.ExecuteOrder:164 ] - [ INFO ]  message arrived server
2021-07-12 14:05:11  [ Thread-0:protocol.ExecuteOrder:193 ] - [ INFO ]  send message to all
2021-07-12 14:05:11  [ Thread-0:server.network.ServerThread:140 ] - [ INFO ]  {"messageType":"ReceivedChat","messageBody":{"message":"asd","from":33,"isPrivate":false}}
2021-07-12 14:05:11  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:05:11  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:05:11  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ReceivedChat","messageBody":{"message":"asd","from":33,"isPrivate":false}}Thread-33
2021-07-12 14:05:11  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ReceivedChat","messageBody":{"message":"asd","from":33,"isPrivate":false}}Thread-33
2021-07-12 14:05:11  [ JavaFX Application Thread:client.model.Client:737 ] - [ INFO ]  received chat printed
2021-07-12 14:05:11  [ JavaFX Application Thread:client.model.Client:737 ] - [ INFO ]  received chat printed
2021-07-12 14:05:11  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:05:11  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:05:11  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:05:11  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:05:11  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:05:11  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:05:11  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:05:11  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:05:11  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:05:12  [ JavaFX Application Thread:client.model.Client:1199 ] - [ INFO ]  {"messageType":"SendChat","messageBody":{"message":"sdasd","to":-1}}
2021-07-12 14:05:12  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SendChat","messageBody":{"message":"sdasd","to":-1}}
2021-07-12 14:05:12  [ Thread-0:protocol.ExecuteOrder:164 ] - [ INFO ]  message arrived server
2021-07-12 14:05:12  [ Thread-0:protocol.ExecuteOrder:193 ] - [ INFO ]  send message to all
2021-07-12 14:05:12  [ Thread-0:server.network.ServerThread:140 ] - [ INFO ]  {"messageType":"ReceivedChat","messageBody":{"message":"sdasd","from":33,"isPrivate":false}}
2021-07-12 14:05:12  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:05:12  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:05:12  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ReceivedChat","messageBody":{"message":"sdasd","from":33,"isPrivate":false}}Thread-33
2021-07-12 14:05:12  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ReceivedChat","messageBody":{"message":"sdasd","from":33,"isPrivate":false}}Thread-33
2021-07-12 14:05:12  [ JavaFX Application Thread:client.model.Client:737 ] - [ INFO ]  received chat printed
2021-07-12 14:05:12  [ JavaFX Application Thread:client.model.Client:737 ] - [ INFO ]  received chat printed
2021-07-12 14:05:13  [ JavaFX Application Thread:client.model.Client:1199 ] - [ INFO ]  {"messageType":"SendChat","messageBody":{"message":"asd","to":-1}}
2021-07-12 14:05:13  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SendChat","messageBody":{"message":"asd","to":-1}}
2021-07-12 14:05:13  [ Thread-0:protocol.ExecuteOrder:164 ] - [ INFO ]  message arrived server
2021-07-12 14:05:13  [ Thread-0:protocol.ExecuteOrder:193 ] - [ INFO ]  send message to all
2021-07-12 14:05:13  [ Thread-0:server.network.ServerThread:140 ] - [ INFO ]  {"messageType":"ReceivedChat","messageBody":{"message":"asd","from":33,"isPrivate":false}}
2021-07-12 14:05:13  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:05:13  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:05:13  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ReceivedChat","messageBody":{"message":"asd","from":33,"isPrivate":false}}Thread-33
2021-07-12 14:05:13  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ReceivedChat","messageBody":{"message":"asd","from":33,"isPrivate":false}}Thread-33
2021-07-12 14:05:13  [ JavaFX Application Thread:client.model.Client:737 ] - [ INFO ]  received chat printed
2021-07-12 14:05:13  [ JavaFX Application Thread:client.model.Client:737 ] - [ INFO ]  received chat printed
2021-07-12 14:05:14  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:05:14  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:05:14  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:05:14  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:05:14  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:05:14  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:05:14  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:05:14  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:05:14  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:05:16  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:05:19  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:05:21  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:05:21  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:05:21  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:05:21  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:05:21  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:05:21  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:05:21  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:05:21  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:05:21  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:05:24  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:05:24  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:05:24  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:05:24  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:05:24  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:05:24  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:05:24  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:05:24  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:05:24  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:05:26  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:05:29  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:05:31  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:05:31  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:05:31  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:05:31  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:05:31  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:05:31  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:05:31  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:05:31  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:05:31  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:05:34  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:05:34  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:05:34  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:05:34  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:05:34  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:05:34  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:05:34  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:05:34  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:05:34  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:05:36  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:05:39  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:05:41  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:05:41  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:05:41  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:05:41  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:05:41  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:05:41  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:05:41  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:05:41  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:05:41  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:05:44  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:05:44  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:05:44  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:05:44  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:05:44  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:05:44  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:05:44  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:05:44  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:05:44  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:05:46  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:05:49  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:05:51  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:05:51  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:05:51  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:05:51  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:05:51  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:05:51  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:05:51  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:05:51  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:05:51  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:05:54  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:05:54  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:05:54  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:05:54  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:05:54  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:05:54  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:05:54  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:05:54  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:05:54  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:05:56  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:05:59  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:06:00  [ JavaFX Application Thread:client.model.Client:1495 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":null,"isBuying":false}}
2021-07-12 14:06:00  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":null,"isBuying":false}}
2021-07-12 14:06:00  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:06:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:00  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:06:00  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:06:01  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:06:01  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:06:01  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:06:01  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:06:01  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:06:01  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:06:01  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:06:01  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:06:01  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:06:03  [ JavaFX Application Thread:client.model.Client:1495 ] - [ INFO ]  {"messageType":"BuyUpgrade","messageBody":{"card":null,"isBuying":false}}
2021-07-12 14:06:03  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"BuyUpgrade","messageBody":{"card":null,"isBuying":false}}
2021-07-12 14:06:03  [ Thread-1:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 14:06:03  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:03  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:03  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-33
2021-07-12 14:06:03  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-33
2021-07-12 14:06:03  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:03  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":33,"cardsInHand":9}}Thread-33
2021-07-12 14:06:03  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  33have got 9 cards
2021-07-12 14:06:03  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:03  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":100,"cardsInHand":9}}Thread-33
2021-07-12 14:06:03  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  100have got 9 cards
2021-07-12 14:06:03  [ Thread-1:server.network.Server:400 ] - [ INFO ]  server informs your cards.
2021-07-12 14:06:03  [ Thread-1:server.network.Server:400 ] - [ INFO ]  server informs your cards.
2021-07-12 14:06:03  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:03  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:03  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["MoveI","MoveII","Again","TurnRight","MoveIII","MoveI","BackUp","MoveI","TurnLeft"]}}Thread-33
2021-07-12 14:06:03  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["MoveI","MoveII","PowerUp","MoveI","MoveI","TurnLeft","MoveIII","TurnRight","Again"]}}Thread-33
2021-07-12 14:06:03  [ JavaFX Application Thread:client.model.Client:932 ] - [ INFO ]  clients your cards
2021-07-12 14:06:03  [ JavaFX Application Thread:client.model.Client:932 ] - [ INFO ]  clients your cards
2021-07-12 14:06:04  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:06:04  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:06:04  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:06:04  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:06:04  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:06:04  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:06:04  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:06:04  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:06:04  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:06:06  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:06:09  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:06:10  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":1}}
2021-07-12 14:06:10  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":1}}
2021-07-12 14:06:10  [ Thread-1:protocol.ExecuteOrder:240 ] - [ INFO ]  TurnRight
2021-07-12 14:06:10  [ Thread-1:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:06:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":1,"filled":true}}Thread-33
2021-07-12 14:06:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":1,"filled":true}}Thread-33
2021-07-12 14:06:10  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 1true
2021-07-12 14:06:10  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 1true
2021-07-12 14:06:11  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:06:11  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:06:11  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:06:11  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:06:11  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:06:11  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:06:11  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:06:11  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:06:11  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:06:12  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveIII","register":2}}
2021-07-12 14:06:12  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveIII","register":2}}
2021-07-12 14:06:12  [ Thread-1:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveIII
2021-07-12 14:06:12  [ Thread-1:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:06:12  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:12  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:12  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-33
2021-07-12 14:06:12  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-33
2021-07-12 14:06:12  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 2true
2021-07-12 14:06:12  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 2true
2021-07-12 14:06:14  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":3}}
2021-07-12 14:06:14  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":3}}
2021-07-12 14:06:14  [ Thread-1:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveI
2021-07-12 14:06:14  [ Thread-1:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:06:14  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:14  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:14  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-33
2021-07-12 14:06:14  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-33
2021-07-12 14:06:14  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 3true
2021-07-12 14:06:14  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 3true
2021-07-12 14:06:14  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:06:14  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:06:14  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:06:14  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:06:14  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:06:14  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:06:14  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:06:14  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:06:14  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:06:15  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"BackUp","register":4}}
2021-07-12 14:06:15  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"BackUp","register":4}}
2021-07-12 14:06:15  [ Thread-1:protocol.ExecuteOrder:240 ] - [ INFO ]  BackUp
2021-07-12 14:06:15  [ Thread-1:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:06:15  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:15  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:15  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":4,"filled":true}}Thread-33
2021-07-12 14:06:15  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":4,"filled":true}}Thread-33
2021-07-12 14:06:15  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 4true
2021-07-12 14:06:15  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 4true
2021-07-12 14:06:16  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":5}}
2021-07-12 14:06:16  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":5}}
2021-07-12 14:06:16  [ Thread-1:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveI
2021-07-12 14:06:16  [ Thread-1:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:06:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:16  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":5,"filled":true}}Thread-33
2021-07-12 14:06:16  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":5,"filled":true}}Thread-33
2021-07-12 14:06:16  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 5true
2021-07-12 14:06:16  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 5true
2021-07-12 14:06:16  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:06:17  [ JavaFX Application Thread:client.model.Client:1439 ] - [ INFO ]  {"messageType":"SelectionFinished","messageBody":{"clientID":100}}
2021-07-12 14:06:17  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectionFinished","messageBody":{"clientID":100}}
2021-07-12 14:06:17  [ Thread-1:server.game.Game:399 ] - [ INFO ]  game starts timer
2021-07-12 14:06:17  [ Thread-1:server.network.Server:501 ] - [ INFO ]  server starts timer
2021-07-12 14:06:17  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:17  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:17  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"TimerStarted","messageBody":null}Thread-33
2021-07-12 14:06:17  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"TimerStarted","messageBody":null}Thread-33
2021-07-12 14:06:17  [ JavaFX Application Thread:client.model.Client:984 ] - [ INFO ]  timer is on
2021-07-12 14:06:17  [ JavaFX Application Thread:client.model.Client:984 ] - [ INFO ]  timer is on
2021-07-12 14:06:19  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:06:21  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:06:21  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:06:21  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:06:21  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:06:21  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:06:21  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:06:21  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:06:21  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:06:21  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:06:22  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":1}}
2021-07-12 14:06:22  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":1}}
2021-07-12 14:06:22  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveII
2021-07-12 14:06:22  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:06:22  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:22  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:22  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":1,"filled":true}}Thread-33
2021-07-12 14:06:22  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":1,"filled":true}}Thread-33
2021-07-12 14:06:22  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 1true
2021-07-12 14:06:22  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 1true
2021-07-12 14:06:24  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:06:24  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:06:24  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:06:24  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:06:24  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:06:24  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:06:24  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:06:24  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:06:24  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:06:25  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":2}}
2021-07-12 14:06:25  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":2}}
2021-07-12 14:06:25  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  TurnRight
2021-07-12 14:06:25  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:06:25  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:25  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:25  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":2,"filled":true}}Thread-33
2021-07-12 14:06:25  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 2true
2021-07-12 14:06:25  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":2,"filled":true}}Thread-33
2021-07-12 14:06:25  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 2true
2021-07-12 14:06:26  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:06:28  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveIII","register":3}}
2021-07-12 14:06:28  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveIII","register":3}}
2021-07-12 14:06:28  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveIII
2021-07-12 14:06:28  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:06:28  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:28  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:28  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":3,"filled":true}}Thread-33
2021-07-12 14:06:28  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":3,"filled":true}}Thread-33
2021-07-12 14:06:28  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 3true
2021-07-12 14:06:28  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 3true
2021-07-12 14:06:29  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:06:29  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":4}}
2021-07-12 14:06:29  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":4}}
2021-07-12 14:06:29  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveI
2021-07-12 14:06:29  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:06:29  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:29  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:29  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":4,"filled":true}}Thread-33
2021-07-12 14:06:29  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":4,"filled":true}}Thread-33
2021-07-12 14:06:29  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 4true
2021-07-12 14:06:29  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 4true
2021-07-12 14:06:30  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":5}}
2021-07-12 14:06:30  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":5}}
2021-07-12 14:06:30  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveI
2021-07-12 14:06:30  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:06:30  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:30  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:30  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":5,"filled":true}}Thread-33
2021-07-12 14:06:30  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":5,"filled":true}}Thread-33
2021-07-12 14:06:30  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 5true
2021-07-12 14:06:30  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 5true
2021-07-12 14:06:31  [ JavaFX Application Thread:client.model.Client:1439 ] - [ INFO ]  {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-12 14:06:31  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-12 14:06:31  [ Thread-0:server.game.Game:407 ] - [ INFO ]  game stops timer
2021-07-12 14:06:31  [ Thread-0:protocol.ExecuteOrder:264 ] - [ INFO ]  executeOrder all clients finished programming in time
2021-07-12 14:06:31  [ Thread-0:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 14:06:31  [ Thread-0:server.network.Server:565 ] - [ INFO ]  Server checked registerPointer 0
2021-07-12 14:06:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:31  [ Thread-0:server.network.Server:569 ] - [ INFO ]  server inform cards of current register
2021-07-12 14:06:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-33
2021-07-12 14:06:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:31  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:06:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-33
2021-07-12 14:06:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"MoveII"},{"clientID":100,"cardName":"TurnRight"}]}}Thread-33
2021-07-12 14:06:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"MoveII"},{"clientID":100,"cardName":"TurnRight"}]}}Thread-33
2021-07-12 14:06:31  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  33 has for current register: MoveII
2021-07-12 14:06:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:31  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:31  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  100 has for current register: TurnRight
2021-07-12 14:06:31  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  33 has for current register: MoveII
2021-07-12 14:06:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:06:31  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:06:31  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  100 has for current register: TurnRight
2021-07-12 14:06:31  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:06:31  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:06:31  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:06:31  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:06:31  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:06:31  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:06:31  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:06:31  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:06:31  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:06:34  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:06:34  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:06:34  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:06:34  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:06:34  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:06:34  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:06:34  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:06:34  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:06:34  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:06:35  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 14:06:35  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 14:06:35  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:06:35  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:06:35  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:35  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:06:35  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:35  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-33
2021-07-12 14:06:35  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:06:35  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-33
2021-07-12 14:06:35  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveII
2021-07-12 14:06:35  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveII
2021-07-12 14:06:35  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:06:35  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:06:35  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":7,"y":5}}
2021-07-12 14:06:35  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:06:35  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:35  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:35  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":7,"y":5}}Thread-33
2021-07-12 14:06:35  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":7,"y":5}}Thread-33
2021-07-12 14:06:35  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:06:35  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:35  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:35  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:06:35  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:06:36  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:06:36  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-12 14:06:36  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-12 14:06:36  [ Thread-1:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:06:36  [ Thread-1:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:06:36  [ Thread-1:server.network.Server:642 ] - [ INFO ]  server informs turnDirection
2021-07-12 14:06:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:36  [ Thread-1:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:06:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"TurnRight"}}Thread-33
2021-07-12 14:06:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"TurnRight"}}Thread-33
2021-07-12 14:06:36  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played TurnRight
2021-07-12 14:06:36  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played TurnRight
2021-07-12 14:06:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:36  [ Thread-1:server.network.Server:714 ] - [ INFO ]  server informs energy got.
2021-07-12 14:06:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"clockwise"}}Thread-33
2021-07-12 14:06:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"clockwise"}}Thread-33
2021-07-12 14:06:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Energy","messageBody":{"clientID":33,"count":1,"source":"EnergySpace"}}Thread-33
2021-07-12 14:06:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Energy","messageBody":{"clientID":33,"count":1,"source":"EnergySpace"}}Thread-33
2021-07-12 14:06:36  [ Thread-1:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:06:36  [ Thread-1:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":11,"y":4}}
2021-07-12 14:06:36  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 14:06:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":11,"y":4}}Thread-33
2021-07-12 14:06:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":11,"y":4}}Thread-33
2021-07-12 14:06:36  [ Thread-1:server.game.Game:747 ] - [ INFO ]  Game checks round over1
2021-07-12 14:06:36  [ Thread-1:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:06:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:36  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:06:36  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:06:39  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:06:39  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-12 14:06:39  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-12 14:06:39  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:06:39  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:06:39  [ Thread-0:server.network.Server:642 ] - [ INFO ]  server informs turnDirection
2021-07-12 14:06:39  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:39  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:39  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:06:39  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnRight"}}Thread-33
2021-07-12 14:06:39  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnRight"}}Thread-33
2021-07-12 14:06:39  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played TurnRight
2021-07-12 14:06:39  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played TurnRight
2021-07-12 14:06:39  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:39  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-33
2021-07-12 14:06:39  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:39  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:06:39  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-33
2021-07-12 14:06:39  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:39  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:39  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:06:39  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:06:40  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveIII"}}
2021-07-12 14:06:40  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveIII"}}
2021-07-12 14:06:40  [ Thread-1:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:06:40  [ Thread-1:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:06:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:40  [ Thread-1:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:06:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveIII"}}Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveIII"}}Thread-33
2021-07-12 14:06:40  [ Thread-1:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:06:40  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveIII
2021-07-12 14:06:40  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveIII
2021-07-12 14:06:40  [ Thread-1:server.network.Server:657 ] - [ INFO ]  server informs drawn damage cards
2021-07-12 14:06:40  [ Thread-1:server.network.Server:596 ] - [ INFO ]  server informs reboot client
2021-07-12 14:06:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":100,"cards":["Spam"]}}Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":100,"cards":["Spam"]}}Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:40  [ Thread-1:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:06:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Reboot","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Reboot","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:06:40  [ Thread-1:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":7,"y":3}}
2021-07-12 14:06:40  [ JavaFX Application Thread:client.model.Client:1030 ] - [ INFO ]  client reboot to start point
2021-07-12 14:06:40  [ JavaFX Application Thread:client.model.Client:1030 ] - [ INFO ]  client reboot to start point
2021-07-12 14:06:40  [ Thread-1:server.network.Server:642 ] - [ INFO ]  server informs turnDirection
2021-07-12 14:06:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:40  [ Thread-1:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:06:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":7,"y":3}}Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":7,"y":3}}Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"counterclockwise"}}Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":100,"rotation":"counterclockwise"}}Thread-33
2021-07-12 14:06:40  [ Thread-1:server.network.Server:714 ] - [ INFO ]  server informs energy got.
2021-07-12 14:06:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Energy","messageBody":{"clientID":33,"count":1,"source":"EnergySpace"}}Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Energy","messageBody":{"clientID":33,"count":1,"source":"EnergySpace"}}Thread-33
2021-07-12 14:06:40  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 14:06:40  [ Thread-1:server.game.Game:747 ] - [ INFO ]  Game checks round over2
2021-07-12 14:06:40  [ Thread-1:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:06:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:06:40  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:06:41  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:06:41  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:06:41  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:06:41  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:06:41  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:06:41  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:06:41  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:06:41  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:06:41  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:06:44  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:06:44  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:06:44  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:06:44  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:06:44  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:06:44  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:06:44  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:06:44  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:06:44  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:06:46  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:06:49  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:06:51  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:06:51  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:06:51  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:06:51  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:06:51  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:06:51  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:06:51  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:06:51  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:06:51  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:06:54  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:06:54  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:06:54  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:06:54  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:06:54  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:06:54  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:06:54  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:06:54  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:06:54  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:06:56  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:06:59  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:07:01  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:07:01  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:07:01  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:07:01  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:07:01  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:07:01  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:07:01  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:07:01  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:07:01  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:07:04  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:07:04  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:07:04  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:07:04  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:07:04  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:07:04  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:07:04  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:07:04  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:07:04  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:07:06  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:07:09  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:07:11  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:07:11  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:07:11  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:07:11  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:07:11  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:07:11  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:07:11  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:07:11  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:07:11  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:07:14  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:07:14  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:07:14  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:07:14  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:07:14  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:07:14  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:07:14  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:07:14  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:07:14  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:07:16  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:07:19  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:07:21  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:07:21  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:07:21  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:07:21  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:07:21  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:07:21  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:07:21  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:07:21  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:07:21  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:07:24  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:07:24  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:07:24  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:07:24  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:07:24  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:07:24  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:07:24  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:07:24  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:07:24  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:07:26  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:07:29  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:07:31  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:07:31  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:07:31  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:07:31  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:07:31  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:07:31  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:07:31  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:07:31  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:07:31  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:07:34  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:07:34  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:07:34  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:07:34  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:07:34  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:07:34  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:07:34  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:07:34  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:07:34  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:07:36  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:07:39  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:07:41  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:07:41  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:07:41  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:07:41  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:07:41  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:07:41  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:07:41  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:07:41  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:07:41  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:07:44  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:07:44  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:07:44  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:07:44  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:07:44  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:07:44  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:07:44  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:07:44  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:07:44  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:07:46  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:07:49  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:07:50  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveIII"}}
2021-07-12 14:07:50  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveIII"}}
2021-07-12 14:07:50  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:07:50  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:07:50  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:50  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:07:50  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:50  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveIII"}}Thread-33
2021-07-12 14:07:50  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:07:50  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveIII"}}Thread-33
2021-07-12 14:07:50  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveIII
2021-07-12 14:07:50  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveIII
2021-07-12 14:07:50  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:07:50  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:07:50  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:07:50  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":7,"y":8}}
2021-07-12 14:07:50  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:07:50  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:50  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:50  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":7,"y":8}}Thread-33
2021-07-12 14:07:50  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":7,"y":8}}Thread-33
2021-07-12 14:07:50  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:07:50  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":9,"y":8}}
2021-07-12 14:07:50  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:50  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:50  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 14:07:50  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":9,"y":8}}Thread-33
2021-07-12 14:07:50  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":9,"y":8}}Thread-33
2021-07-12 14:07:50  [ Thread-0:server.game.Game:747 ] - [ INFO ]  Game checks round over3
2021-07-12 14:07:50  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:07:50  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:50  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:50  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:07:50  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 14:07:51  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 14:07:51  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:07:51  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:07:51  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-33
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveI
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveI
2021-07-12 14:07:51  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:07:51  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":9,"y":9}}
2021-07-12 14:07:51  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":9,"y":9}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":9,"y":9}}Thread-33
2021-07-12 14:07:51  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 14:07:51  [ Thread-0:server.game.Game:747 ] - [ INFO ]  Game checks round over4
2021-07-12 14:07:51  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:07:51  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:07:51  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:07:51  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:07:51  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:07:51  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:07:51  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:07:51  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:07:51  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:07:51  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 14:07:51  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveI"}}
2021-07-12 14:07:51  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:07:51  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveI"}}Thread-33
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveI
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveI
2021-07-12 14:07:51  [ Thread-0:server.network.Server:657 ] - [ INFO ]  server informs drawn damage cards
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-0:server.network.Server:596 ] - [ INFO ]  server informs reboot client
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":33,"cards":["Spam"]}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"DrawDamage","messageBody":{"clientID":33,"cards":["Spam"]}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Reboot","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Reboot","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:07:51  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":7,"y":3}}
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:1030 ] - [ INFO ]  client reboot to start point
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:1030 ] - [ INFO ]  client reboot to start point
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-0:server.network.Server:642 ] - [ INFO ]  server informs turnDirection
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":7,"y":3}}Thread-33
2021-07-12 14:07:51  [ Thread-0:server.network.Server:642 ] - [ INFO ]  server informs turnDirection
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":7,"y":3}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"counterclockwise"}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"counterclockwise"}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"counterclockwise"}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"counterclockwise"}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-0:server.network.Server:474 ] - [ INFO ]  server informs shuffle
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ShuffleCoding","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":33,"cardsInHand":2}}Thread-33
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:972 ] - [ INFO ]  33 is shuffling
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  33have got 2 cards
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ShuffleCoding","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:972 ] - [ INFO ]  33 is shuffling
2021-07-12 14:07:51  [ Thread-0:server.network.Server:443 ] - [ INFO ]  server inform new cards
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["Again","TurnRight","MoveII","TurnLeft","TurnRight","UTurn","BackUp"]}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":33,"cardsInHand":7}}Thread-33
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  33have got 7 cards
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:932 ] - [ INFO ]  clients your cards
2021-07-12 14:07:51  [ Thread-0:server.network.Server:474 ] - [ INFO ]  server informs shuffle
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":100,"cardsInHand":2}}Thread-33
2021-07-12 14:07:51  [ Thread-0:server.network.Server:443 ] - [ INFO ]  server inform new cards
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ShuffleCoding","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  100have got 2 cards
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:972 ] - [ INFO ]  100 is shuffling
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-0:server.network.Server:400 ] - [ INFO ]  server informs your cards.
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ShuffleCoding","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:972 ] - [ INFO ]  100 is shuffling
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["TurnRight","TurnLeft","MoveI","Again","MoveI","MoveII","MoveII"]}}Thread-33
2021-07-12 14:07:51  [ Thread-0:server.network.Server:400 ] - [ INFO ]  server informs your cards.
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:932 ] - [ INFO ]  clients your cards
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-0:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"NotYourCards","messageBody":{"clientID":100,"cardsInHand":7}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:967 ] - [ INFO ]  100have got 7 cards
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["TurnRight","TurnLeft"]}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:932 ] - [ INFO ]  clients your cards
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"YourCards","messageBody":{"cardsInHand":["MoveI","TurnLeft"]}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ JavaFX Application Thread:client.model.Client:932 ] - [ INFO ]  clients your cards
2021-07-12 14:07:51  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-33
2021-07-12 14:07:51  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":2}}Thread-33
2021-07-12 14:07:54  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:07:54  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:07:54  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:07:54  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:07:54  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:07:54  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:07:54  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:07:54  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:07:54  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:07:56  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:07:59  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:08:01  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:08:01  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:08:01  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:08:01  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:08:01  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:08:01  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:08:01  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:08:01  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:08:01  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:08:03  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":1}}
2021-07-12 14:08:03  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":1}}
2021-07-12 14:08:03  [ Thread-1:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveII
2021-07-12 14:08:03  [ Thread-1:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:08:03  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:03  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:03  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":1,"filled":true}}Thread-33
2021-07-12 14:08:03  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":1,"filled":true}}Thread-33
2021-07-12 14:08:03  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 1true
2021-07-12 14:08:03  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 1true
2021-07-12 14:08:04  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:08:04  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:08:04  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:08:04  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:08:04  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:08:04  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:08:04  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:08:04  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:08:04  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:08:05  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":2}}
2021-07-12 14:08:05  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":2}}
2021-07-12 14:08:05  [ Thread-1:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveII
2021-07-12 14:08:05  [ Thread-1:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:08:05  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:05  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:05  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-33
2021-07-12 14:08:05  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":2,"filled":true}}Thread-33
2021-07-12 14:08:05  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 2true
2021-07-12 14:08:05  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 2true
2021-07-12 14:08:06  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"Again","register":3}}
2021-07-12 14:08:06  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"Again","register":3}}
2021-07-12 14:08:06  [ Thread-1:protocol.ExecuteOrder:240 ] - [ INFO ]  Again
2021-07-12 14:08:06  [ Thread-1:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:08:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-33
2021-07-12 14:08:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":3,"filled":true}}Thread-33
2021-07-12 14:08:06  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 3true
2021-07-12 14:08:06  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 3true
2021-07-12 14:08:06  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:08:07  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":4}}
2021-07-12 14:08:07  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":4}}
2021-07-12 14:08:07  [ Thread-1:protocol.ExecuteOrder:240 ] - [ INFO ]  TurnRight
2021-07-12 14:08:07  [ Thread-1:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:08:07  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:07  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:07  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":4,"filled":true}}Thread-33
2021-07-12 14:08:07  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":4,"filled":true}}Thread-33
2021-07-12 14:08:07  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 4true
2021-07-12 14:08:07  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 4true
2021-07-12 14:08:09  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":5}}
2021-07-12 14:08:09  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveI","register":5}}
2021-07-12 14:08:09  [ Thread-1:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveI
2021-07-12 14:08:09  [ Thread-1:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:08:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:09  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":5,"filled":true}}Thread-33
2021-07-12 14:08:09  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":100,"register":5,"filled":true}}Thread-33
2021-07-12 14:08:09  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 5true
2021-07-12 14:08:09  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  100 has for register 5true
2021-07-12 14:08:09  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:08:10  [ JavaFX Application Thread:client.model.Client:1439 ] - [ INFO ]  {"messageType":"SelectionFinished","messageBody":{"clientID":100}}
2021-07-12 14:08:10  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectionFinished","messageBody":{"clientID":100}}
2021-07-12 14:08:10  [ Thread-1:server.game.Game:399 ] - [ INFO ]  game starts timer
2021-07-12 14:08:10  [ Thread-1:server.network.Server:501 ] - [ INFO ]  server starts timer
2021-07-12 14:08:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"TimerStarted","messageBody":null}Thread-33
2021-07-12 14:08:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"TimerStarted","messageBody":null}Thread-33
2021-07-12 14:08:10  [ JavaFX Application Thread:client.model.Client:984 ] - [ INFO ]  timer is on
2021-07-12 14:08:10  [ JavaFX Application Thread:client.model.Client:984 ] - [ INFO ]  timer is on
2021-07-12 14:08:11  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:08:11  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:08:11  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:08:11  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:08:11  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:08:11  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:08:11  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:08:11  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:08:11  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:08:13  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"BackUp","register":1}}
2021-07-12 14:08:13  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"BackUp","register":1}}
2021-07-12 14:08:13  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  BackUp
2021-07-12 14:08:13  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:08:13  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:13  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:13  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":1,"filled":true}}Thread-33
2021-07-12 14:08:13  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":1,"filled":true}}Thread-33
2021-07-12 14:08:13  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 1true
2021-07-12 14:08:13  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 1true
2021-07-12 14:08:14  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:08:14  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:08:14  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:08:14  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:08:14  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:08:14  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:08:14  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:08:14  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:08:14  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:08:15  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":2}}
2021-07-12 14:08:15  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"MoveII","register":2}}
2021-07-12 14:08:15  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  MoveII
2021-07-12 14:08:15  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:08:15  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:15  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:15  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":2,"filled":true}}Thread-33
2021-07-12 14:08:15  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 2true
2021-07-12 14:08:15  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":2,"filled":true}}Thread-33
2021-07-12 14:08:15  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 2true
2021-07-12 14:08:16  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:08:19  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:08:21  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:08:21  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:08:21  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:08:21  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:08:21  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:08:21  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:08:21  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:08:21  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:08:21  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:08:22  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":3}}
2021-07-12 14:08:22  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnLeft","register":3}}
2021-07-12 14:08:22  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  TurnLeft
2021-07-12 14:08:22  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:08:22  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:22  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:22  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":3,"filled":true}}Thread-33
2021-07-12 14:08:22  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":3,"filled":true}}Thread-33
2021-07-12 14:08:22  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 3true
2021-07-12 14:08:22  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 3true
2021-07-12 14:08:24  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:08:24  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:08:24  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:08:24  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:08:24  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:08:24  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:08:24  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:08:24  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:08:24  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:08:24  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":4}}
2021-07-12 14:08:24  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"TurnRight","register":4}}
2021-07-12 14:08:24  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  TurnRight
2021-07-12 14:08:24  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:08:24  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:24  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:24  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":4,"filled":true}}Thread-33
2021-07-12 14:08:24  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 4true
2021-07-12 14:08:24  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":4,"filled":true}}Thread-33
2021-07-12 14:08:24  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 4true
2021-07-12 14:08:26  [ JavaFX Application Thread:client.model.Client:1417 ] - [ INFO ]  {"messageType":"SelectedCard","messageBody":{"card":"Again","register":5}}
2021-07-12 14:08:26  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectedCard","messageBody":{"card":"Again","register":5}}
2021-07-12 14:08:26  [ Thread-0:protocol.ExecuteOrder:240 ] - [ INFO ]  Again
2021-07-12 14:08:26  [ Thread-0:server.network.Server:489 ] - [ INFO ]  server informs card selected
2021-07-12 14:08:26  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:26  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:26  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":5,"filled":true}}Thread-33
2021-07-12 14:08:26  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 5true
2021-07-12 14:08:26  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardSelected","messageBody":{"clientID":33,"register":5,"filled":true}}Thread-33
2021-07-12 14:08:26  [ JavaFX Application Thread:client.model.Client:980 ] - [ INFO ]  33 has for register 5true
2021-07-12 14:08:26  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:08:27  [ JavaFX Application Thread:client.model.Client:1439 ] - [ INFO ]  {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-12 14:08:27  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"SelectionFinished","messageBody":{"clientID":33}}
2021-07-12 14:08:27  [ Thread-0:server.game.Game:407 ] - [ INFO ]  game stops timer
2021-07-12 14:08:27  [ Thread-0:protocol.ExecuteOrder:264 ] - [ INFO ]  executeOrder all clients finished programming in time
2021-07-12 14:08:27  [ Thread-0:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 14:08:27  [ Thread-0:server.network.Server:565 ] - [ INFO ]  Server checked registerPointer 0
2021-07-12 14:08:27  [ Thread-0:server.network.Server:569 ] - [ INFO ]  server inform cards of current register
2021-07-12 14:08:27  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:27  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:27  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:08:27  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-33
2021-07-12 14:08:27  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":3}}Thread-33
2021-07-12 14:08:27  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:27  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:27  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"BackUp"},{"clientID":100,"cardName":"MoveII"}]}}Thread-33
2021-07-12 14:08:27  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentCards","messageBody":{"currentRegistersAllClients":[{"clientID":33,"cardName":"BackUp"},{"clientID":100,"cardName":"MoveII"}]}}Thread-33
2021-07-12 14:08:27  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  33 has for current register: BackUp
2021-07-12 14:08:27  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  33 has for current register: BackUp
2021-07-12 14:08:27  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:27  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:27  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  100 has for current register: MoveII
2021-07-12 14:08:27  [ JavaFX Application Thread:client.model.Client:1008 ] - [ INFO ]  100 has for current register: MoveII
2021-07-12 14:08:27  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:08:27  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:08:29  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:08:30  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"BackUp"}}
2021-07-12 14:08:30  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"BackUp"}}
2021-07-12 14:08:30  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:08:30  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:08:30  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:30  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:30  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:08:30  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:08:30  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"BackUp"}}Thread-33
2021-07-12 14:08:30  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played BackUp
2021-07-12 14:08:30  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"BackUp"}}Thread-33
2021-07-12 14:08:30  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played BackUp
2021-07-12 14:08:30  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:08:30  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":7,"y":4}}
2021-07-12 14:08:30  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:30  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:30  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:08:30  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":7,"y":4}}Thread-33
2021-07-12 14:08:30  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":7,"y":4}}Thread-33
2021-07-12 14:08:30  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:08:30  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:30  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:08:30  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:08:30  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:08:31  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:08:31  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:08:31  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:08:31  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:08:31  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:08:31  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:08:31  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:08:31  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:08:31  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:08:34  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:08:34  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:08:34  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:08:34  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:08:34  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:08:34  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:08:34  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:08:34  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:08:34  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:08:36  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:08:39  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:08:41  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:08:41  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:08:41  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:08:41  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:08:41  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:08:41  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:08:41  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:08:41  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:08:41  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:08:44  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:08:44  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:08:44  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:08:44  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:08:44  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:08:44  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:08:44  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:08:44  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:08:44  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:08:46  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:08:49  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:08:51  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:08:51  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:08:51  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:08:51  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:08:51  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:08:51  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:08:51  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:08:51  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:08:51  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:08:54  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:08:54  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:08:54  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:08:54  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:08:54  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:08:54  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:08:54  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:08:54  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:08:54  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:08:56  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:08:59  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:09:01  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:09:01  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:09:01  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:09:01  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:09:01  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:09:01  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:09:01  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:09:01  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:09:01  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:09:04  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:09:04  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:09:04  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:09:04  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:09:04  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:09:04  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:09:04  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:09:04  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:09:04  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:09:06  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:09:09  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:09:11  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:09:11  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:09:11  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:09:11  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:09:11  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:09:11  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:09:11  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:09:11  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:09:11  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:09:14  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:09:14  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:09:14  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:09:14  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:09:14  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:09:14  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:09:14  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:09:14  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:09:14  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:09:16  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:09:19  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:09:21  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:09:21  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:09:21  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:09:21  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:09:21  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:09:21  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:09:21  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:09:21  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:09:21  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:09:24  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:09:24  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:09:24  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:09:24  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:09:24  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:09:24  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:09:24  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:09:24  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:09:24  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:09:26  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:09:29  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:09:31  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:09:31  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:09:31  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:09:31  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:09:31  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:09:31  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:09:31  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:09:31  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:09:31  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:09:34  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:09:34  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:09:34  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:09:34  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:09:34  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:09:34  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:09:34  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:09:34  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:09:34  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:09:36  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:09:39  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:09:41  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:09:41  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:09:41  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:09:41  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:09:41  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:09:41  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:09:41  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:09:41  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:09:41  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:09:44  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:09:44  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:09:44  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:09:44  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:09:44  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:09:44  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:09:44  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:09:44  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:09:44  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:09:46  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:09:49  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:09:51  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:09:51  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:09:51  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:09:51  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:09:51  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:09:51  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:09:51  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:09:51  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:09:51  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:09:54  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:09:54  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:09:54  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:09:54  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:09:54  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:09:54  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:09:54  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:09:54  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:09:54  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:09:56  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:09:59  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:10:01  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:10:01  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:10:01  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:10:01  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:10:01  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:10:01  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:10:01  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:10:01  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:10:01  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:10:04  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:10:04  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:10:04  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:10:04  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:10:04  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:10:04  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:10:04  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:10:04  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:10:04  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:10:06  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:10:09  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:10:11  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:10:11  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:10:11  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:10:11  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:10:11  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:10:11  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:10:11  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:10:11  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:10:11  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:10:14  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:10:14  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:10:14  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:10:14  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:10:14  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:10:14  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:10:14  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:10:14  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:10:14  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:10:16  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:10:19  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:10:21  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:10:21  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:10:21  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:10:21  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:10:21  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:10:21  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:10:21  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:10:21  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:10:21  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:10:24  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:10:24  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:10:24  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:10:24  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:10:24  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:10:24  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:10:24  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:10:24  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:10:24  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:10:26  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:10:29  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:10:31  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:10:31  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:10:31  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:10:31  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:10:31  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:10:31  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:10:31  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:10:31  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:10:31  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:10:34  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:10:34  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:10:34  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:10:34  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:10:34  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:10:34  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:10:34  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:10:34  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:10:34  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:10:36  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:10:39  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:10:41  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:10:41  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:10:41  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:10:41  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:10:41  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:10:41  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:10:41  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:10:41  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:10:41  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:10:44  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:10:44  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:10:44  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:10:44  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:10:44  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:10:44  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:10:44  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:10:44  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:10:44  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:10:46  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:10:49  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:10:51  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:10:51  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:10:51  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:10:51  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:10:51  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:10:51  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:10:51  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:10:51  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:10:51  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:10:54  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:10:54  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:10:54  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:10:54  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:10:54  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:10:54  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:10:54  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:10:54  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:10:54  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:10:56  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:10:59  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:11:01  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:11:01  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:11:01  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:11:01  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:11:01  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:11:01  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:11:01  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:11:01  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:11:01  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:11:04  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:11:04  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:11:04  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:11:04  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:11:04  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:11:04  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:11:04  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:11:04  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:11:04  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:11:06  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:11:09  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:11:11  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:11:11  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:11:11  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:11:11  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:11:11  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:11:11  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:11:11  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:11:11  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:11:11  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:11:14  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:11:14  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:11:14  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:11:14  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:11:14  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:11:14  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:11:14  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:11:14  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:11:14  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:11:16  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:11:19  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:11:21  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:11:21  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:11:21  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:11:21  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:11:21  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:11:21  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:11:21  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:11:21  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:11:21  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:11:24  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:11:24  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:11:24  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:11:24  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:11:24  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:11:24  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:11:24  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:11:24  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:11:24  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:11:26  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:11:29  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:11:31  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:11:31  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:11:31  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:11:31  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:11:31  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:11:31  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:11:31  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:11:31  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:11:31  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:11:34  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:11:34  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:11:34  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:11:34  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:11:34  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:11:34  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:11:34  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:11:34  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:11:34  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:11:36  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:11:39  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:11:41  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:11:41  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:11:41  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:11:41  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:11:41  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:11:41  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:11:41  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:11:41  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:11:41  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:11:44  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:11:44  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:11:44  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:11:44  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:11:44  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:11:44  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:11:44  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:11:44  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:11:44  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:11:46  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:11:49  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:11:51  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:11:51  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:11:51  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:11:51  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:11:51  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:11:51  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:11:51  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:11:51  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:11:52  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:11:54  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:11:54  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:11:54  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:11:54  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:11:54  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:11:54  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:11:54  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:11:54  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:11:54  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:11:57  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:11:59  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:12:01  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:12:01  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:12:01  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:12:01  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:12:01  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:12:01  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:12:01  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:12:01  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:12:02  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:12:04  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:12:04  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:12:04  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:12:04  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:12:04  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:12:04  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:12:04  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:12:04  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:12:04  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:12:07  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:12:09  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:12:11  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:12:11  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:12:11  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:12:11  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:12:11  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:12:11  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:12:11  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:12:11  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:12:12  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:12:14  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:12:14  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:12:14  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:12:14  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:12:14  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:12:14  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:12:14  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:12:14  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:12:14  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:12:17  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:12:19  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:12:21  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:12:21  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:12:21  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:12:21  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:12:21  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:12:21  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:12:21  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:12:21  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:12:22  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:12:24  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:12:24  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:12:24  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:12:24  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:12:24  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:12:24  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:12:24  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:12:24  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:12:24  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:12:27  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:12:29  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:12:31  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:12:31  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:12:31  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:12:31  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:12:31  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:12:31  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:12:31  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:12:31  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:12:32  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:12:34  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:12:34  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:12:34  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:12:34  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:12:34  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:12:34  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:12:34  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:12:34  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:12:34  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:12:37  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:12:39  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:12:41  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:12:41  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:12:41  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:12:41  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:12:41  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:12:41  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:12:41  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:12:41  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:12:42  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:12:44  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:12:44  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:12:44  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:12:44  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:12:44  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:12:44  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:12:44  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:12:44  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:12:44  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:12:47  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:12:50  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:12:51  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:12:51  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:12:51  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:12:51  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:12:51  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:12:51  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:12:51  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:12:51  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:12:52  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:12:54  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:12:54  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:12:54  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:12:54  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:12:54  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:12:54  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:12:54  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:12:54  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:12:55  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:12:57  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:13:00  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:13:01  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:13:01  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:13:01  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:13:01  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:13:01  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:13:01  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:13:01  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:13:01  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:13:02  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:13:04  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:13:04  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:13:04  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:13:04  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:13:04  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:13:04  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:13:04  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:13:04  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:13:05  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:13:07  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:13:10  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:13:11  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:13:11  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:13:11  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:13:11  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:13:11  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:13:11  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:13:11  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:13:11  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:13:12  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:13:14  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:13:14  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:13:14  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:13:14  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:13:14  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:13:14  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:13:14  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:13:14  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:13:15  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:13:17  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:13:20  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:13:21  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:13:21  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:13:21  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:13:21  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:13:21  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:13:21  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:13:21  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:13:21  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:13:22  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:13:24  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:13:24  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:13:24  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:13:24  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:13:24  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:13:24  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:13:24  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:13:24  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:13:25  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:13:27  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:13:30  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:13:31  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:13:31  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:13:31  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:13:31  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:13:31  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:13:31  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:13:31  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:13:31  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:13:32  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:13:34  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:13:34  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:13:34  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:13:34  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:13:34  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:13:34  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:13:34  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:13:34  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:13:35  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:13:37  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:13:40  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:13:41  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:13:41  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:13:41  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:13:41  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:13:41  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:13:41  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:13:41  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:13:41  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:13:42  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:13:44  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:13:44  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:13:44  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:13:44  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:13:44  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:13:44  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:13:44  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:13:44  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:13:45  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:13:47  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:13:50  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:13:51  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:13:51  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:13:51  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:13:51  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:13:51  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:13:51  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:13:51  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:13:51  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:13:52  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:13:54  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:13:54  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:13:54  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:13:54  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:13:54  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:13:54  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:13:54  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:13:54  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:13:55  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:13:57  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:14:00  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:14:01  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:14:01  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:14:01  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:14:01  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:14:01  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:14:01  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:14:01  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:14:01  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:14:02  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:14:04  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:14:04  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:14:04  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:14:04  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:14:04  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:14:04  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:14:04  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:14:04  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:14:05  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:14:07  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:14:10  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:14:11  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:14:11  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:14:11  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:14:11  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:14:11  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:14:11  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:14:11  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:14:11  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:14:12  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:14:14  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:14:14  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:14:14  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:14:14  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:14:14  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:14:14  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:14:14  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:14:14  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:14:15  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:14:17  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:14:20  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:14:21  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:14:21  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:14:21  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:14:21  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:14:21  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:14:21  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:14:21  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:14:21  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:14:22  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:14:24  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:14:24  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:14:24  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:14:24  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:14:24  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:14:24  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:14:24  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:14:24  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:14:25  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:14:27  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:14:30  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:14:31  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:14:31  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:14:31  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:14:31  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:14:31  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:14:31  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:14:31  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:14:31  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:14:32  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:14:34  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:14:34  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:14:34  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:14:34  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:14:34  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:14:34  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:14:34  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:14:34  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:14:35  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:14:37  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:14:40  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:14:41  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:14:41  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:14:41  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:14:41  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:14:41  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:14:41  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:14:41  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:14:41  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:14:42  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:14:44  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:14:44  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:14:44  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:14:44  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:14:44  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:14:44  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:14:44  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:14:44  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:14:45  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:14:47  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:14:50  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:14:51  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:14:51  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:14:51  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:14:51  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:14:51  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:14:51  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:14:51  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:14:51  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:14:52  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:14:54  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:14:54  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:14:54  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:14:54  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:14:54  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:14:54  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:14:54  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:14:54  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:14:55  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:14:57  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:15:00  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:15:01  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:15:01  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:15:01  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:15:01  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:15:01  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:15:01  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:15:01  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:15:01  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:15:02  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:15:04  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:15:04  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:15:04  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:15:04  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:15:04  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:15:04  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:15:04  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:15:04  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:15:05  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:15:07  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:15:10  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:15:11  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:15:11  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:15:12  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:15:12  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:15:12  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:15:12  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:15:12  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:15:12  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:15:12  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:15:14  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:15:14  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:15:14  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:15:14  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:15:14  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:15:14  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:15:14  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:15:14  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:15:15  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:15:17  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:15:20  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:15:22  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:15:22  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:15:22  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:15:22  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:15:22  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:15:22  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:15:22  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:15:22  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:15:22  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:15:24  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:15:24  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:15:24  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:15:24  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:15:24  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:15:24  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:15:24  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:15:24  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:15:25  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:15:27  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:15:30  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:15:32  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:15:32  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:15:32  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:15:32  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:15:32  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:15:32  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:15:32  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:15:32  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:15:32  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:15:34  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:15:34  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:15:34  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:15:34  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:15:34  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:15:34  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:15:34  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:15:34  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:15:35  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:15:37  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:15:40  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:15:42  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:15:42  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:15:42  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:15:42  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:15:42  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:15:42  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:15:42  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:15:42  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:15:42  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:15:44  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:15:44  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:15:44  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:15:44  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:15:44  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:15:44  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:15:44  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:15:44  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:15:45  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:15:47  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:15:50  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:15:52  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:15:52  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:15:52  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:15:52  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:15:52  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:15:52  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:15:52  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:15:52  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:15:52  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:15:54  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:15:54  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:15:54  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:15:54  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:15:54  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:15:54  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:15:54  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:15:54  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:15:55  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:15:57  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:16:00  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:16:02  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:16:02  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:16:02  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:16:02  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:16:02  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:16:02  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:16:02  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:16:02  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:16:02  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:16:04  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:16:04  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:16:04  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:16:04  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:16:04  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:16:04  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:16:04  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:16:04  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:16:05  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:16:07  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:16:10  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:16:12  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:16:12  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:16:12  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:16:12  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:16:12  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:16:12  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:16:12  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:16:12  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:16:12  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:16:14  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:16:14  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:16:14  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:16:14  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:16:14  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:16:14  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:16:14  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:16:14  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:16:15  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:16:17  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:16:20  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:16:22  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:16:22  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:16:22  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:16:22  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:16:22  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:16:22  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:16:22  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:16:22  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:16:22  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:16:24  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:16:24  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:16:24  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:16:24  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:16:24  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:16:24  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:16:24  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:16:24  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:16:25  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:16:27  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:16:30  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:16:32  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:16:32  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:16:32  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:16:32  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:16:32  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:16:32  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:16:32  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:16:32  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:16:32  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:16:34  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:16:34  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:16:34  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:16:34  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:16:34  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:16:34  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:16:34  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:16:34  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:16:35  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:16:37  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:16:40  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:16:42  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:16:42  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:16:42  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:16:42  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:16:42  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:16:42  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:16:42  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:16:42  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:16:42  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:16:44  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:16:44  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:16:44  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:16:44  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:16:44  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:16:44  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:16:44  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:16:44  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:16:45  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:16:47  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:16:50  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:16:52  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:16:52  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:16:52  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:16:52  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:16:52  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:16:52  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:16:52  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:16:52  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:16:52  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:16:54  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:16:54  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:16:54  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:16:54  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:16:54  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:16:54  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:16:54  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:16:54  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:16:55  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:16:57  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 14:16:57  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 14:16:57  [ Thread-1:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:16:57  [ Thread-1:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:16:57  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:16:57  [ Thread-1:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:16:57  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:16:57  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveII"}}Thread-33
2021-07-12 14:16:57  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveII
2021-07-12 14:16:57  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":100,"card":"MoveII"}}Thread-33
2021-07-12 14:16:57  [ Thread-1:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:16:57  [ Thread-1:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:16:57  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 100 has played MoveII
2021-07-12 14:16:57  [ Thread-1:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:16:57  [ Thread-1:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":7,"y":1}}
2021-07-12 14:16:57  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:16:57  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:16:57  [ Thread-1:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:16:57  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":7,"y":1}}Thread-33
2021-07-12 14:16:57  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":7,"y":1}}Thread-33
2021-07-12 14:16:57  [ Thread-1:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:16:57  [ Thread-1:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":100,"x":5,"y":1}}
2021-07-12 14:16:57  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:16:57  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:16:57  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":5,"y":1}}Thread-33
2021-07-12 14:16:57  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":100,"x":5,"y":1}}Thread-33
2021-07-12 14:16:57  [ Thread-1:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 14:16:57  [ Thread-1:server.game.Game:747 ] - [ INFO ]  Game checks round over1
2021-07-12 14:16:57  [ Thread-1:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:16:57  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:16:57  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:16:57  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:16:57  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:16:57  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:16:59  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 14:16:59  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"MoveII"}}
2021-07-12 14:16:59  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:16:59  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:16:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:16:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:16:59  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:16:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-33
2021-07-12 14:16:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"MoveII"}}Thread-33
2021-07-12 14:16:59  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:16:59  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveII
2021-07-12 14:16:59  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played MoveII
2021-07-12 14:16:59  [ Thread-0:server.game.Game:814 ] - [ INFO ]  Game checks wall on board for move
2021-07-12 14:16:59  [ Thread-0:server.network.Server:627 ] - [ INFO ]  server informs positions
2021-07-12 14:16:59  [ Thread-0:server.network.Server:628 ] - [ INFO ]  {"messageType":"Movement","messageBody":{"clientID":33,"x":7,"y":2}}
2021-07-12 14:16:59  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:16:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:16:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:16:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":7,"y":2}}Thread-33
2021-07-12 14:16:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"Movement","messageBody":{"clientID":33,"x":7,"y":2}}Thread-33
2021-07-12 14:16:59  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 14:16:59  [ Thread-0:server.game.Game:747 ] - [ INFO ]  Game checks round over2
2021-07-12 14:16:59  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:16:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:16:59  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:16:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:16:59  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:17:00  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:17:02  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:17:02  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:17:02  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:17:02  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:17:02  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:17:02  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:17:02  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:17:02  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:17:02  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:17:02  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"TurnLeft"}}
2021-07-12 14:17:02  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"TurnLeft"}}
2021-07-12 14:17:02  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:17:02  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:17:02  [ Thread-0:server.network.Server:642 ] - [ INFO ]  server informs turnDirection
2021-07-12 14:17:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:02  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:17:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnLeft"}}Thread-33
2021-07-12 14:17:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnLeft"}}Thread-33
2021-07-12 14:17:02  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played TurnLeft
2021-07-12 14:17:02  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played TurnLeft
2021-07-12 14:17:02  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 14:17:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"counterclockwise"}}Thread-33
2021-07-12 14:17:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:02  [ Thread-0:server.game.Game:747 ] - [ INFO ]  Game checks round over3
2021-07-12 14:17:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"counterclockwise"}}Thread-33
2021-07-12 14:17:02  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:17:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:02  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:17:02  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:17:04  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:17:04  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:17:04  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:17:04  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:17:04  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:17:04  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:17:04  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:17:04  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:17:05  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:17:06  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-12 14:17:06  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"TurnRight"}}
2021-07-12 14:17:06  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:17:06  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:17:06  [ Thread-0:server.network.Server:642 ] - [ INFO ]  server informs turnDirection
2021-07-12 14:17:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:06  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:17:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnRight"}}Thread-33
2021-07-12 14:17:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"TurnRight"}}Thread-33
2021-07-12 14:17:06  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played TurnRight
2021-07-12 14:17:06  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played TurnRight
2021-07-12 14:17:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-33
2021-07-12 14:17:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-33
2021-07-12 14:17:06  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 14:17:06  [ Thread-0:server.game.Game:747 ] - [ INFO ]  Game checks round over4
2021-07-12 14:17:06  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:17:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:06  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:17:06  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":33}}Thread-33
2021-07-12 14:17:07  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:17:10  [ JavaFX Application Thread:client.model.Client:1454 ] - [ INFO ]  {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-12 14:17:10  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"PlayCard","messageBody":{"card":"Again"}}
2021-07-12 14:17:10  [ Thread-0:protocol.ExecuteOrder:280 ] - [ INFO ]  executeOrder playCard
2021-07-12 14:17:10  [ Thread-0:server.network.Server:583 ] - [ INFO ]  server informs who played which card
2021-07-12 14:17:10  [ Thread-0:server.network.Server:642 ] - [ INFO ]  server informs turnDirection
2021-07-12 14:17:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"Again"}}Thread-33
2021-07-12 14:17:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CardPlayed","messageBody":{"clientID":33,"card":"Again"}}Thread-33
2021-07-12 14:17:10  [ Thread-0:server.game.Game:682 ] - [ INFO ]  Game checks turn over
2021-07-12 14:17:10  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played Again
2021-07-12 14:17:10  [ JavaFX Application Thread:client.model.Client:1015 ] - [ INFO ]  client 33 has played Again
2021-07-12 14:17:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-33
2021-07-12 14:17:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"PlayerTurning","messageBody":{"clientID":33,"rotation":"clockwise"}}Thread-33
2021-07-12 14:17:10  [ Thread-0:protocol.ExecuteOrder:320 ] - [ INFO ]  ExecuteOrder: turn is over!
2021-07-12 14:17:10  [ Thread-0:server.game.Game:747 ] - [ INFO ]  Game checks round over5
2021-07-12 14:17:10  [ Thread-0:protocol.ExecuteOrder:325 ] - [ INFO ]  ExecuteOrder: round is over!
2021-07-12 14:17:10  [ Thread-0:server.network.Server:358 ] - [ INFO ]  server sends phase info
2021-07-12 14:17:10  [ Thread-0:server.network.Server:745 ] - [ INFO ]  server informs Refill upgrade shop.
2021-07-12 14:17:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:10  [ Thread-0:server.network.Server:371 ] - [ INFO ]  server informs current player id
2021-07-12 14:17:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-33
2021-07-12 14:17:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"ActivePhase","messageBody":{"phase":1}}Thread-33
2021-07-12 14:17:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["SpamBlocker","AdminPrivilege"]}}Thread-33
2021-07-12 14:17:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"RefillShop","messageBody":{"cards":["SpamBlocker","AdminPrivilege"]}}Thread-33
2021-07-12 14:17:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:10  [ Thread-33:client.model.Client:722 ] - [ INFO ]  by executeOrder Thread-33
2021-07-12 14:17:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:17:10  [ Thread-33:client.model.Client:693 ] - [ INFO ]  json from server: {"messageType":"CurrentPlayer","messageBody":{"clientID":100}}Thread-33
2021-07-12 14:17:10  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:17:12  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:17:12  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:17:12  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:17:12  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:17:12  [ Thread-0:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:17:12  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 33 sent alive checked back.===========
2021-07-12 14:17:12  [ Thread-0:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 33: true
2021-07-12 14:17:12  [ Thread-0:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 33: false
2021-07-12 14:17:12  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:17:14  [ Thread-5:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 100
2021-07-12 14:17:14  [ Thread-5:server.network.AliveCheck:64 ] - [ INFO ]  client 100 flag connect = false
2021-07-12 14:17:14  [ Thread-5:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 100
2021-07-12 14:17:14  [ Thread-1:server.network.ServerThread:112 ] - [ INFO ]  excuteOrder by server {"messageType":"Alive","messageBody":null}
2021-07-12 14:17:14  [ Thread-33:client.model.Client:689 ] - [ INFO ]  json from server: {"messageType":"Alive","messageBody":null}Thread-33
2021-07-12 14:17:14  [ Thread-1:protocol.ExecuteOrder:107 ] - [ INFO ]  received alive backinfo, before setFalse 100: true
2021-07-12 14:17:14  [ Thread-33:client.model.Client:690 ] - [ INFO ]  ==========client 100 sent alive checked back.===========
2021-07-12 14:17:14  [ Thread-1:protocol.ExecuteOrder:109 ] - [ INFO ]  received alive backinfo, after setFalse 100: false
2021-07-12 14:17:15  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:17:17  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: false
2021-07-12 14:17:20  [ Thread-4:server.network.Connected:70 ] - [ INFO ]  100 in while loop print flagconnect: false
2021-07-12 14:17:22  [ Thread-3:server.network.AliveCheck:63 ] - [ INFO ]  AliveCheck sends alive check, clientNr. 33
2021-07-12 14:17:22  [ Thread-3:server.network.AliveCheck:64 ] - [ INFO ]  client 33 flag connect = false
2021-07-12 14:17:22  [ Thread-3:server.network.Server:231 ] - [ INFO ]  Server sends Alive check for client 33
2021-07-12 14:17:22  [ Thread-2:server.network.Connected:70 ] - [ INFO ]  33 in while loop print flagconnect: true
2021-07-12 14:17:22  [ Thread-2:server.network.Connected:73 ] - [ INFO ]  33 in first if print flagconnect: true
